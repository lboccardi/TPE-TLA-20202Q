Nonterminals useless in grammar

    arrow


Rules useless in grammar

   78 arrow: WHILE
   79      | IF


State 56 conflicts: 1 reduce/reduce
State 58 conflicts: 1 reduce/reduce


Grammar

    0 $accept: start $end

    1 start: MAIN EXEC program END_EXEC
    2      | function start

    3 function: INT FUNCTION ALPHA OPEN_P params CLOSE_P EXEC program END_EXEC
    4         | STRING FUNCTION ALPHA OPEN_P params CLOSE_P EXEC program END_EXEC

    5 type: INT
    6     | STRING

    7 params: type ALPHA
    8       | type ALPHA COMMA params
    9       | %empty

   10 args: assignment
   11     | assignment COMMA args
   12     | call
   13     | %empty

   14 call: ALPHA OPEN_P args CLOSE_P

   15 program: var END program
   16        | call END program
   17        | RETURN assignment END
   18        | get program
   19        | STDOUT out END program
   20        | OPEN_P rule operator rule CLOSE_P CONDITIONAL WHILE EXEC program END_EXEC program
   21        | OPEN_P rule operator rule CLOSE_P CONDITIONAL IF EXEC program END_EXEC program
   22        | OPEN_P rule operator rule CLOSE_P CONDITIONAL IF EXEC program END_EXEC ELSE EXEC program END_EXEC program
   23        | %empty

   24 get: STDIN OPEN_P ALPHA COMMA DIGIT CLOSE_P END

   25 out: SPACE_ALPHA out
   26    | ESCAPE SPACE_ALPHA ESCAPE out
   27    | %empty
   28    | ALPHA out
   29    | ESCAPE ALPHA ESCAPE out

   30 var: INT ALPHA ASSIGN DIGIT operation
   31    | INT ALPHA ASSIGN ALPHA operation
   32    | STRING ALPHA ASSIGN STRING_VALUE
   33    | INT ALPHA ARRAY DIGIT ASSIGN digit_array
   34    | STRING ALPHA ARRAY DIGIT ASSIGN alpha_array
   35    | INT ALPHA ASSIGN CONVERT OPEN_P ALPHA CLOSE_P
   36    | INT ALPHA ASSIGN LENGTH OPEN_P ALPHA CLOSE_P
   37    | INT ALPHA
   38    | STRING ALPHA
   39    | INT ALPHA ARRAY DIGIT
   40    | STRING ALPHA ARRAY DIGIT
   41    | ALPHA ASSIGN DIGIT
   42    | ALPHA ASSIGN STRING_VALUE
   43    | ALPHA ASSIGN assignment operation
   44    | ALPHA ASSIGN ALPHA ARRAY DIGIT
   45    | ALPHA ASSIGN ALPHA ARRAY ALPHA
   46    | INT ALPHA ASSIGN call
   47    | STRING ALPHA ASSIGN call
   48    | ALPHA ASSIGN call
   49    | ALPHA ARRAY DIGIT ASSIGN DIGIT
   50    | ALPHA ARRAY DIGIT ASSIGN STRING_VALUE

   51 operation: op DIGIT operation
   52          | op ALPHA operation
   53          | %empty

   54 assignment: ALPHA
   55           | DIGIT
   56           | STRING_VALUE

   57 alpha_array: STRING_VALUE COMMA alpha_array
   58            | STRING_VALUE

   59 digit_array: DIGIT COMMA digit_array
   60            | DIGIT

   61 rule: OPEN_P rule operator rule CLOSE_P
   62     | assignment

   63 operator: op
   64         | L
   65         | G
   66         | LE
   67         | GE
   68         | EQ
   69         | NE
   70         | NOT
   71         | OR
   72         | AND

   73 op: PLUS
   74   | MINUS
   75   | DIV
   76   | TIMES
   77   | MOD


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    DIGIT <stringValue> (258) 24 30 33 34 39 40 41 44 49 50 51 55 59 60
    ALPHA <stringValue> (259) 3 4 7 8 14 24 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 52 54
    SPACE_ALPHA <stringValue> (260) 25 26
    STRING_VALUE <stringValue> (261) 32 42 50 56 57 58
    INT <stringValue> (262) 3 5 30 31 33 35 36 37 39 46
    STRING <stringValue> (263) 4 6 32 34 38 40 47
    PLUS <stringValue> (264) 73
    MINUS <stringValue> (265) 74
    TIMES <stringValue> (266) 76
    DIV <stringValue> (267) 75
    MOD <stringValue> (268) 77
    END (269) 15 16 17 19 24
    OPEN_P (270) 3 4 14 20 21 22 24 35 36 61
    CLOSE_P (271) 3 4 14 20 21 22 24 35 36 61
    CONDITIONAL (272) 20 21 22
    EXEC (273) 1 3 4 20 21 22
    END_EXEC (274) 1 3 4 20 21 22
    IF (275) 21 22
    ELSE (276) 22
    ESCAPE (277) 26 29
    WHILE (278) 20
    L (279) 64
    G (280) 65
    LE (281) 66
    GE (282) 67
    EQ (283) 68
    NE (284) 69
    NOT (285) 70
    OR (286) 71
    AND (287) 72
    ASSIGN (288) 30 31 32 33 34 35 36 41 42 43 44 45 46 47 48 49 50
    RETURN (289) 17
    MAIN (290) 1
    STDIN (291) 24
    STDOUT (292) 19
    CONVERT (293) 35
    LENGTH (294) 36
    FUNCTION (295) 3 4
    COMMA (296) 8 11 24 57 59
    ARRAY (297) 33 34 39 40 44 45 49 50


Nonterminals, with rules where they appear

    $accept (43)
        on left: 0
    start <stringValue> (44)
        on left: 1 2
        on right: 0 2
    function <stringValue> (45)
        on left: 3 4
        on right: 2
    type <stringValue> (46)
        on left: 5 6
        on right: 7 8
    params <stringValue> (47)
        on left: 7 8 9
        on right: 3 4 8
    args <stringValue> (48)
        on left: 10 11 12 13
        on right: 11 14
    call <stringValue> (49)
        on left: 14
        on right: 12 16 46 47 48
    program <stringValue> (50)
        on left: 15 16 17 18 19 20 21 22 23
        on right: 1 3 4 15 16 18 19 20 21 22
    get <stringValue> (51)
        on left: 24
        on right: 18
    out <stringValue> (52)
        on left: 25 26 27 28 29
        on right: 19 25 26 28 29
    var <stringValue> (53)
        on left: 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50
        on right: 15
    operation <stringValue> (54)
        on left: 51 52 53
        on right: 30 31 43 51 52
    assignment <stringValue> (55)
        on left: 54 55 56
        on right: 10 11 17 43 62
    alpha_array <stringValue> (56)
        on left: 57 58
        on right: 34 57
    digit_array <stringValue> (57)
        on left: 59 60
        on right: 33 59
    rule <stringValue> (58)
        on left: 61 62
        on right: 20 21 22 61
    operator <stringValue> (59)
        on left: 63 64 65 66 67 68 69 70 71 72
        on right: 20 21 22 61
    op <stringValue> (60)
        on left: 73 74 75 76 77
        on right: 51 52 63


State 0

    0 $accept: . start $end

    INT     shift, and go to state 1
    STRING  shift, and go to state 2
    MAIN    shift, and go to state 3

    start     go to state 4
    function  go to state 5


State 1

    3 function: INT . FUNCTION ALPHA OPEN_P params CLOSE_P EXEC program END_EXEC

    FUNCTION  shift, and go to state 6


State 2

    4 function: STRING . FUNCTION ALPHA OPEN_P params CLOSE_P EXEC program END_EXEC

    FUNCTION  shift, and go to state 7


State 3

    1 start: MAIN . EXEC program END_EXEC

    EXEC  shift, and go to state 8


State 4

    0 $accept: start . $end

    $end  shift, and go to state 9


State 5

    2 start: function . start

    INT     shift, and go to state 1
    STRING  shift, and go to state 2
    MAIN    shift, and go to state 3

    start     go to state 10
    function  go to state 5


State 6

    3 function: INT FUNCTION . ALPHA OPEN_P params CLOSE_P EXEC program END_EXEC

    ALPHA  shift, and go to state 11


State 7

    4 function: STRING FUNCTION . ALPHA OPEN_P params CLOSE_P EXEC program END_EXEC

    ALPHA  shift, and go to state 12


State 8

    1 start: MAIN EXEC . program END_EXEC

    ALPHA   shift, and go to state 13
    INT     shift, and go to state 14
    STRING  shift, and go to state 15
    OPEN_P  shift, and go to state 16
    RETURN  shift, and go to state 17
    STDIN   shift, and go to state 18
    STDOUT  shift, and go to state 19

    $default  reduce using rule 23 (program)

    call     go to state 20
    program  go to state 21
    get      go to state 22
    var      go to state 23


State 9

    0 $accept: start $end .

    $default  accept


State 10

    2 start: function start .

    $default  reduce using rule 2 (start)


State 11

    3 function: INT FUNCTION ALPHA . OPEN_P params CLOSE_P EXEC program END_EXEC

    OPEN_P  shift, and go to state 24


State 12

    4 function: STRING FUNCTION ALPHA . OPEN_P params CLOSE_P EXEC program END_EXEC

    OPEN_P  shift, and go to state 25


State 13

   14 call: ALPHA . OPEN_P args CLOSE_P
   41 var: ALPHA . ASSIGN DIGIT
   42    | ALPHA . ASSIGN STRING_VALUE
   43    | ALPHA . ASSIGN assignment operation
   44    | ALPHA . ASSIGN ALPHA ARRAY DIGIT
   45    | ALPHA . ASSIGN ALPHA ARRAY ALPHA
   48    | ALPHA . ASSIGN call
   49    | ALPHA . ARRAY DIGIT ASSIGN DIGIT
   50    | ALPHA . ARRAY DIGIT ASSIGN STRING_VALUE

    OPEN_P  shift, and go to state 26
    ASSIGN  shift, and go to state 27
    ARRAY   shift, and go to state 28


State 14

   30 var: INT . ALPHA ASSIGN DIGIT operation
   31    | INT . ALPHA ASSIGN ALPHA operation
   33    | INT . ALPHA ARRAY DIGIT ASSIGN digit_array
   35    | INT . ALPHA ASSIGN CONVERT OPEN_P ALPHA CLOSE_P
   36    | INT . ALPHA ASSIGN LENGTH OPEN_P ALPHA CLOSE_P
   37    | INT . ALPHA
   39    | INT . ALPHA ARRAY DIGIT
   46    | INT . ALPHA ASSIGN call

    ALPHA  shift, and go to state 29


State 15

   32 var: STRING . ALPHA ASSIGN STRING_VALUE
   34    | STRING . ALPHA ARRAY DIGIT ASSIGN alpha_array
   38    | STRING . ALPHA
   40    | STRING . ALPHA ARRAY DIGIT
   47    | STRING . ALPHA ASSIGN call

    ALPHA  shift, and go to state 30


State 16

   20 program: OPEN_P . rule operator rule CLOSE_P CONDITIONAL WHILE EXEC program END_EXEC program
   21        | OPEN_P . rule operator rule CLOSE_P CONDITIONAL IF EXEC program END_EXEC program
   22        | OPEN_P . rule operator rule CLOSE_P CONDITIONAL IF EXEC program END_EXEC ELSE EXEC program END_EXEC program

    DIGIT         shift, and go to state 31
    ALPHA         shift, and go to state 32
    STRING_VALUE  shift, and go to state 33
    OPEN_P        shift, and go to state 34

    assignment  go to state 35
    rule        go to state 36


State 17

   17 program: RETURN . assignment END

    DIGIT         shift, and go to state 31
    ALPHA         shift, and go to state 32
    STRING_VALUE  shift, and go to state 33

    assignment  go to state 37


State 18

   24 get: STDIN . OPEN_P ALPHA COMMA DIGIT CLOSE_P END

    OPEN_P  shift, and go to state 38


State 19

   19 program: STDOUT . out END program

    ALPHA        shift, and go to state 39
    SPACE_ALPHA  shift, and go to state 40
    ESCAPE       shift, and go to state 41

    $default  reduce using rule 27 (out)

    out  go to state 42


State 20

   16 program: call . END program

    END  shift, and go to state 43


State 21

    1 start: MAIN EXEC program . END_EXEC

    END_EXEC  shift, and go to state 44


State 22

   18 program: get . program

    ALPHA   shift, and go to state 13
    INT     shift, and go to state 14
    STRING  shift, and go to state 15
    OPEN_P  shift, and go to state 16
    RETURN  shift, and go to state 17
    STDIN   shift, and go to state 18
    STDOUT  shift, and go to state 19

    $default  reduce using rule 23 (program)

    call     go to state 20
    program  go to state 45
    get      go to state 22
    var      go to state 23


State 23

   15 program: var . END program

    END  shift, and go to state 46


State 24

    3 function: INT FUNCTION ALPHA OPEN_P . params CLOSE_P EXEC program END_EXEC

    INT     shift, and go to state 47
    STRING  shift, and go to state 48

    $default  reduce using rule 9 (params)

    type    go to state 49
    params  go to state 50


State 25

    4 function: STRING FUNCTION ALPHA OPEN_P . params CLOSE_P EXEC program END_EXEC

    INT     shift, and go to state 47
    STRING  shift, and go to state 48

    $default  reduce using rule 9 (params)

    type    go to state 49
    params  go to state 51


State 26

   14 call: ALPHA OPEN_P . args CLOSE_P

    DIGIT         shift, and go to state 31
    ALPHA         shift, and go to state 52
    STRING_VALUE  shift, and go to state 33

    $default  reduce using rule 13 (args)

    args        go to state 53
    call        go to state 54
    assignment  go to state 55


State 27

   41 var: ALPHA ASSIGN . DIGIT
   42    | ALPHA ASSIGN . STRING_VALUE
   43    | ALPHA ASSIGN . assignment operation
   44    | ALPHA ASSIGN . ALPHA ARRAY DIGIT
   45    | ALPHA ASSIGN . ALPHA ARRAY ALPHA
   48    | ALPHA ASSIGN . call

    DIGIT         shift, and go to state 56
    ALPHA         shift, and go to state 57
    STRING_VALUE  shift, and go to state 58

    call        go to state 59
    assignment  go to state 60


State 28

   49 var: ALPHA ARRAY . DIGIT ASSIGN DIGIT
   50    | ALPHA ARRAY . DIGIT ASSIGN STRING_VALUE

    DIGIT  shift, and go to state 61


State 29

   30 var: INT ALPHA . ASSIGN DIGIT operation
   31    | INT ALPHA . ASSIGN ALPHA operation
   33    | INT ALPHA . ARRAY DIGIT ASSIGN digit_array
   35    | INT ALPHA . ASSIGN CONVERT OPEN_P ALPHA CLOSE_P
   36    | INT ALPHA . ASSIGN LENGTH OPEN_P ALPHA CLOSE_P
   37    | INT ALPHA .
   39    | INT ALPHA . ARRAY DIGIT
   46    | INT ALPHA . ASSIGN call

    ASSIGN  shift, and go to state 62
    ARRAY   shift, and go to state 63

    $default  reduce using rule 37 (var)


State 30

   32 var: STRING ALPHA . ASSIGN STRING_VALUE
   34    | STRING ALPHA . ARRAY DIGIT ASSIGN alpha_array
   38    | STRING ALPHA .
   40    | STRING ALPHA . ARRAY DIGIT
   47    | STRING ALPHA . ASSIGN call

    ASSIGN  shift, and go to state 64
    ARRAY   shift, and go to state 65

    $default  reduce using rule 38 (var)


State 31

   55 assignment: DIGIT .

    $default  reduce using rule 55 (assignment)


State 32

   54 assignment: ALPHA .

    $default  reduce using rule 54 (assignment)


State 33

   56 assignment: STRING_VALUE .

    $default  reduce using rule 56 (assignment)


State 34

   61 rule: OPEN_P . rule operator rule CLOSE_P

    DIGIT         shift, and go to state 31
    ALPHA         shift, and go to state 32
    STRING_VALUE  shift, and go to state 33
    OPEN_P        shift, and go to state 34

    assignment  go to state 35
    rule        go to state 66


State 35

   62 rule: assignment .

    $default  reduce using rule 62 (rule)


State 36

   20 program: OPEN_P rule . operator rule CLOSE_P CONDITIONAL WHILE EXEC program END_EXEC program
   21        | OPEN_P rule . operator rule CLOSE_P CONDITIONAL IF EXEC program END_EXEC program
   22        | OPEN_P rule . operator rule CLOSE_P CONDITIONAL IF EXEC program END_EXEC ELSE EXEC program END_EXEC program

    PLUS   shift, and go to state 67
    MINUS  shift, and go to state 68
    TIMES  shift, and go to state 69
    DIV    shift, and go to state 70
    MOD    shift, and go to state 71
    L      shift, and go to state 72
    G      shift, and go to state 73
    LE     shift, and go to state 74
    GE     shift, and go to state 75
    EQ     shift, and go to state 76
    NE     shift, and go to state 77
    NOT    shift, and go to state 78
    OR     shift, and go to state 79
    AND    shift, and go to state 80

    operator  go to state 81
    op        go to state 82


State 37

   17 program: RETURN assignment . END

    END  shift, and go to state 83


State 38

   24 get: STDIN OPEN_P . ALPHA COMMA DIGIT CLOSE_P END

    ALPHA  shift, and go to state 84


State 39

   28 out: ALPHA . out

    ALPHA        shift, and go to state 39
    SPACE_ALPHA  shift, and go to state 40
    ESCAPE       shift, and go to state 41

    $default  reduce using rule 27 (out)

    out  go to state 85


State 40

   25 out: SPACE_ALPHA . out

    ALPHA        shift, and go to state 39
    SPACE_ALPHA  shift, and go to state 40
    ESCAPE       shift, and go to state 41

    $default  reduce using rule 27 (out)

    out  go to state 86


State 41

   26 out: ESCAPE . SPACE_ALPHA ESCAPE out
   29    | ESCAPE . ALPHA ESCAPE out

    ALPHA        shift, and go to state 87
    SPACE_ALPHA  shift, and go to state 88


State 42

   19 program: STDOUT out . END program

    END  shift, and go to state 89


State 43

   16 program: call END . program

    ALPHA   shift, and go to state 13
    INT     shift, and go to state 14
    STRING  shift, and go to state 15
    OPEN_P  shift, and go to state 16
    RETURN  shift, and go to state 17
    STDIN   shift, and go to state 18
    STDOUT  shift, and go to state 19

    $default  reduce using rule 23 (program)

    call     go to state 20
    program  go to state 90
    get      go to state 22
    var      go to state 23


State 44

    1 start: MAIN EXEC program END_EXEC .

    $default  reduce using rule 1 (start)


State 45

   18 program: get program .

    $default  reduce using rule 18 (program)


State 46

   15 program: var END . program

    ALPHA   shift, and go to state 13
    INT     shift, and go to state 14
    STRING  shift, and go to state 15
    OPEN_P  shift, and go to state 16
    RETURN  shift, and go to state 17
    STDIN   shift, and go to state 18
    STDOUT  shift, and go to state 19

    $default  reduce using rule 23 (program)

    call     go to state 20
    program  go to state 91
    get      go to state 22
    var      go to state 23


State 47

    5 type: INT .

    $default  reduce using rule 5 (type)


State 48

    6 type: STRING .

    $default  reduce using rule 6 (type)


State 49

    7 params: type . ALPHA
    8       | type . ALPHA COMMA params

    ALPHA  shift, and go to state 92


State 50

    3 function: INT FUNCTION ALPHA OPEN_P params . CLOSE_P EXEC program END_EXEC

    CLOSE_P  shift, and go to state 93


State 51

    4 function: STRING FUNCTION ALPHA OPEN_P params . CLOSE_P EXEC program END_EXEC

    CLOSE_P  shift, and go to state 94


State 52

   14 call: ALPHA . OPEN_P args CLOSE_P
   54 assignment: ALPHA .

    OPEN_P  shift, and go to state 26

    $default  reduce using rule 54 (assignment)


State 53

   14 call: ALPHA OPEN_P args . CLOSE_P

    CLOSE_P  shift, and go to state 95


State 54

   12 args: call .

    $default  reduce using rule 12 (args)


State 55

   10 args: assignment .
   11     | assignment . COMMA args

    COMMA  shift, and go to state 96

    $default  reduce using rule 10 (args)


State 56

   41 var: ALPHA ASSIGN DIGIT .
   55 assignment: DIGIT .

    END       reduce using rule 41 (var)
    END       [reduce using rule 55 (assignment)]
    $default  reduce using rule 55 (assignment)


State 57

   14 call: ALPHA . OPEN_P args CLOSE_P
   44 var: ALPHA ASSIGN ALPHA . ARRAY DIGIT
   45    | ALPHA ASSIGN ALPHA . ARRAY ALPHA
   54 assignment: ALPHA .

    OPEN_P  shift, and go to state 26
    ARRAY   shift, and go to state 97

    $default  reduce using rule 54 (assignment)


State 58

   42 var: ALPHA ASSIGN STRING_VALUE .
   56 assignment: STRING_VALUE .

    END       reduce using rule 42 (var)
    END       [reduce using rule 56 (assignment)]
    $default  reduce using rule 56 (assignment)


State 59

   48 var: ALPHA ASSIGN call .

    $default  reduce using rule 48 (var)


State 60

   43 var: ALPHA ASSIGN assignment . operation

    PLUS   shift, and go to state 67
    MINUS  shift, and go to state 68
    TIMES  shift, and go to state 69
    DIV    shift, and go to state 70
    MOD    shift, and go to state 71

    $default  reduce using rule 53 (operation)

    operation  go to state 98
    op         go to state 99


State 61

   49 var: ALPHA ARRAY DIGIT . ASSIGN DIGIT
   50    | ALPHA ARRAY DIGIT . ASSIGN STRING_VALUE

    ASSIGN  shift, and go to state 100


State 62

   30 var: INT ALPHA ASSIGN . DIGIT operation
   31    | INT ALPHA ASSIGN . ALPHA operation
   35    | INT ALPHA ASSIGN . CONVERT OPEN_P ALPHA CLOSE_P
   36    | INT ALPHA ASSIGN . LENGTH OPEN_P ALPHA CLOSE_P
   46    | INT ALPHA ASSIGN . call

    DIGIT    shift, and go to state 101
    ALPHA    shift, and go to state 102
    CONVERT  shift, and go to state 103
    LENGTH   shift, and go to state 104

    call  go to state 105


State 63

   33 var: INT ALPHA ARRAY . DIGIT ASSIGN digit_array
   39    | INT ALPHA ARRAY . DIGIT

    DIGIT  shift, and go to state 106


State 64

   32 var: STRING ALPHA ASSIGN . STRING_VALUE
   47    | STRING ALPHA ASSIGN . call

    ALPHA         shift, and go to state 107
    STRING_VALUE  shift, and go to state 108

    call  go to state 109


State 65

   34 var: STRING ALPHA ARRAY . DIGIT ASSIGN alpha_array
   40    | STRING ALPHA ARRAY . DIGIT

    DIGIT  shift, and go to state 110


State 66

   61 rule: OPEN_P rule . operator rule CLOSE_P

    PLUS   shift, and go to state 67
    MINUS  shift, and go to state 68
    TIMES  shift, and go to state 69
    DIV    shift, and go to state 70
    MOD    shift, and go to state 71
    L      shift, and go to state 72
    G      shift, and go to state 73
    LE     shift, and go to state 74
    GE     shift, and go to state 75
    EQ     shift, and go to state 76
    NE     shift, and go to state 77
    NOT    shift, and go to state 78
    OR     shift, and go to state 79
    AND    shift, and go to state 80

    operator  go to state 111
    op        go to state 82


State 67

   73 op: PLUS .

    $default  reduce using rule 73 (op)


State 68

   74 op: MINUS .

    $default  reduce using rule 74 (op)


State 69

   76 op: TIMES .

    $default  reduce using rule 76 (op)


State 70

   75 op: DIV .

    $default  reduce using rule 75 (op)


State 71

   77 op: MOD .

    $default  reduce using rule 77 (op)


State 72

   64 operator: L .

    $default  reduce using rule 64 (operator)


State 73

   65 operator: G .

    $default  reduce using rule 65 (operator)


State 74

   66 operator: LE .

    $default  reduce using rule 66 (operator)


State 75

   67 operator: GE .

    $default  reduce using rule 67 (operator)


State 76

   68 operator: EQ .

    $default  reduce using rule 68 (operator)


State 77

   69 operator: NE .

    $default  reduce using rule 69 (operator)


State 78

   70 operator: NOT .

    $default  reduce using rule 70 (operator)


State 79

   71 operator: OR .

    $default  reduce using rule 71 (operator)


State 80

   72 operator: AND .

    $default  reduce using rule 72 (operator)


State 81

   20 program: OPEN_P rule operator . rule CLOSE_P CONDITIONAL WHILE EXEC program END_EXEC program
   21        | OPEN_P rule operator . rule CLOSE_P CONDITIONAL IF EXEC program END_EXEC program
   22        | OPEN_P rule operator . rule CLOSE_P CONDITIONAL IF EXEC program END_EXEC ELSE EXEC program END_EXEC program

    DIGIT         shift, and go to state 31
    ALPHA         shift, and go to state 32
    STRING_VALUE  shift, and go to state 33
    OPEN_P        shift, and go to state 34

    assignment  go to state 35
    rule        go to state 112


State 82

   63 operator: op .

    $default  reduce using rule 63 (operator)


State 83

   17 program: RETURN assignment END .

    $default  reduce using rule 17 (program)


State 84

   24 get: STDIN OPEN_P ALPHA . COMMA DIGIT CLOSE_P END

    COMMA  shift, and go to state 113


State 85

   28 out: ALPHA out .

    $default  reduce using rule 28 (out)


State 86

   25 out: SPACE_ALPHA out .

    $default  reduce using rule 25 (out)


State 87

   29 out: ESCAPE ALPHA . ESCAPE out

    ESCAPE  shift, and go to state 114


State 88

   26 out: ESCAPE SPACE_ALPHA . ESCAPE out

    ESCAPE  shift, and go to state 115


State 89

   19 program: STDOUT out END . program

    ALPHA   shift, and go to state 13
    INT     shift, and go to state 14
    STRING  shift, and go to state 15
    OPEN_P  shift, and go to state 16
    RETURN  shift, and go to state 17
    STDIN   shift, and go to state 18
    STDOUT  shift, and go to state 19

    $default  reduce using rule 23 (program)

    call     go to state 20
    program  go to state 116
    get      go to state 22
    var      go to state 23


State 90

   16 program: call END program .

    $default  reduce using rule 16 (program)


State 91

   15 program: var END program .

    $default  reduce using rule 15 (program)


State 92

    7 params: type ALPHA .
    8       | type ALPHA . COMMA params

    COMMA  shift, and go to state 117

    $default  reduce using rule 7 (params)


State 93

    3 function: INT FUNCTION ALPHA OPEN_P params CLOSE_P . EXEC program END_EXEC

    EXEC  shift, and go to state 118


State 94

    4 function: STRING FUNCTION ALPHA OPEN_P params CLOSE_P . EXEC program END_EXEC

    EXEC  shift, and go to state 119


State 95

   14 call: ALPHA OPEN_P args CLOSE_P .

    $default  reduce using rule 14 (call)


State 96

   11 args: assignment COMMA . args

    DIGIT         shift, and go to state 31
    ALPHA         shift, and go to state 52
    STRING_VALUE  shift, and go to state 33

    $default  reduce using rule 13 (args)

    args        go to state 120
    call        go to state 54
    assignment  go to state 55


State 97

   44 var: ALPHA ASSIGN ALPHA ARRAY . DIGIT
   45    | ALPHA ASSIGN ALPHA ARRAY . ALPHA

    DIGIT  shift, and go to state 121
    ALPHA  shift, and go to state 122


State 98

   43 var: ALPHA ASSIGN assignment operation .

    $default  reduce using rule 43 (var)


State 99

   51 operation: op . DIGIT operation
   52          | op . ALPHA operation

    DIGIT  shift, and go to state 123
    ALPHA  shift, and go to state 124


State 100

   49 var: ALPHA ARRAY DIGIT ASSIGN . DIGIT
   50    | ALPHA ARRAY DIGIT ASSIGN . STRING_VALUE

    DIGIT         shift, and go to state 125
    STRING_VALUE  shift, and go to state 126


State 101

   30 var: INT ALPHA ASSIGN DIGIT . operation

    PLUS   shift, and go to state 67
    MINUS  shift, and go to state 68
    TIMES  shift, and go to state 69
    DIV    shift, and go to state 70
    MOD    shift, and go to state 71

    $default  reduce using rule 53 (operation)

    operation  go to state 127
    op         go to state 99


State 102

   14 call: ALPHA . OPEN_P args CLOSE_P
   31 var: INT ALPHA ASSIGN ALPHA . operation

    PLUS    shift, and go to state 67
    MINUS   shift, and go to state 68
    TIMES   shift, and go to state 69
    DIV     shift, and go to state 70
    MOD     shift, and go to state 71
    OPEN_P  shift, and go to state 26

    $default  reduce using rule 53 (operation)

    operation  go to state 128
    op         go to state 99


State 103

   35 var: INT ALPHA ASSIGN CONVERT . OPEN_P ALPHA CLOSE_P

    OPEN_P  shift, and go to state 129


State 104

   36 var: INT ALPHA ASSIGN LENGTH . OPEN_P ALPHA CLOSE_P

    OPEN_P  shift, and go to state 130


State 105

   46 var: INT ALPHA ASSIGN call .

    $default  reduce using rule 46 (var)


State 106

   33 var: INT ALPHA ARRAY DIGIT . ASSIGN digit_array
   39    | INT ALPHA ARRAY DIGIT .

    ASSIGN  shift, and go to state 131

    $default  reduce using rule 39 (var)


State 107

   14 call: ALPHA . OPEN_P args CLOSE_P

    OPEN_P  shift, and go to state 26


State 108

   32 var: STRING ALPHA ASSIGN STRING_VALUE .

    $default  reduce using rule 32 (var)


State 109

   47 var: STRING ALPHA ASSIGN call .

    $default  reduce using rule 47 (var)


State 110

   34 var: STRING ALPHA ARRAY DIGIT . ASSIGN alpha_array
   40    | STRING ALPHA ARRAY DIGIT .

    ASSIGN  shift, and go to state 132

    $default  reduce using rule 40 (var)


State 111

   61 rule: OPEN_P rule operator . rule CLOSE_P

    DIGIT         shift, and go to state 31
    ALPHA         shift, and go to state 32
    STRING_VALUE  shift, and go to state 33
    OPEN_P        shift, and go to state 34

    assignment  go to state 35
    rule        go to state 133


State 112

   20 program: OPEN_P rule operator rule . CLOSE_P CONDITIONAL WHILE EXEC program END_EXEC program
   21        | OPEN_P rule operator rule . CLOSE_P CONDITIONAL IF EXEC program END_EXEC program
   22        | OPEN_P rule operator rule . CLOSE_P CONDITIONAL IF EXEC program END_EXEC ELSE EXEC program END_EXEC program

    CLOSE_P  shift, and go to state 134


State 113

   24 get: STDIN OPEN_P ALPHA COMMA . DIGIT CLOSE_P END

    DIGIT  shift, and go to state 135


State 114

   29 out: ESCAPE ALPHA ESCAPE . out

    ALPHA        shift, and go to state 39
    SPACE_ALPHA  shift, and go to state 40
    ESCAPE       shift, and go to state 41

    $default  reduce using rule 27 (out)

    out  go to state 136


State 115

   26 out: ESCAPE SPACE_ALPHA ESCAPE . out

    ALPHA        shift, and go to state 39
    SPACE_ALPHA  shift, and go to state 40
    ESCAPE       shift, and go to state 41

    $default  reduce using rule 27 (out)

    out  go to state 137


State 116

   19 program: STDOUT out END program .

    $default  reduce using rule 19 (program)


State 117

    8 params: type ALPHA COMMA . params

    INT     shift, and go to state 47
    STRING  shift, and go to state 48

    $default  reduce using rule 9 (params)

    type    go to state 49
    params  go to state 138


State 118

    3 function: INT FUNCTION ALPHA OPEN_P params CLOSE_P EXEC . program END_EXEC

    ALPHA   shift, and go to state 13
    INT     shift, and go to state 14
    STRING  shift, and go to state 15
    OPEN_P  shift, and go to state 16
    RETURN  shift, and go to state 17
    STDIN   shift, and go to state 18
    STDOUT  shift, and go to state 19

    $default  reduce using rule 23 (program)

    call     go to state 20
    program  go to state 139
    get      go to state 22
    var      go to state 23


State 119

    4 function: STRING FUNCTION ALPHA OPEN_P params CLOSE_P EXEC . program END_EXEC

    ALPHA   shift, and go to state 13
    INT     shift, and go to state 14
    STRING  shift, and go to state 15
    OPEN_P  shift, and go to state 16
    RETURN  shift, and go to state 17
    STDIN   shift, and go to state 18
    STDOUT  shift, and go to state 19

    $default  reduce using rule 23 (program)

    call     go to state 20
    program  go to state 140
    get      go to state 22
    var      go to state 23


State 120

   11 args: assignment COMMA args .

    $default  reduce using rule 11 (args)


State 121

   44 var: ALPHA ASSIGN ALPHA ARRAY DIGIT .

    $default  reduce using rule 44 (var)


State 122

   45 var: ALPHA ASSIGN ALPHA ARRAY ALPHA .

    $default  reduce using rule 45 (var)


State 123

   51 operation: op DIGIT . operation

    PLUS   shift, and go to state 67
    MINUS  shift, and go to state 68
    TIMES  shift, and go to state 69
    DIV    shift, and go to state 70
    MOD    shift, and go to state 71

    $default  reduce using rule 53 (operation)

    operation  go to state 141
    op         go to state 99


State 124

   52 operation: op ALPHA . operation

    PLUS   shift, and go to state 67
    MINUS  shift, and go to state 68
    TIMES  shift, and go to state 69
    DIV    shift, and go to state 70
    MOD    shift, and go to state 71

    $default  reduce using rule 53 (operation)

    operation  go to state 142
    op         go to state 99


State 125

   49 var: ALPHA ARRAY DIGIT ASSIGN DIGIT .

    $default  reduce using rule 49 (var)


State 126

   50 var: ALPHA ARRAY DIGIT ASSIGN STRING_VALUE .

    $default  reduce using rule 50 (var)


State 127

   30 var: INT ALPHA ASSIGN DIGIT operation .

    $default  reduce using rule 30 (var)


State 128

   31 var: INT ALPHA ASSIGN ALPHA operation .

    $default  reduce using rule 31 (var)


State 129

   35 var: INT ALPHA ASSIGN CONVERT OPEN_P . ALPHA CLOSE_P

    ALPHA  shift, and go to state 143


State 130

   36 var: INT ALPHA ASSIGN LENGTH OPEN_P . ALPHA CLOSE_P

    ALPHA  shift, and go to state 144


State 131

   33 var: INT ALPHA ARRAY DIGIT ASSIGN . digit_array

    DIGIT  shift, and go to state 145

    digit_array  go to state 146


State 132

   34 var: STRING ALPHA ARRAY DIGIT ASSIGN . alpha_array

    STRING_VALUE  shift, and go to state 147

    alpha_array  go to state 148


State 133

   61 rule: OPEN_P rule operator rule . CLOSE_P

    CLOSE_P  shift, and go to state 149


State 134

   20 program: OPEN_P rule operator rule CLOSE_P . CONDITIONAL WHILE EXEC program END_EXEC program
   21        | OPEN_P rule operator rule CLOSE_P . CONDITIONAL IF EXEC program END_EXEC program
   22        | OPEN_P rule operator rule CLOSE_P . CONDITIONAL IF EXEC program END_EXEC ELSE EXEC program END_EXEC program

    CONDITIONAL  shift, and go to state 150


State 135

   24 get: STDIN OPEN_P ALPHA COMMA DIGIT . CLOSE_P END

    CLOSE_P  shift, and go to state 151


State 136

   29 out: ESCAPE ALPHA ESCAPE out .

    $default  reduce using rule 29 (out)


State 137

   26 out: ESCAPE SPACE_ALPHA ESCAPE out .

    $default  reduce using rule 26 (out)


State 138

    8 params: type ALPHA COMMA params .

    $default  reduce using rule 8 (params)


State 139

    3 function: INT FUNCTION ALPHA OPEN_P params CLOSE_P EXEC program . END_EXEC

    END_EXEC  shift, and go to state 152


State 140

    4 function: STRING FUNCTION ALPHA OPEN_P params CLOSE_P EXEC program . END_EXEC

    END_EXEC  shift, and go to state 153


State 141

   51 operation: op DIGIT operation .

    $default  reduce using rule 51 (operation)


State 142

   52 operation: op ALPHA operation .

    $default  reduce using rule 52 (operation)


State 143

   35 var: INT ALPHA ASSIGN CONVERT OPEN_P ALPHA . CLOSE_P

    CLOSE_P  shift, and go to state 154


State 144

   36 var: INT ALPHA ASSIGN LENGTH OPEN_P ALPHA . CLOSE_P

    CLOSE_P  shift, and go to state 155


State 145

   59 digit_array: DIGIT . COMMA digit_array
   60            | DIGIT .

    COMMA  shift, and go to state 156

    $default  reduce using rule 60 (digit_array)


State 146

   33 var: INT ALPHA ARRAY DIGIT ASSIGN digit_array .

    $default  reduce using rule 33 (var)


State 147

   57 alpha_array: STRING_VALUE . COMMA alpha_array
   58            | STRING_VALUE .

    COMMA  shift, and go to state 157

    $default  reduce using rule 58 (alpha_array)


State 148

   34 var: STRING ALPHA ARRAY DIGIT ASSIGN alpha_array .

    $default  reduce using rule 34 (var)


State 149

   61 rule: OPEN_P rule operator rule CLOSE_P .

    $default  reduce using rule 61 (rule)


State 150

   20 program: OPEN_P rule operator rule CLOSE_P CONDITIONAL . WHILE EXEC program END_EXEC program
   21        | OPEN_P rule operator rule CLOSE_P CONDITIONAL . IF EXEC program END_EXEC program
   22        | OPEN_P rule operator rule CLOSE_P CONDITIONAL . IF EXEC program END_EXEC ELSE EXEC program END_EXEC program

    IF     shift, and go to state 158
    WHILE  shift, and go to state 159


State 151

   24 get: STDIN OPEN_P ALPHA COMMA DIGIT CLOSE_P . END

    END  shift, and go to state 160


State 152

    3 function: INT FUNCTION ALPHA OPEN_P params CLOSE_P EXEC program END_EXEC .

    $default  reduce using rule 3 (function)


State 153

    4 function: STRING FUNCTION ALPHA OPEN_P params CLOSE_P EXEC program END_EXEC .

    $default  reduce using rule 4 (function)


State 154

   35 var: INT ALPHA ASSIGN CONVERT OPEN_P ALPHA CLOSE_P .

    $default  reduce using rule 35 (var)


State 155

   36 var: INT ALPHA ASSIGN LENGTH OPEN_P ALPHA CLOSE_P .

    $default  reduce using rule 36 (var)


State 156

   59 digit_array: DIGIT COMMA . digit_array

    DIGIT  shift, and go to state 145

    digit_array  go to state 161


State 157

   57 alpha_array: STRING_VALUE COMMA . alpha_array

    STRING_VALUE  shift, and go to state 147

    alpha_array  go to state 162


State 158

   21 program: OPEN_P rule operator rule CLOSE_P CONDITIONAL IF . EXEC program END_EXEC program
   22        | OPEN_P rule operator rule CLOSE_P CONDITIONAL IF . EXEC program END_EXEC ELSE EXEC program END_EXEC program

    EXEC  shift, and go to state 163


State 159

   20 program: OPEN_P rule operator rule CLOSE_P CONDITIONAL WHILE . EXEC program END_EXEC program

    EXEC  shift, and go to state 164


State 160

   24 get: STDIN OPEN_P ALPHA COMMA DIGIT CLOSE_P END .

    $default  reduce using rule 24 (get)


State 161

   59 digit_array: DIGIT COMMA digit_array .

    $default  reduce using rule 59 (digit_array)


State 162

   57 alpha_array: STRING_VALUE COMMA alpha_array .

    $default  reduce using rule 57 (alpha_array)


State 163

   21 program: OPEN_P rule operator rule CLOSE_P CONDITIONAL IF EXEC . program END_EXEC program
   22        | OPEN_P rule operator rule CLOSE_P CONDITIONAL IF EXEC . program END_EXEC ELSE EXEC program END_EXEC program

    ALPHA   shift, and go to state 13
    INT     shift, and go to state 14
    STRING  shift, and go to state 15
    OPEN_P  shift, and go to state 16
    RETURN  shift, and go to state 17
    STDIN   shift, and go to state 18
    STDOUT  shift, and go to state 19

    $default  reduce using rule 23 (program)

    call     go to state 20
    program  go to state 165
    get      go to state 22
    var      go to state 23


State 164

   20 program: OPEN_P rule operator rule CLOSE_P CONDITIONAL WHILE EXEC . program END_EXEC program

    ALPHA   shift, and go to state 13
    INT     shift, and go to state 14
    STRING  shift, and go to state 15
    OPEN_P  shift, and go to state 16
    RETURN  shift, and go to state 17
    STDIN   shift, and go to state 18
    STDOUT  shift, and go to state 19

    $default  reduce using rule 23 (program)

    call     go to state 20
    program  go to state 166
    get      go to state 22
    var      go to state 23


State 165

   21 program: OPEN_P rule operator rule CLOSE_P CONDITIONAL IF EXEC program . END_EXEC program
   22        | OPEN_P rule operator rule CLOSE_P CONDITIONAL IF EXEC program . END_EXEC ELSE EXEC program END_EXEC program

    END_EXEC  shift, and go to state 167


State 166

   20 program: OPEN_P rule operator rule CLOSE_P CONDITIONAL WHILE EXEC program . END_EXEC program

    END_EXEC  shift, and go to state 168


State 167

   21 program: OPEN_P rule operator rule CLOSE_P CONDITIONAL IF EXEC program END_EXEC . program
   22        | OPEN_P rule operator rule CLOSE_P CONDITIONAL IF EXEC program END_EXEC . ELSE EXEC program END_EXEC program

    ALPHA   shift, and go to state 13
    INT     shift, and go to state 14
    STRING  shift, and go to state 15
    OPEN_P  shift, and go to state 16
    ELSE    shift, and go to state 169
    RETURN  shift, and go to state 17
    STDIN   shift, and go to state 18
    STDOUT  shift, and go to state 19

    $default  reduce using rule 23 (program)

    call     go to state 20
    program  go to state 170
    get      go to state 22
    var      go to state 23


State 168

   20 program: OPEN_P rule operator rule CLOSE_P CONDITIONAL WHILE EXEC program END_EXEC . program

    ALPHA   shift, and go to state 13
    INT     shift, and go to state 14
    STRING  shift, and go to state 15
    OPEN_P  shift, and go to state 16
    RETURN  shift, and go to state 17
    STDIN   shift, and go to state 18
    STDOUT  shift, and go to state 19

    $default  reduce using rule 23 (program)

    call     go to state 20
    program  go to state 171
    get      go to state 22
    var      go to state 23


State 169

   22 program: OPEN_P rule operator rule CLOSE_P CONDITIONAL IF EXEC program END_EXEC ELSE . EXEC program END_EXEC program

    EXEC  shift, and go to state 172


State 170

   21 program: OPEN_P rule operator rule CLOSE_P CONDITIONAL IF EXEC program END_EXEC program .

    $default  reduce using rule 21 (program)


State 171

   20 program: OPEN_P rule operator rule CLOSE_P CONDITIONAL WHILE EXEC program END_EXEC program .

    $default  reduce using rule 20 (program)


State 172

   22 program: OPEN_P rule operator rule CLOSE_P CONDITIONAL IF EXEC program END_EXEC ELSE EXEC . program END_EXEC program

    ALPHA   shift, and go to state 13
    INT     shift, and go to state 14
    STRING  shift, and go to state 15
    OPEN_P  shift, and go to state 16
    RETURN  shift, and go to state 17
    STDIN   shift, and go to state 18
    STDOUT  shift, and go to state 19

    $default  reduce using rule 23 (program)

    call     go to state 20
    program  go to state 173
    get      go to state 22
    var      go to state 23


State 173

   22 program: OPEN_P rule operator rule CLOSE_P CONDITIONAL IF EXEC program END_EXEC ELSE EXEC program . END_EXEC program

    END_EXEC  shift, and go to state 174


State 174

   22 program: OPEN_P rule operator rule CLOSE_P CONDITIONAL IF EXEC program END_EXEC ELSE EXEC program END_EXEC . program

    ALPHA   shift, and go to state 13
    INT     shift, and go to state 14
    STRING  shift, and go to state 15
    OPEN_P  shift, and go to state 16
    RETURN  shift, and go to state 17
    STDIN   shift, and go to state 18
    STDOUT  shift, and go to state 19

    $default  reduce using rule 23 (program)

    call     go to state 20
    program  go to state 175
    get      go to state 22
    var      go to state 23


State 175

   22 program: OPEN_P rule operator rule CLOSE_P CONDITIONAL IF EXEC program END_EXEC ELSE EXEC program END_EXEC program .

    $default  reduce using rule 22 (program)
