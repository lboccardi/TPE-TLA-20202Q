State 78 conflicts: 1 reduce/reduce


Grammar

    0 $accept: start $end

    1 start: MAIN '{' program '}'
    2      | function start
    3      | constant start

    4 constant: INT_DEFINE ALPHA DIGIT
    5         | CHAR_DEFINE ALPHA ESCAPE ALPHA
    6         | STRING_DEFINE ALPHA STRING_VALUE

    7 function: INT FUNCTION ALPHA '(' params ')' '{' program '}'
    8         | STRING FUNCTION ALPHA '(' params ')' '{' program '}'
    9         | CHAR FUNCTION ALPHA '(' params ')' '{' program '}'
   10         | INT FUNCTION ALPHA '(' params ')' '.'
   11         | STRING FUNCTION ALPHA '(' params ')' '.'
   12         | CHAR FUNCTION ALPHA '(' params ')' '.'

   13 type: INT
   14     | STRING
   15     | CHAR

   16 params: type ALPHA
   17       | type ALPHA ',' params
   18       | %empty

   19 args: assignment
   20     | assignment ',' args
   21     | call
   22     | %empty

   23 call: ALPHA '(' args ')'

   24 program: var '.' program
   25        | call '.' program
   26        | RETURN assignment '.'
   27        | get program
   28        | STDOUT out '.' program
   29        | '(' rule operator rule ')' '?' WHILE '{' program '}' program
   30        | '(' rule operator rule ')' '?' IF '{' program '}' program
   31        | '(' rule operator rule ')' '?' IF '{' program '}' ':' '{' program '}' program
   32        | %empty

   33 get: STDIN '(' ALPHA ',' DIGIT ')' '.'

   34 out: SPACE_ALPHA out
   35    | ESCAPE SPACE_ALPHA ESCAPE out
   36    | %empty
   37    | ALPHA out
   38    | ESCAPE ALPHA ESCAPE out

   39 var: INT ALPHA '=' DIGIT operation
   40    | INT ALPHA '=' ALPHA operation
   41    | STRING ALPHA '=' STRING_VALUE
   42    | STRING ALPHA '=' ALPHA
   43    | CHAR ALPHA '=' ESCAPE ALPHA
   44    | CHAR ALPHA '=' ESCAPE DIGIT
   45    | CHAR ALPHA '=' ALPHA
   46    | INT ALPHA '_' DIGIT '=' digit_array
   47    | STRING ALPHA '_' DIGIT '=' alpha_array
   48    | CHAR ALPHA '_' DIGIT '=' char_array
   49    | INT ALPHA '=' CONVERT '(' ALPHA ')'
   50    | INT ALPHA '=' LENGTH '(' ALPHA ')'
   51    | INT ALPHA '=' ALPHA '_' DIGIT
   52    | STRING ALPHA '=' ALPHA '_' DIGIT
   53    | INT ALPHA '=' ALPHA '_' ALPHA
   54    | STRING ALPHA '=' ALPHA '_' ALPHA
   55    | CHAR ALPHA '=' ALPHA '_' DIGIT
   56    | CHAR ALPHA '=' ALPHA '_' ALPHA
   57    | INT ALPHA
   58    | CHAR ALPHA
   59    | STRING ALPHA
   60    | INT ALPHA '_' DIGIT
   61    | INT ALPHA '_' ALPHA
   62    | STRING ALPHA '_' DIGIT
   63    | CHAR ALPHA '_' DIGIT
   64    | CHAR ALPHA '_' ALPHA
   65    | ALPHA '=' ALPHA
   66    | ALPHA '=' ESCAPE ALPHA
   67    | ALPHA '=' ESCAPE DIGIT
   68    | ALPHA '=' STRING_VALUE
   69    | ALPHA '=' var_init operation
   70    | ALPHA '=' ALPHA '_' DIGIT
   71    | ALPHA '=' ALPHA '_' ALPHA
   72    | ALPHA '=' CONVERT '(' ALPHA ')'
   73    | ALPHA '=' LENGTH '(' ALPHA ')'
   74    | INT ALPHA '=' call
   75    | STRING ALPHA '=' call
   76    | CHAR ALPHA '=' call
   77    | ALPHA '=' call
   78    | ALPHA '_' DIGIT '=' DIGIT
   79    | ALPHA '_' DIGIT '=' ESCAPE ALPHA
   80    | ALPHA '_' DIGIT '=' ESCAPE DIGIT
   81    | ALPHA '_' DIGIT '=' STRING_VALUE
   82    | ALPHA '_' ALPHA '=' ALPHA
   83    | ALPHA '_' ALPHA '=' DIGIT
   84    | ALPHA '_' ALPHA '=' STRING_VALUE
   85    | ALPHA '_' ALPHA '=' ALPHA '_' ALPHA
   86    | ALPHA '_' ALPHA '=' ESCAPE ALPHA
   87    | ALPHA '_' ALPHA '=' ESCAPE DIGIT

   88 operation: op DIGIT operation
   89          | op ALPHA operation
   90          | %empty

   91 assignment: ALPHA
   92           | DIGIT
   93           | STRING_VALUE
   94           | ESCAPE ALPHA
   95           | ESCAPE DIGIT
   96           | ALPHA '_' DIGIT
   97           | ALPHA '_' ALPHA

   98 var_init: ALPHA
   99         | DIGIT

  100 alpha_array: STRING_VALUE ',' alpha_array
  101            | STRING_VALUE

  102 digit_array: DIGIT ',' digit_array
  103            | DIGIT

  104 char_array: ESCAPE ALPHA ',' char_array
  105           | ESCAPE ALPHA
  106           | ESCAPE DIGIT ',' char_array
  107           | ESCAPE DIGIT

  108 rule: '(' rule operator rule ')'
  109     | assignment

  110 operator: op
  111         | '<'
  112         | '>'
  113         | LE
  114         | GE
  115         | '~'
  116         | NE
  117         | '|'
  118         | '&'

  119 op: '+'
  120   | '-'
  121   | '/'
  122   | '*'
  123   | '%'


Terminals, with rules where they appear

    $end (0) 0
    '%' (37) 123
    '&' (38) 118
    '(' (40) 7 8 9 10 11 12 23 29 30 31 33 49 50 72 73 108
    ')' (41) 7 8 9 10 11 12 23 29 30 31 33 49 50 72 73 108
    '*' (42) 122
    '+' (43) 119
    ',' (44) 17 20 33 100 102 104 106
    '-' (45) 120
    '.' (46) 10 11 12 24 25 26 28 33
    '/' (47) 121
    ':' (58) 31
    '<' (60) 111
    '=' (61) 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87
    '>' (62) 112
    '?' (63) 29 30 31
    '_' (95) 46 47 48 51 52 53 54 55 56 60 61 62 63 64 70 71 78 79 80 81 82 83 84 85 86 87 96 97
    '{' (123) 1 7 8 9 29 30 31
    '|' (124) 117
    '}' (125) 1 7 8 9 29 30 31
    '~' (126) 115
    error (256)
    DIGIT <stringValue> (258) 4 33 39 44 46 47 48 51 52 55 60 62 63 67 70 78 79 80 81 83 87 88 92 95 96 99 102 103 106 107
    ALPHA <stringValue> (259) 4 5 6 7 8 9 10 11 12 16 17 23 33 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 89 91 94 96 97 98 104 105
    SPACE_ALPHA <stringValue> (260) 34 35
    STRING_VALUE <stringValue> (261) 6 41 68 81 84 93 100 101
    INT <stringValue> (262) 7 10 13 39 40 46 49 50 51 53 57 60 61 74
    STRING <stringValue> (263) 8 11 14 41 42 47 52 54 59 62 75
    CHAR <stringValue> (264) 9 12 15 43 44 45 48 55 56 58 63 64 76
    IF (265) 30 31
    ESCAPE (266) 5 35 38 43 44 66 67 79 80 86 87 94 95 104 105 106 107
    WHILE (267) 29
    LE (268) 113
    GE (269) 114
    NE (270) 116
    RETURN (271) 26
    MAIN (272) 1
    STDIN (273) 33
    STDOUT (274) 28
    CONVERT (275) 49 72
    LENGTH (276) 50 73
    FUNCTION (277) 7 8 9 10 11 12
    INT_DEFINE (278) 4
    STRING_DEFINE (279) 6
    CHAR_DEFINE (280) 5


Nonterminals, with rules where they appear

    $accept (46)
        on left: 0
    start <stringValue> (47)
        on left: 1 2 3
        on right: 0 2 3
    constant <stringValue> (48)
        on left: 4 5 6
        on right: 3
    function <stringValue> (49)
        on left: 7 8 9 10 11 12
        on right: 2
    type <stringValue> (50)
        on left: 13 14 15
        on right: 16 17
    params <stringValue> (51)
        on left: 16 17 18
        on right: 7 8 9 10 11 12 17
    args <stringValue> (52)
        on left: 19 20 21 22
        on right: 20 23
    call <stringValue> (53)
        on left: 23
        on right: 21 25 74 75 76 77
    program <stringValue> (54)
        on left: 24 25 26 27 28 29 30 31 32
        on right: 1 7 8 9 24 25 27 28 29 30 31
    get <stringValue> (55)
        on left: 33
        on right: 27
    out <stringValue> (56)
        on left: 34 35 36 37 38
        on right: 28 34 35 37 38
    var <stringValue> (57)
        on left: 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87
        on right: 24
    operation <stringValue> (58)
        on left: 88 89 90
        on right: 39 40 69 88 89
    assignment <stringValue> (59)
        on left: 91 92 93 94 95 96 97
        on right: 19 20 26 109
    var_init <stringValue> (60)
        on left: 98 99
        on right: 69
    alpha_array <stringValue> (61)
        on left: 100 101
        on right: 47 100
    digit_array <stringValue> (62)
        on left: 102 103
        on right: 46 102
    char_array <stringValue> (63)
        on left: 104 105 106 107
        on right: 48 104 106
    rule <stringValue> (64)
        on left: 108 109
        on right: 29 30 31 108
    operator <stringValue> (65)
        on left: 110 111 112 113 114 115 116 117 118
        on right: 29 30 31 108
    op <stringValue> (66)
        on left: 119 120 121 122 123
        on right: 88 89 110


State 0

    0 $accept: . start $end

    INT            shift, and go to state 1
    STRING         shift, and go to state 2
    CHAR           shift, and go to state 3
    MAIN           shift, and go to state 4
    INT_DEFINE     shift, and go to state 5
    STRING_DEFINE  shift, and go to state 6
    CHAR_DEFINE    shift, and go to state 7

    start     go to state 8
    constant  go to state 9
    function  go to state 10


State 1

    7 function: INT . FUNCTION ALPHA '(' params ')' '{' program '}'
   10         | INT . FUNCTION ALPHA '(' params ')' '.'

    FUNCTION  shift, and go to state 11


State 2

    8 function: STRING . FUNCTION ALPHA '(' params ')' '{' program '}'
   11         | STRING . FUNCTION ALPHA '(' params ')' '.'

    FUNCTION  shift, and go to state 12


State 3

    9 function: CHAR . FUNCTION ALPHA '(' params ')' '{' program '}'
   12         | CHAR . FUNCTION ALPHA '(' params ')' '.'

    FUNCTION  shift, and go to state 13


State 4

    1 start: MAIN . '{' program '}'

    '{'  shift, and go to state 14


State 5

    4 constant: INT_DEFINE . ALPHA DIGIT

    ALPHA  shift, and go to state 15


State 6

    6 constant: STRING_DEFINE . ALPHA STRING_VALUE

    ALPHA  shift, and go to state 16


State 7

    5 constant: CHAR_DEFINE . ALPHA ESCAPE ALPHA

    ALPHA  shift, and go to state 17


State 8

    0 $accept: start . $end

    $end  shift, and go to state 18


State 9

    3 start: constant . start

    INT            shift, and go to state 1
    STRING         shift, and go to state 2
    CHAR           shift, and go to state 3
    MAIN           shift, and go to state 4
    INT_DEFINE     shift, and go to state 5
    STRING_DEFINE  shift, and go to state 6
    CHAR_DEFINE    shift, and go to state 7

    start     go to state 19
    constant  go to state 9
    function  go to state 10


State 10

    2 start: function . start

    INT            shift, and go to state 1
    STRING         shift, and go to state 2
    CHAR           shift, and go to state 3
    MAIN           shift, and go to state 4
    INT_DEFINE     shift, and go to state 5
    STRING_DEFINE  shift, and go to state 6
    CHAR_DEFINE    shift, and go to state 7

    start     go to state 20
    constant  go to state 9
    function  go to state 10


State 11

    7 function: INT FUNCTION . ALPHA '(' params ')' '{' program '}'
   10         | INT FUNCTION . ALPHA '(' params ')' '.'

    ALPHA  shift, and go to state 21


State 12

    8 function: STRING FUNCTION . ALPHA '(' params ')' '{' program '}'
   11         | STRING FUNCTION . ALPHA '(' params ')' '.'

    ALPHA  shift, and go to state 22


State 13

    9 function: CHAR FUNCTION . ALPHA '(' params ')' '{' program '}'
   12         | CHAR FUNCTION . ALPHA '(' params ')' '.'

    ALPHA  shift, and go to state 23


State 14

    1 start: MAIN '{' . program '}'

    ALPHA   shift, and go to state 24
    INT     shift, and go to state 25
    STRING  shift, and go to state 26
    CHAR    shift, and go to state 27
    RETURN  shift, and go to state 28
    STDIN   shift, and go to state 29
    STDOUT  shift, and go to state 30
    '('     shift, and go to state 31

    $default  reduce using rule 32 (program)

    call     go to state 32
    program  go to state 33
    get      go to state 34
    var      go to state 35


State 15

    4 constant: INT_DEFINE ALPHA . DIGIT

    DIGIT  shift, and go to state 36


State 16

    6 constant: STRING_DEFINE ALPHA . STRING_VALUE

    STRING_VALUE  shift, and go to state 37


State 17

    5 constant: CHAR_DEFINE ALPHA . ESCAPE ALPHA

    ESCAPE  shift, and go to state 38


State 18

    0 $accept: start $end .

    $default  accept


State 19

    3 start: constant start .

    $default  reduce using rule 3 (start)


State 20

    2 start: function start .

    $default  reduce using rule 2 (start)


State 21

    7 function: INT FUNCTION ALPHA . '(' params ')' '{' program '}'
   10         | INT FUNCTION ALPHA . '(' params ')' '.'

    '('  shift, and go to state 39


State 22

    8 function: STRING FUNCTION ALPHA . '(' params ')' '{' program '}'
   11         | STRING FUNCTION ALPHA . '(' params ')' '.'

    '('  shift, and go to state 40


State 23

    9 function: CHAR FUNCTION ALPHA . '(' params ')' '{' program '}'
   12         | CHAR FUNCTION ALPHA . '(' params ')' '.'

    '('  shift, and go to state 41


State 24

   23 call: ALPHA . '(' args ')'
   65 var: ALPHA . '=' ALPHA
   66    | ALPHA . '=' ESCAPE ALPHA
   67    | ALPHA . '=' ESCAPE DIGIT
   68    | ALPHA . '=' STRING_VALUE
   69    | ALPHA . '=' var_init operation
   70    | ALPHA . '=' ALPHA '_' DIGIT
   71    | ALPHA . '=' ALPHA '_' ALPHA
   72    | ALPHA . '=' CONVERT '(' ALPHA ')'
   73    | ALPHA . '=' LENGTH '(' ALPHA ')'
   77    | ALPHA . '=' call
   78    | ALPHA . '_' DIGIT '=' DIGIT
   79    | ALPHA . '_' DIGIT '=' ESCAPE ALPHA
   80    | ALPHA . '_' DIGIT '=' ESCAPE DIGIT
   81    | ALPHA . '_' DIGIT '=' STRING_VALUE
   82    | ALPHA . '_' ALPHA '=' ALPHA
   83    | ALPHA . '_' ALPHA '=' DIGIT
   84    | ALPHA . '_' ALPHA '=' STRING_VALUE
   85    | ALPHA . '_' ALPHA '=' ALPHA '_' ALPHA
   86    | ALPHA . '_' ALPHA '=' ESCAPE ALPHA
   87    | ALPHA . '_' ALPHA '=' ESCAPE DIGIT

    '('  shift, and go to state 42
    '='  shift, and go to state 43
    '_'  shift, and go to state 44


State 25

   39 var: INT . ALPHA '=' DIGIT operation
   40    | INT . ALPHA '=' ALPHA operation
   46    | INT . ALPHA '_' DIGIT '=' digit_array
   49    | INT . ALPHA '=' CONVERT '(' ALPHA ')'
   50    | INT . ALPHA '=' LENGTH '(' ALPHA ')'
   51    | INT . ALPHA '=' ALPHA '_' DIGIT
   53    | INT . ALPHA '=' ALPHA '_' ALPHA
   57    | INT . ALPHA
   60    | INT . ALPHA '_' DIGIT
   61    | INT . ALPHA '_' ALPHA
   74    | INT . ALPHA '=' call

    ALPHA  shift, and go to state 45


State 26

   41 var: STRING . ALPHA '=' STRING_VALUE
   42    | STRING . ALPHA '=' ALPHA
   47    | STRING . ALPHA '_' DIGIT '=' alpha_array
   52    | STRING . ALPHA '=' ALPHA '_' DIGIT
   54    | STRING . ALPHA '=' ALPHA '_' ALPHA
   59    | STRING . ALPHA
   62    | STRING . ALPHA '_' DIGIT
   75    | STRING . ALPHA '=' call

    ALPHA  shift, and go to state 46


State 27

   43 var: CHAR . ALPHA '=' ESCAPE ALPHA
   44    | CHAR . ALPHA '=' ESCAPE DIGIT
   45    | CHAR . ALPHA '=' ALPHA
   48    | CHAR . ALPHA '_' DIGIT '=' char_array
   55    | CHAR . ALPHA '=' ALPHA '_' DIGIT
   56    | CHAR . ALPHA '=' ALPHA '_' ALPHA
   58    | CHAR . ALPHA
   63    | CHAR . ALPHA '_' DIGIT
   64    | CHAR . ALPHA '_' ALPHA
   76    | CHAR . ALPHA '=' call

    ALPHA  shift, and go to state 47


State 28

   26 program: RETURN . assignment '.'

    DIGIT         shift, and go to state 48
    ALPHA         shift, and go to state 49
    STRING_VALUE  shift, and go to state 50
    ESCAPE        shift, and go to state 51

    assignment  go to state 52


State 29

   33 get: STDIN . '(' ALPHA ',' DIGIT ')' '.'

    '('  shift, and go to state 53


State 30

   28 program: STDOUT . out '.' program

    ALPHA        shift, and go to state 54
    SPACE_ALPHA  shift, and go to state 55
    ESCAPE       shift, and go to state 56

    $default  reduce using rule 36 (out)

    out  go to state 57


State 31

   29 program: '(' . rule operator rule ')' '?' WHILE '{' program '}' program
   30        | '(' . rule operator rule ')' '?' IF '{' program '}' program
   31        | '(' . rule operator rule ')' '?' IF '{' program '}' ':' '{' program '}' program

    DIGIT         shift, and go to state 48
    ALPHA         shift, and go to state 49
    STRING_VALUE  shift, and go to state 50
    ESCAPE        shift, and go to state 51
    '('           shift, and go to state 58

    assignment  go to state 59
    rule        go to state 60


State 32

   25 program: call . '.' program

    '.'  shift, and go to state 61


State 33

    1 start: MAIN '{' program . '}'

    '}'  shift, and go to state 62


State 34

   27 program: get . program

    ALPHA   shift, and go to state 24
    INT     shift, and go to state 25
    STRING  shift, and go to state 26
    CHAR    shift, and go to state 27
    RETURN  shift, and go to state 28
    STDIN   shift, and go to state 29
    STDOUT  shift, and go to state 30
    '('     shift, and go to state 31

    $default  reduce using rule 32 (program)

    call     go to state 32
    program  go to state 63
    get      go to state 34
    var      go to state 35


State 35

   24 program: var . '.' program

    '.'  shift, and go to state 64


State 36

    4 constant: INT_DEFINE ALPHA DIGIT .

    $default  reduce using rule 4 (constant)


State 37

    6 constant: STRING_DEFINE ALPHA STRING_VALUE .

    $default  reduce using rule 6 (constant)


State 38

    5 constant: CHAR_DEFINE ALPHA ESCAPE . ALPHA

    ALPHA  shift, and go to state 65


State 39

    7 function: INT FUNCTION ALPHA '(' . params ')' '{' program '}'
   10         | INT FUNCTION ALPHA '(' . params ')' '.'

    INT     shift, and go to state 66
    STRING  shift, and go to state 67
    CHAR    shift, and go to state 68

    $default  reduce using rule 18 (params)

    type    go to state 69
    params  go to state 70


State 40

    8 function: STRING FUNCTION ALPHA '(' . params ')' '{' program '}'
   11         | STRING FUNCTION ALPHA '(' . params ')' '.'

    INT     shift, and go to state 66
    STRING  shift, and go to state 67
    CHAR    shift, and go to state 68

    $default  reduce using rule 18 (params)

    type    go to state 69
    params  go to state 71


State 41

    9 function: CHAR FUNCTION ALPHA '(' . params ')' '{' program '}'
   12         | CHAR FUNCTION ALPHA '(' . params ')' '.'

    INT     shift, and go to state 66
    STRING  shift, and go to state 67
    CHAR    shift, and go to state 68

    $default  reduce using rule 18 (params)

    type    go to state 69
    params  go to state 72


State 42

   23 call: ALPHA '(' . args ')'

    DIGIT         shift, and go to state 48
    ALPHA         shift, and go to state 73
    STRING_VALUE  shift, and go to state 50
    ESCAPE        shift, and go to state 51

    $default  reduce using rule 22 (args)

    args        go to state 74
    call        go to state 75
    assignment  go to state 76


State 43

   65 var: ALPHA '=' . ALPHA
   66    | ALPHA '=' . ESCAPE ALPHA
   67    | ALPHA '=' . ESCAPE DIGIT
   68    | ALPHA '=' . STRING_VALUE
   69    | ALPHA '=' . var_init operation
   70    | ALPHA '=' . ALPHA '_' DIGIT
   71    | ALPHA '=' . ALPHA '_' ALPHA
   72    | ALPHA '=' . CONVERT '(' ALPHA ')'
   73    | ALPHA '=' . LENGTH '(' ALPHA ')'
   77    | ALPHA '=' . call

    DIGIT         shift, and go to state 77
    ALPHA         shift, and go to state 78
    STRING_VALUE  shift, and go to state 79
    ESCAPE        shift, and go to state 80
    CONVERT       shift, and go to state 81
    LENGTH        shift, and go to state 82

    call      go to state 83
    var_init  go to state 84


State 44

   78 var: ALPHA '_' . DIGIT '=' DIGIT
   79    | ALPHA '_' . DIGIT '=' ESCAPE ALPHA
   80    | ALPHA '_' . DIGIT '=' ESCAPE DIGIT
   81    | ALPHA '_' . DIGIT '=' STRING_VALUE
   82    | ALPHA '_' . ALPHA '=' ALPHA
   83    | ALPHA '_' . ALPHA '=' DIGIT
   84    | ALPHA '_' . ALPHA '=' STRING_VALUE
   85    | ALPHA '_' . ALPHA '=' ALPHA '_' ALPHA
   86    | ALPHA '_' . ALPHA '=' ESCAPE ALPHA
   87    | ALPHA '_' . ALPHA '=' ESCAPE DIGIT

    DIGIT  shift, and go to state 85
    ALPHA  shift, and go to state 86


State 45

   39 var: INT ALPHA . '=' DIGIT operation
   40    | INT ALPHA . '=' ALPHA operation
   46    | INT ALPHA . '_' DIGIT '=' digit_array
   49    | INT ALPHA . '=' CONVERT '(' ALPHA ')'
   50    | INT ALPHA . '=' LENGTH '(' ALPHA ')'
   51    | INT ALPHA . '=' ALPHA '_' DIGIT
   53    | INT ALPHA . '=' ALPHA '_' ALPHA
   57    | INT ALPHA .
   60    | INT ALPHA . '_' DIGIT
   61    | INT ALPHA . '_' ALPHA
   74    | INT ALPHA . '=' call

    '='  shift, and go to state 87
    '_'  shift, and go to state 88

    $default  reduce using rule 57 (var)


State 46

   41 var: STRING ALPHA . '=' STRING_VALUE
   42    | STRING ALPHA . '=' ALPHA
   47    | STRING ALPHA . '_' DIGIT '=' alpha_array
   52    | STRING ALPHA . '=' ALPHA '_' DIGIT
   54    | STRING ALPHA . '=' ALPHA '_' ALPHA
   59    | STRING ALPHA .
   62    | STRING ALPHA . '_' DIGIT
   75    | STRING ALPHA . '=' call

    '='  shift, and go to state 89
    '_'  shift, and go to state 90

    $default  reduce using rule 59 (var)


State 47

   43 var: CHAR ALPHA . '=' ESCAPE ALPHA
   44    | CHAR ALPHA . '=' ESCAPE DIGIT
   45    | CHAR ALPHA . '=' ALPHA
   48    | CHAR ALPHA . '_' DIGIT '=' char_array
   55    | CHAR ALPHA . '=' ALPHA '_' DIGIT
   56    | CHAR ALPHA . '=' ALPHA '_' ALPHA
   58    | CHAR ALPHA .
   63    | CHAR ALPHA . '_' DIGIT
   64    | CHAR ALPHA . '_' ALPHA
   76    | CHAR ALPHA . '=' call

    '='  shift, and go to state 91
    '_'  shift, and go to state 92

    $default  reduce using rule 58 (var)


State 48

   92 assignment: DIGIT .

    $default  reduce using rule 92 (assignment)


State 49

   91 assignment: ALPHA .
   96           | ALPHA . '_' DIGIT
   97           | ALPHA . '_' ALPHA

    '_'  shift, and go to state 93

    $default  reduce using rule 91 (assignment)


State 50

   93 assignment: STRING_VALUE .

    $default  reduce using rule 93 (assignment)


State 51

   94 assignment: ESCAPE . ALPHA
   95           | ESCAPE . DIGIT

    DIGIT  shift, and go to state 94
    ALPHA  shift, and go to state 95


State 52

   26 program: RETURN assignment . '.'

    '.'  shift, and go to state 96


State 53

   33 get: STDIN '(' . ALPHA ',' DIGIT ')' '.'

    ALPHA  shift, and go to state 97


State 54

   37 out: ALPHA . out

    ALPHA        shift, and go to state 54
    SPACE_ALPHA  shift, and go to state 55
    ESCAPE       shift, and go to state 56

    $default  reduce using rule 36 (out)

    out  go to state 98


State 55

   34 out: SPACE_ALPHA . out

    ALPHA        shift, and go to state 54
    SPACE_ALPHA  shift, and go to state 55
    ESCAPE       shift, and go to state 56

    $default  reduce using rule 36 (out)

    out  go to state 99


State 56

   35 out: ESCAPE . SPACE_ALPHA ESCAPE out
   38    | ESCAPE . ALPHA ESCAPE out

    ALPHA        shift, and go to state 100
    SPACE_ALPHA  shift, and go to state 101


State 57

   28 program: STDOUT out . '.' program

    '.'  shift, and go to state 102


State 58

  108 rule: '(' . rule operator rule ')'

    DIGIT         shift, and go to state 48
    ALPHA         shift, and go to state 49
    STRING_VALUE  shift, and go to state 50
    ESCAPE        shift, and go to state 51
    '('           shift, and go to state 58

    assignment  go to state 59
    rule        go to state 103


State 59

  109 rule: assignment .

    $default  reduce using rule 109 (rule)


State 60

   29 program: '(' rule . operator rule ')' '?' WHILE '{' program '}' program
   30        | '(' rule . operator rule ')' '?' IF '{' program '}' program
   31        | '(' rule . operator rule ')' '?' IF '{' program '}' ':' '{' program '}' program

    LE   shift, and go to state 104
    GE   shift, and go to state 105
    NE   shift, and go to state 106
    '+'  shift, and go to state 107
    '-'  shift, and go to state 108
    '*'  shift, and go to state 109
    '/'  shift, and go to state 110
    '%'  shift, and go to state 111
    '<'  shift, and go to state 112
    '>'  shift, and go to state 113
    '~'  shift, and go to state 114
    '|'  shift, and go to state 115
    '&'  shift, and go to state 116

    operator  go to state 117
    op        go to state 118


State 61

   25 program: call '.' . program

    ALPHA   shift, and go to state 24
    INT     shift, and go to state 25
    STRING  shift, and go to state 26
    CHAR    shift, and go to state 27
    RETURN  shift, and go to state 28
    STDIN   shift, and go to state 29
    STDOUT  shift, and go to state 30
    '('     shift, and go to state 31

    $default  reduce using rule 32 (program)

    call     go to state 32
    program  go to state 119
    get      go to state 34
    var      go to state 35


State 62

    1 start: MAIN '{' program '}' .

    $default  reduce using rule 1 (start)


State 63

   27 program: get program .

    $default  reduce using rule 27 (program)


State 64

   24 program: var '.' . program

    ALPHA   shift, and go to state 24
    INT     shift, and go to state 25
    STRING  shift, and go to state 26
    CHAR    shift, and go to state 27
    RETURN  shift, and go to state 28
    STDIN   shift, and go to state 29
    STDOUT  shift, and go to state 30
    '('     shift, and go to state 31

    $default  reduce using rule 32 (program)

    call     go to state 32
    program  go to state 120
    get      go to state 34
    var      go to state 35


State 65

    5 constant: CHAR_DEFINE ALPHA ESCAPE ALPHA .

    $default  reduce using rule 5 (constant)


State 66

   13 type: INT .

    $default  reduce using rule 13 (type)


State 67

   14 type: STRING .

    $default  reduce using rule 14 (type)


State 68

   15 type: CHAR .

    $default  reduce using rule 15 (type)


State 69

   16 params: type . ALPHA
   17       | type . ALPHA ',' params

    ALPHA  shift, and go to state 121


State 70

    7 function: INT FUNCTION ALPHA '(' params . ')' '{' program '}'
   10         | INT FUNCTION ALPHA '(' params . ')' '.'

    ')'  shift, and go to state 122


State 71

    8 function: STRING FUNCTION ALPHA '(' params . ')' '{' program '}'
   11         | STRING FUNCTION ALPHA '(' params . ')' '.'

    ')'  shift, and go to state 123


State 72

    9 function: CHAR FUNCTION ALPHA '(' params . ')' '{' program '}'
   12         | CHAR FUNCTION ALPHA '(' params . ')' '.'

    ')'  shift, and go to state 124


State 73

   23 call: ALPHA . '(' args ')'
   91 assignment: ALPHA .
   96           | ALPHA . '_' DIGIT
   97           | ALPHA . '_' ALPHA

    '('  shift, and go to state 42
    '_'  shift, and go to state 93

    $default  reduce using rule 91 (assignment)


State 74

   23 call: ALPHA '(' args . ')'

    ')'  shift, and go to state 125


State 75

   21 args: call .

    $default  reduce using rule 21 (args)


State 76

   19 args: assignment .
   20     | assignment . ',' args

    ','  shift, and go to state 126

    $default  reduce using rule 19 (args)


State 77

   99 var_init: DIGIT .

    $default  reduce using rule 99 (var_init)


State 78

   23 call: ALPHA . '(' args ')'
   65 var: ALPHA '=' ALPHA .
   70    | ALPHA '=' ALPHA . '_' DIGIT
   71    | ALPHA '=' ALPHA . '_' ALPHA
   98 var_init: ALPHA .

    '('  shift, and go to state 42
    '_'  shift, and go to state 127

    '.'       reduce using rule 65 (var)
    '.'       [reduce using rule 98 (var_init)]
    $default  reduce using rule 98 (var_init)


State 79

   68 var: ALPHA '=' STRING_VALUE .

    $default  reduce using rule 68 (var)


State 80

   66 var: ALPHA '=' ESCAPE . ALPHA
   67    | ALPHA '=' ESCAPE . DIGIT

    DIGIT  shift, and go to state 128
    ALPHA  shift, and go to state 129


State 81

   72 var: ALPHA '=' CONVERT . '(' ALPHA ')'

    '('  shift, and go to state 130


State 82

   73 var: ALPHA '=' LENGTH . '(' ALPHA ')'

    '('  shift, and go to state 131


State 83

   77 var: ALPHA '=' call .

    $default  reduce using rule 77 (var)


State 84

   69 var: ALPHA '=' var_init . operation

    '+'  shift, and go to state 107
    '-'  shift, and go to state 108
    '*'  shift, and go to state 109
    '/'  shift, and go to state 110
    '%'  shift, and go to state 111

    $default  reduce using rule 90 (operation)

    operation  go to state 132
    op         go to state 133


State 85

   78 var: ALPHA '_' DIGIT . '=' DIGIT
   79    | ALPHA '_' DIGIT . '=' ESCAPE ALPHA
   80    | ALPHA '_' DIGIT . '=' ESCAPE DIGIT
   81    | ALPHA '_' DIGIT . '=' STRING_VALUE

    '='  shift, and go to state 134


State 86

   82 var: ALPHA '_' ALPHA . '=' ALPHA
   83    | ALPHA '_' ALPHA . '=' DIGIT
   84    | ALPHA '_' ALPHA . '=' STRING_VALUE
   85    | ALPHA '_' ALPHA . '=' ALPHA '_' ALPHA
   86    | ALPHA '_' ALPHA . '=' ESCAPE ALPHA
   87    | ALPHA '_' ALPHA . '=' ESCAPE DIGIT

    '='  shift, and go to state 135


State 87

   39 var: INT ALPHA '=' . DIGIT operation
   40    | INT ALPHA '=' . ALPHA operation
   49    | INT ALPHA '=' . CONVERT '(' ALPHA ')'
   50    | INT ALPHA '=' . LENGTH '(' ALPHA ')'
   51    | INT ALPHA '=' . ALPHA '_' DIGIT
   53    | INT ALPHA '=' . ALPHA '_' ALPHA
   74    | INT ALPHA '=' . call

    DIGIT    shift, and go to state 136
    ALPHA    shift, and go to state 137
    CONVERT  shift, and go to state 138
    LENGTH   shift, and go to state 139

    call  go to state 140


State 88

   46 var: INT ALPHA '_' . DIGIT '=' digit_array
   60    | INT ALPHA '_' . DIGIT
   61    | INT ALPHA '_' . ALPHA

    DIGIT  shift, and go to state 141
    ALPHA  shift, and go to state 142


State 89

   41 var: STRING ALPHA '=' . STRING_VALUE
   42    | STRING ALPHA '=' . ALPHA
   52    | STRING ALPHA '=' . ALPHA '_' DIGIT
   54    | STRING ALPHA '=' . ALPHA '_' ALPHA
   75    | STRING ALPHA '=' . call

    ALPHA         shift, and go to state 143
    STRING_VALUE  shift, and go to state 144

    call  go to state 145


State 90

   47 var: STRING ALPHA '_' . DIGIT '=' alpha_array
   62    | STRING ALPHA '_' . DIGIT

    DIGIT  shift, and go to state 146


State 91

   43 var: CHAR ALPHA '=' . ESCAPE ALPHA
   44    | CHAR ALPHA '=' . ESCAPE DIGIT
   45    | CHAR ALPHA '=' . ALPHA
   55    | CHAR ALPHA '=' . ALPHA '_' DIGIT
   56    | CHAR ALPHA '=' . ALPHA '_' ALPHA
   76    | CHAR ALPHA '=' . call

    ALPHA   shift, and go to state 147
    ESCAPE  shift, and go to state 148

    call  go to state 149


State 92

   48 var: CHAR ALPHA '_' . DIGIT '=' char_array
   63    | CHAR ALPHA '_' . DIGIT
   64    | CHAR ALPHA '_' . ALPHA

    DIGIT  shift, and go to state 150
    ALPHA  shift, and go to state 151


State 93

   96 assignment: ALPHA '_' . DIGIT
   97           | ALPHA '_' . ALPHA

    DIGIT  shift, and go to state 152
    ALPHA  shift, and go to state 153


State 94

   95 assignment: ESCAPE DIGIT .

    $default  reduce using rule 95 (assignment)


State 95

   94 assignment: ESCAPE ALPHA .

    $default  reduce using rule 94 (assignment)


State 96

   26 program: RETURN assignment '.' .

    $default  reduce using rule 26 (program)


State 97

   33 get: STDIN '(' ALPHA . ',' DIGIT ')' '.'

    ','  shift, and go to state 154


State 98

   37 out: ALPHA out .

    $default  reduce using rule 37 (out)


State 99

   34 out: SPACE_ALPHA out .

    $default  reduce using rule 34 (out)


State 100

   38 out: ESCAPE ALPHA . ESCAPE out

    ESCAPE  shift, and go to state 155


State 101

   35 out: ESCAPE SPACE_ALPHA . ESCAPE out

    ESCAPE  shift, and go to state 156


State 102

   28 program: STDOUT out '.' . program

    ALPHA   shift, and go to state 24
    INT     shift, and go to state 25
    STRING  shift, and go to state 26
    CHAR    shift, and go to state 27
    RETURN  shift, and go to state 28
    STDIN   shift, and go to state 29
    STDOUT  shift, and go to state 30
    '('     shift, and go to state 31

    $default  reduce using rule 32 (program)

    call     go to state 32
    program  go to state 157
    get      go to state 34
    var      go to state 35


State 103

  108 rule: '(' rule . operator rule ')'

    LE   shift, and go to state 104
    GE   shift, and go to state 105
    NE   shift, and go to state 106
    '+'  shift, and go to state 107
    '-'  shift, and go to state 108
    '*'  shift, and go to state 109
    '/'  shift, and go to state 110
    '%'  shift, and go to state 111
    '<'  shift, and go to state 112
    '>'  shift, and go to state 113
    '~'  shift, and go to state 114
    '|'  shift, and go to state 115
    '&'  shift, and go to state 116

    operator  go to state 158
    op        go to state 118


State 104

  113 operator: LE .

    $default  reduce using rule 113 (operator)


State 105

  114 operator: GE .

    $default  reduce using rule 114 (operator)


State 106

  116 operator: NE .

    $default  reduce using rule 116 (operator)


State 107

  119 op: '+' .

    $default  reduce using rule 119 (op)


State 108

  120 op: '-' .

    $default  reduce using rule 120 (op)


State 109

  122 op: '*' .

    $default  reduce using rule 122 (op)


State 110

  121 op: '/' .

    $default  reduce using rule 121 (op)


State 111

  123 op: '%' .

    $default  reduce using rule 123 (op)


State 112

  111 operator: '<' .

    $default  reduce using rule 111 (operator)


State 113

  112 operator: '>' .

    $default  reduce using rule 112 (operator)


State 114

  115 operator: '~' .

    $default  reduce using rule 115 (operator)


State 115

  117 operator: '|' .

    $default  reduce using rule 117 (operator)


State 116

  118 operator: '&' .

    $default  reduce using rule 118 (operator)


State 117

   29 program: '(' rule operator . rule ')' '?' WHILE '{' program '}' program
   30        | '(' rule operator . rule ')' '?' IF '{' program '}' program
   31        | '(' rule operator . rule ')' '?' IF '{' program '}' ':' '{' program '}' program

    DIGIT         shift, and go to state 48
    ALPHA         shift, and go to state 49
    STRING_VALUE  shift, and go to state 50
    ESCAPE        shift, and go to state 51
    '('           shift, and go to state 58

    assignment  go to state 59
    rule        go to state 159


State 118

  110 operator: op .

    $default  reduce using rule 110 (operator)


State 119

   25 program: call '.' program .

    $default  reduce using rule 25 (program)


State 120

   24 program: var '.' program .

    $default  reduce using rule 24 (program)


State 121

   16 params: type ALPHA .
   17       | type ALPHA . ',' params

    ','  shift, and go to state 160

    $default  reduce using rule 16 (params)


State 122

    7 function: INT FUNCTION ALPHA '(' params ')' . '{' program '}'
   10         | INT FUNCTION ALPHA '(' params ')' . '.'

    '{'  shift, and go to state 161
    '.'  shift, and go to state 162


State 123

    8 function: STRING FUNCTION ALPHA '(' params ')' . '{' program '}'
   11         | STRING FUNCTION ALPHA '(' params ')' . '.'

    '{'  shift, and go to state 163
    '.'  shift, and go to state 164


State 124

    9 function: CHAR FUNCTION ALPHA '(' params ')' . '{' program '}'
   12         | CHAR FUNCTION ALPHA '(' params ')' . '.'

    '{'  shift, and go to state 165
    '.'  shift, and go to state 166


State 125

   23 call: ALPHA '(' args ')' .

    $default  reduce using rule 23 (call)


State 126

   20 args: assignment ',' . args

    DIGIT         shift, and go to state 48
    ALPHA         shift, and go to state 73
    STRING_VALUE  shift, and go to state 50
    ESCAPE        shift, and go to state 51

    $default  reduce using rule 22 (args)

    args        go to state 167
    call        go to state 75
    assignment  go to state 76


State 127

   70 var: ALPHA '=' ALPHA '_' . DIGIT
   71    | ALPHA '=' ALPHA '_' . ALPHA

    DIGIT  shift, and go to state 168
    ALPHA  shift, and go to state 169


State 128

   67 var: ALPHA '=' ESCAPE DIGIT .

    $default  reduce using rule 67 (var)


State 129

   66 var: ALPHA '=' ESCAPE ALPHA .

    $default  reduce using rule 66 (var)


State 130

   72 var: ALPHA '=' CONVERT '(' . ALPHA ')'

    ALPHA  shift, and go to state 170


State 131

   73 var: ALPHA '=' LENGTH '(' . ALPHA ')'

    ALPHA  shift, and go to state 171


State 132

   69 var: ALPHA '=' var_init operation .

    $default  reduce using rule 69 (var)


State 133

   88 operation: op . DIGIT operation
   89          | op . ALPHA operation

    DIGIT  shift, and go to state 172
    ALPHA  shift, and go to state 173


State 134

   78 var: ALPHA '_' DIGIT '=' . DIGIT
   79    | ALPHA '_' DIGIT '=' . ESCAPE ALPHA
   80    | ALPHA '_' DIGIT '=' . ESCAPE DIGIT
   81    | ALPHA '_' DIGIT '=' . STRING_VALUE

    DIGIT         shift, and go to state 174
    STRING_VALUE  shift, and go to state 175
    ESCAPE        shift, and go to state 176


State 135

   82 var: ALPHA '_' ALPHA '=' . ALPHA
   83    | ALPHA '_' ALPHA '=' . DIGIT
   84    | ALPHA '_' ALPHA '=' . STRING_VALUE
   85    | ALPHA '_' ALPHA '=' . ALPHA '_' ALPHA
   86    | ALPHA '_' ALPHA '=' . ESCAPE ALPHA
   87    | ALPHA '_' ALPHA '=' . ESCAPE DIGIT

    DIGIT         shift, and go to state 177
    ALPHA         shift, and go to state 178
    STRING_VALUE  shift, and go to state 179
    ESCAPE        shift, and go to state 180


State 136

   39 var: INT ALPHA '=' DIGIT . operation

    '+'  shift, and go to state 107
    '-'  shift, and go to state 108
    '*'  shift, and go to state 109
    '/'  shift, and go to state 110
    '%'  shift, and go to state 111

    $default  reduce using rule 90 (operation)

    operation  go to state 181
    op         go to state 133


State 137

   23 call: ALPHA . '(' args ')'
   40 var: INT ALPHA '=' ALPHA . operation
   51    | INT ALPHA '=' ALPHA . '_' DIGIT
   53    | INT ALPHA '=' ALPHA . '_' ALPHA

    '+'  shift, and go to state 107
    '-'  shift, and go to state 108
    '*'  shift, and go to state 109
    '/'  shift, and go to state 110
    '%'  shift, and go to state 111
    '('  shift, and go to state 42
    '_'  shift, and go to state 182

    $default  reduce using rule 90 (operation)

    operation  go to state 183
    op         go to state 133


State 138

   49 var: INT ALPHA '=' CONVERT . '(' ALPHA ')'

    '('  shift, and go to state 184


State 139

   50 var: INT ALPHA '=' LENGTH . '(' ALPHA ')'

    '('  shift, and go to state 185


State 140

   74 var: INT ALPHA '=' call .

    $default  reduce using rule 74 (var)


State 141

   46 var: INT ALPHA '_' DIGIT . '=' digit_array
   60    | INT ALPHA '_' DIGIT .

    '='  shift, and go to state 186

    $default  reduce using rule 60 (var)


State 142

   61 var: INT ALPHA '_' ALPHA .

    $default  reduce using rule 61 (var)


State 143

   23 call: ALPHA . '(' args ')'
   42 var: STRING ALPHA '=' ALPHA .
   52    | STRING ALPHA '=' ALPHA . '_' DIGIT
   54    | STRING ALPHA '=' ALPHA . '_' ALPHA

    '('  shift, and go to state 42
    '_'  shift, and go to state 187

    $default  reduce using rule 42 (var)


State 144

   41 var: STRING ALPHA '=' STRING_VALUE .

    $default  reduce using rule 41 (var)


State 145

   75 var: STRING ALPHA '=' call .

    $default  reduce using rule 75 (var)


State 146

   47 var: STRING ALPHA '_' DIGIT . '=' alpha_array
   62    | STRING ALPHA '_' DIGIT .

    '='  shift, and go to state 188

    $default  reduce using rule 62 (var)


State 147

   23 call: ALPHA . '(' args ')'
   45 var: CHAR ALPHA '=' ALPHA .
   55    | CHAR ALPHA '=' ALPHA . '_' DIGIT
   56    | CHAR ALPHA '=' ALPHA . '_' ALPHA

    '('  shift, and go to state 42
    '_'  shift, and go to state 189

    $default  reduce using rule 45 (var)


State 148

   43 var: CHAR ALPHA '=' ESCAPE . ALPHA
   44    | CHAR ALPHA '=' ESCAPE . DIGIT

    DIGIT  shift, and go to state 190
    ALPHA  shift, and go to state 191


State 149

   76 var: CHAR ALPHA '=' call .

    $default  reduce using rule 76 (var)


State 150

   48 var: CHAR ALPHA '_' DIGIT . '=' char_array
   63    | CHAR ALPHA '_' DIGIT .

    '='  shift, and go to state 192

    $default  reduce using rule 63 (var)


State 151

   64 var: CHAR ALPHA '_' ALPHA .

    $default  reduce using rule 64 (var)


State 152

   96 assignment: ALPHA '_' DIGIT .

    $default  reduce using rule 96 (assignment)


State 153

   97 assignment: ALPHA '_' ALPHA .

    $default  reduce using rule 97 (assignment)


State 154

   33 get: STDIN '(' ALPHA ',' . DIGIT ')' '.'

    DIGIT  shift, and go to state 193


State 155

   38 out: ESCAPE ALPHA ESCAPE . out

    ALPHA        shift, and go to state 54
    SPACE_ALPHA  shift, and go to state 55
    ESCAPE       shift, and go to state 56

    $default  reduce using rule 36 (out)

    out  go to state 194


State 156

   35 out: ESCAPE SPACE_ALPHA ESCAPE . out

    ALPHA        shift, and go to state 54
    SPACE_ALPHA  shift, and go to state 55
    ESCAPE       shift, and go to state 56

    $default  reduce using rule 36 (out)

    out  go to state 195


State 157

   28 program: STDOUT out '.' program .

    $default  reduce using rule 28 (program)


State 158

  108 rule: '(' rule operator . rule ')'

    DIGIT         shift, and go to state 48
    ALPHA         shift, and go to state 49
    STRING_VALUE  shift, and go to state 50
    ESCAPE        shift, and go to state 51
    '('           shift, and go to state 58

    assignment  go to state 59
    rule        go to state 196


State 159

   29 program: '(' rule operator rule . ')' '?' WHILE '{' program '}' program
   30        | '(' rule operator rule . ')' '?' IF '{' program '}' program
   31        | '(' rule operator rule . ')' '?' IF '{' program '}' ':' '{' program '}' program

    ')'  shift, and go to state 197


State 160

   17 params: type ALPHA ',' . params

    INT     shift, and go to state 66
    STRING  shift, and go to state 67
    CHAR    shift, and go to state 68

    $default  reduce using rule 18 (params)

    type    go to state 69
    params  go to state 198


State 161

    7 function: INT FUNCTION ALPHA '(' params ')' '{' . program '}'

    ALPHA   shift, and go to state 24
    INT     shift, and go to state 25
    STRING  shift, and go to state 26
    CHAR    shift, and go to state 27
    RETURN  shift, and go to state 28
    STDIN   shift, and go to state 29
    STDOUT  shift, and go to state 30
    '('     shift, and go to state 31

    $default  reduce using rule 32 (program)

    call     go to state 32
    program  go to state 199
    get      go to state 34
    var      go to state 35


State 162

   10 function: INT FUNCTION ALPHA '(' params ')' '.' .

    $default  reduce using rule 10 (function)


State 163

    8 function: STRING FUNCTION ALPHA '(' params ')' '{' . program '}'

    ALPHA   shift, and go to state 24
    INT     shift, and go to state 25
    STRING  shift, and go to state 26
    CHAR    shift, and go to state 27
    RETURN  shift, and go to state 28
    STDIN   shift, and go to state 29
    STDOUT  shift, and go to state 30
    '('     shift, and go to state 31

    $default  reduce using rule 32 (program)

    call     go to state 32
    program  go to state 200
    get      go to state 34
    var      go to state 35


State 164

   11 function: STRING FUNCTION ALPHA '(' params ')' '.' .

    $default  reduce using rule 11 (function)


State 165

    9 function: CHAR FUNCTION ALPHA '(' params ')' '{' . program '}'

    ALPHA   shift, and go to state 24
    INT     shift, and go to state 25
    STRING  shift, and go to state 26
    CHAR    shift, and go to state 27
    RETURN  shift, and go to state 28
    STDIN   shift, and go to state 29
    STDOUT  shift, and go to state 30
    '('     shift, and go to state 31

    $default  reduce using rule 32 (program)

    call     go to state 32
    program  go to state 201
    get      go to state 34
    var      go to state 35


State 166

   12 function: CHAR FUNCTION ALPHA '(' params ')' '.' .

    $default  reduce using rule 12 (function)


State 167

   20 args: assignment ',' args .

    $default  reduce using rule 20 (args)


State 168

   70 var: ALPHA '=' ALPHA '_' DIGIT .

    $default  reduce using rule 70 (var)


State 169

   71 var: ALPHA '=' ALPHA '_' ALPHA .

    $default  reduce using rule 71 (var)


State 170

   72 var: ALPHA '=' CONVERT '(' ALPHA . ')'

    ')'  shift, and go to state 202


State 171

   73 var: ALPHA '=' LENGTH '(' ALPHA . ')'

    ')'  shift, and go to state 203


State 172

   88 operation: op DIGIT . operation

    '+'  shift, and go to state 107
    '-'  shift, and go to state 108
    '*'  shift, and go to state 109
    '/'  shift, and go to state 110
    '%'  shift, and go to state 111

    $default  reduce using rule 90 (operation)

    operation  go to state 204
    op         go to state 133


State 173

   89 operation: op ALPHA . operation

    '+'  shift, and go to state 107
    '-'  shift, and go to state 108
    '*'  shift, and go to state 109
    '/'  shift, and go to state 110
    '%'  shift, and go to state 111

    $default  reduce using rule 90 (operation)

    operation  go to state 205
    op         go to state 133


State 174

   78 var: ALPHA '_' DIGIT '=' DIGIT .

    $default  reduce using rule 78 (var)


State 175

   81 var: ALPHA '_' DIGIT '=' STRING_VALUE .

    $default  reduce using rule 81 (var)


State 176

   79 var: ALPHA '_' DIGIT '=' ESCAPE . ALPHA
   80    | ALPHA '_' DIGIT '=' ESCAPE . DIGIT

    DIGIT  shift, and go to state 206
    ALPHA  shift, and go to state 207


State 177

   83 var: ALPHA '_' ALPHA '=' DIGIT .

    $default  reduce using rule 83 (var)


State 178

   82 var: ALPHA '_' ALPHA '=' ALPHA .
   85    | ALPHA '_' ALPHA '=' ALPHA . '_' ALPHA

    '_'  shift, and go to state 208

    $default  reduce using rule 82 (var)


State 179

   84 var: ALPHA '_' ALPHA '=' STRING_VALUE .

    $default  reduce using rule 84 (var)


State 180

   86 var: ALPHA '_' ALPHA '=' ESCAPE . ALPHA
   87    | ALPHA '_' ALPHA '=' ESCAPE . DIGIT

    DIGIT  shift, and go to state 209
    ALPHA  shift, and go to state 210


State 181

   39 var: INT ALPHA '=' DIGIT operation .

    $default  reduce using rule 39 (var)


State 182

   51 var: INT ALPHA '=' ALPHA '_' . DIGIT
   53    | INT ALPHA '=' ALPHA '_' . ALPHA

    DIGIT  shift, and go to state 211
    ALPHA  shift, and go to state 212


State 183

   40 var: INT ALPHA '=' ALPHA operation .

    $default  reduce using rule 40 (var)


State 184

   49 var: INT ALPHA '=' CONVERT '(' . ALPHA ')'

    ALPHA  shift, and go to state 213


State 185

   50 var: INT ALPHA '=' LENGTH '(' . ALPHA ')'

    ALPHA  shift, and go to state 214


State 186

   46 var: INT ALPHA '_' DIGIT '=' . digit_array

    DIGIT  shift, and go to state 215

    digit_array  go to state 216


State 187

   52 var: STRING ALPHA '=' ALPHA '_' . DIGIT
   54    | STRING ALPHA '=' ALPHA '_' . ALPHA

    DIGIT  shift, and go to state 217
    ALPHA  shift, and go to state 218


State 188

   47 var: STRING ALPHA '_' DIGIT '=' . alpha_array

    STRING_VALUE  shift, and go to state 219

    alpha_array  go to state 220


State 189

   55 var: CHAR ALPHA '=' ALPHA '_' . DIGIT
   56    | CHAR ALPHA '=' ALPHA '_' . ALPHA

    DIGIT  shift, and go to state 221
    ALPHA  shift, and go to state 222


State 190

   44 var: CHAR ALPHA '=' ESCAPE DIGIT .

    $default  reduce using rule 44 (var)


State 191

   43 var: CHAR ALPHA '=' ESCAPE ALPHA .

    $default  reduce using rule 43 (var)


State 192

   48 var: CHAR ALPHA '_' DIGIT '=' . char_array

    ESCAPE  shift, and go to state 223

    char_array  go to state 224


State 193

   33 get: STDIN '(' ALPHA ',' DIGIT . ')' '.'

    ')'  shift, and go to state 225


State 194

   38 out: ESCAPE ALPHA ESCAPE out .

    $default  reduce using rule 38 (out)


State 195

   35 out: ESCAPE SPACE_ALPHA ESCAPE out .

    $default  reduce using rule 35 (out)


State 196

  108 rule: '(' rule operator rule . ')'

    ')'  shift, and go to state 226


State 197

   29 program: '(' rule operator rule ')' . '?' WHILE '{' program '}' program
   30        | '(' rule operator rule ')' . '?' IF '{' program '}' program
   31        | '(' rule operator rule ')' . '?' IF '{' program '}' ':' '{' program '}' program

    '?'  shift, and go to state 227


State 198

   17 params: type ALPHA ',' params .

    $default  reduce using rule 17 (params)


State 199

    7 function: INT FUNCTION ALPHA '(' params ')' '{' program . '}'

    '}'  shift, and go to state 228


State 200

    8 function: STRING FUNCTION ALPHA '(' params ')' '{' program . '}'

    '}'  shift, and go to state 229


State 201

    9 function: CHAR FUNCTION ALPHA '(' params ')' '{' program . '}'

    '}'  shift, and go to state 230


State 202

   72 var: ALPHA '=' CONVERT '(' ALPHA ')' .

    $default  reduce using rule 72 (var)


State 203

   73 var: ALPHA '=' LENGTH '(' ALPHA ')' .

    $default  reduce using rule 73 (var)


State 204

   88 operation: op DIGIT operation .

    $default  reduce using rule 88 (operation)


State 205

   89 operation: op ALPHA operation .

    $default  reduce using rule 89 (operation)


State 206

   80 var: ALPHA '_' DIGIT '=' ESCAPE DIGIT .

    $default  reduce using rule 80 (var)


State 207

   79 var: ALPHA '_' DIGIT '=' ESCAPE ALPHA .

    $default  reduce using rule 79 (var)


State 208

   85 var: ALPHA '_' ALPHA '=' ALPHA '_' . ALPHA

    ALPHA  shift, and go to state 231


State 209

   87 var: ALPHA '_' ALPHA '=' ESCAPE DIGIT .

    $default  reduce using rule 87 (var)


State 210

   86 var: ALPHA '_' ALPHA '=' ESCAPE ALPHA .

    $default  reduce using rule 86 (var)


State 211

   51 var: INT ALPHA '=' ALPHA '_' DIGIT .

    $default  reduce using rule 51 (var)


State 212

   53 var: INT ALPHA '=' ALPHA '_' ALPHA .

    $default  reduce using rule 53 (var)


State 213

   49 var: INT ALPHA '=' CONVERT '(' ALPHA . ')'

    ')'  shift, and go to state 232


State 214

   50 var: INT ALPHA '=' LENGTH '(' ALPHA . ')'

    ')'  shift, and go to state 233


State 215

  102 digit_array: DIGIT . ',' digit_array
  103            | DIGIT .

    ','  shift, and go to state 234

    $default  reduce using rule 103 (digit_array)


State 216

   46 var: INT ALPHA '_' DIGIT '=' digit_array .

    $default  reduce using rule 46 (var)


State 217

   52 var: STRING ALPHA '=' ALPHA '_' DIGIT .

    $default  reduce using rule 52 (var)


State 218

   54 var: STRING ALPHA '=' ALPHA '_' ALPHA .

    $default  reduce using rule 54 (var)


State 219

  100 alpha_array: STRING_VALUE . ',' alpha_array
  101            | STRING_VALUE .

    ','  shift, and go to state 235

    $default  reduce using rule 101 (alpha_array)


State 220

   47 var: STRING ALPHA '_' DIGIT '=' alpha_array .

    $default  reduce using rule 47 (var)


State 221

   55 var: CHAR ALPHA '=' ALPHA '_' DIGIT .

    $default  reduce using rule 55 (var)


State 222

   56 var: CHAR ALPHA '=' ALPHA '_' ALPHA .

    $default  reduce using rule 56 (var)


State 223

  104 char_array: ESCAPE . ALPHA ',' char_array
  105           | ESCAPE . ALPHA
  106           | ESCAPE . DIGIT ',' char_array
  107           | ESCAPE . DIGIT

    DIGIT  shift, and go to state 236
    ALPHA  shift, and go to state 237


State 224

   48 var: CHAR ALPHA '_' DIGIT '=' char_array .

    $default  reduce using rule 48 (var)


State 225

   33 get: STDIN '(' ALPHA ',' DIGIT ')' . '.'

    '.'  shift, and go to state 238


State 226

  108 rule: '(' rule operator rule ')' .

    $default  reduce using rule 108 (rule)


State 227

   29 program: '(' rule operator rule ')' '?' . WHILE '{' program '}' program
   30        | '(' rule operator rule ')' '?' . IF '{' program '}' program
   31        | '(' rule operator rule ')' '?' . IF '{' program '}' ':' '{' program '}' program

    IF     shift, and go to state 239
    WHILE  shift, and go to state 240


State 228

    7 function: INT FUNCTION ALPHA '(' params ')' '{' program '}' .

    $default  reduce using rule 7 (function)


State 229

    8 function: STRING FUNCTION ALPHA '(' params ')' '{' program '}' .

    $default  reduce using rule 8 (function)


State 230

    9 function: CHAR FUNCTION ALPHA '(' params ')' '{' program '}' .

    $default  reduce using rule 9 (function)


State 231

   85 var: ALPHA '_' ALPHA '=' ALPHA '_' ALPHA .

    $default  reduce using rule 85 (var)


State 232

   49 var: INT ALPHA '=' CONVERT '(' ALPHA ')' .

    $default  reduce using rule 49 (var)


State 233

   50 var: INT ALPHA '=' LENGTH '(' ALPHA ')' .

    $default  reduce using rule 50 (var)


State 234

  102 digit_array: DIGIT ',' . digit_array

    DIGIT  shift, and go to state 215

    digit_array  go to state 241


State 235

  100 alpha_array: STRING_VALUE ',' . alpha_array

    STRING_VALUE  shift, and go to state 219

    alpha_array  go to state 242


State 236

  106 char_array: ESCAPE DIGIT . ',' char_array
  107           | ESCAPE DIGIT .

    ','  shift, and go to state 243

    $default  reduce using rule 107 (char_array)


State 237

  104 char_array: ESCAPE ALPHA . ',' char_array
  105           | ESCAPE ALPHA .

    ','  shift, and go to state 244

    $default  reduce using rule 105 (char_array)


State 238

   33 get: STDIN '(' ALPHA ',' DIGIT ')' '.' .

    $default  reduce using rule 33 (get)


State 239

   30 program: '(' rule operator rule ')' '?' IF . '{' program '}' program
   31        | '(' rule operator rule ')' '?' IF . '{' program '}' ':' '{' program '}' program

    '{'  shift, and go to state 245


State 240

   29 program: '(' rule operator rule ')' '?' WHILE . '{' program '}' program

    '{'  shift, and go to state 246


State 241

  102 digit_array: DIGIT ',' digit_array .

    $default  reduce using rule 102 (digit_array)


State 242

  100 alpha_array: STRING_VALUE ',' alpha_array .

    $default  reduce using rule 100 (alpha_array)


State 243

  106 char_array: ESCAPE DIGIT ',' . char_array

    ESCAPE  shift, and go to state 223

    char_array  go to state 247


State 244

  104 char_array: ESCAPE ALPHA ',' . char_array

    ESCAPE  shift, and go to state 223

    char_array  go to state 248


State 245

   30 program: '(' rule operator rule ')' '?' IF '{' . program '}' program
   31        | '(' rule operator rule ')' '?' IF '{' . program '}' ':' '{' program '}' program

    ALPHA   shift, and go to state 24
    INT     shift, and go to state 25
    STRING  shift, and go to state 26
    CHAR    shift, and go to state 27
    RETURN  shift, and go to state 28
    STDIN   shift, and go to state 29
    STDOUT  shift, and go to state 30
    '('     shift, and go to state 31

    $default  reduce using rule 32 (program)

    call     go to state 32
    program  go to state 249
    get      go to state 34
    var      go to state 35


State 246

   29 program: '(' rule operator rule ')' '?' WHILE '{' . program '}' program

    ALPHA   shift, and go to state 24
    INT     shift, and go to state 25
    STRING  shift, and go to state 26
    CHAR    shift, and go to state 27
    RETURN  shift, and go to state 28
    STDIN   shift, and go to state 29
    STDOUT  shift, and go to state 30
    '('     shift, and go to state 31

    $default  reduce using rule 32 (program)

    call     go to state 32
    program  go to state 250
    get      go to state 34
    var      go to state 35


State 247

  106 char_array: ESCAPE DIGIT ',' char_array .

    $default  reduce using rule 106 (char_array)


State 248

  104 char_array: ESCAPE ALPHA ',' char_array .

    $default  reduce using rule 104 (char_array)


State 249

   30 program: '(' rule operator rule ')' '?' IF '{' program . '}' program
   31        | '(' rule operator rule ')' '?' IF '{' program . '}' ':' '{' program '}' program

    '}'  shift, and go to state 251


State 250

   29 program: '(' rule operator rule ')' '?' WHILE '{' program . '}' program

    '}'  shift, and go to state 252


State 251

   30 program: '(' rule operator rule ')' '?' IF '{' program '}' . program
   31        | '(' rule operator rule ')' '?' IF '{' program '}' . ':' '{' program '}' program

    ALPHA   shift, and go to state 24
    INT     shift, and go to state 25
    STRING  shift, and go to state 26
    CHAR    shift, and go to state 27
    RETURN  shift, and go to state 28
    STDIN   shift, and go to state 29
    STDOUT  shift, and go to state 30
    '('     shift, and go to state 31
    ':'     shift, and go to state 253

    $default  reduce using rule 32 (program)

    call     go to state 32
    program  go to state 254
    get      go to state 34
    var      go to state 35


State 252

   29 program: '(' rule operator rule ')' '?' WHILE '{' program '}' . program

    ALPHA   shift, and go to state 24
    INT     shift, and go to state 25
    STRING  shift, and go to state 26
    CHAR    shift, and go to state 27
    RETURN  shift, and go to state 28
    STDIN   shift, and go to state 29
    STDOUT  shift, and go to state 30
    '('     shift, and go to state 31

    $default  reduce using rule 32 (program)

    call     go to state 32
    program  go to state 255
    get      go to state 34
    var      go to state 35


State 253

   31 program: '(' rule operator rule ')' '?' IF '{' program '}' ':' . '{' program '}' program

    '{'  shift, and go to state 256


State 254

   30 program: '(' rule operator rule ')' '?' IF '{' program '}' program .

    $default  reduce using rule 30 (program)


State 255

   29 program: '(' rule operator rule ')' '?' WHILE '{' program '}' program .

    $default  reduce using rule 29 (program)


State 256

   31 program: '(' rule operator rule ')' '?' IF '{' program '}' ':' '{' . program '}' program

    ALPHA   shift, and go to state 24
    INT     shift, and go to state 25
    STRING  shift, and go to state 26
    CHAR    shift, and go to state 27
    RETURN  shift, and go to state 28
    STDIN   shift, and go to state 29
    STDOUT  shift, and go to state 30
    '('     shift, and go to state 31

    $default  reduce using rule 32 (program)

    call     go to state 32
    program  go to state 257
    get      go to state 34
    var      go to state 35


State 257

   31 program: '(' rule operator rule ')' '?' IF '{' program '}' ':' '{' program . '}' program

    '}'  shift, and go to state 258


State 258

   31 program: '(' rule operator rule ')' '?' IF '{' program '}' ':' '{' program '}' . program

    ALPHA   shift, and go to state 24
    INT     shift, and go to state 25
    STRING  shift, and go to state 26
    CHAR    shift, and go to state 27
    RETURN  shift, and go to state 28
    STDIN   shift, and go to state 29
    STDOUT  shift, and go to state 30
    '('     shift, and go to state 31

    $default  reduce using rule 32 (program)

    call     go to state 32
    program  go to state 259
    get      go to state 34
    var      go to state 35


State 259

   31 program: '(' rule operator rule ')' '?' IF '{' program '}' ':' '{' program '}' program .

    $default  reduce using rule 31 (program)
