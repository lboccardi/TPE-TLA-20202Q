Nonterminals useless in grammar

    arrow


Rules useless in grammar

  106 arrow: WHILE
  107      | IF


State 65 conflicts: 1 reduce/reduce
State 66 conflicts: 1 reduce/reduce
State 67 conflicts: 1 reduce/reduce
State 115 conflicts: 1 reduce/reduce


Grammar

    0 $accept: start $end

    1 start: MAIN EXEC program END_EXEC
    2      | function start

    3 function: INT FUNCTION ALPHA OPEN_P params CLOSE_P EXEC program END_EXEC
    4         | STRING FUNCTION ALPHA OPEN_P params CLOSE_P EXEC program END_EXEC
    5         | CHAR FUNCTION ALPHA OPEN_P params CLOSE_P EXEC program END_EXEC

    6 type: INT
    7     | STRING
    8     | CHAR

    9 params: type ALPHA
   10       | type ALPHA COMMA params
   11       | %empty

   12 args: assignment
   13     | assignment COMMA args
   14     | call
   15     | %empty

   16 call: ALPHA OPEN_P args CLOSE_P

   17 program: var END program
   18        | call END program
   19        | RETURN assignment END
   20        | get program
   21        | STDOUT out END program
   22        | OPEN_P rule operator rule CLOSE_P CONDITIONAL WHILE EXEC program END_EXEC program
   23        | OPEN_P rule operator rule CLOSE_P CONDITIONAL IF EXEC program END_EXEC program
   24        | OPEN_P rule operator rule CLOSE_P CONDITIONAL IF EXEC program END_EXEC ELSE EXEC program END_EXEC program
   25        | %empty

   26 get: STDIN OPEN_P ALPHA COMMA DIGIT CLOSE_P END

   27 out: SPACE_ALPHA out
   28    | ESCAPE SPACE_ALPHA ESCAPE out
   29    | %empty
   30    | ALPHA out
   31    | ESCAPE ALPHA ESCAPE out

   32 var: INT ALPHA ASSIGN DIGIT operation
   33    | INT ALPHA ASSIGN ALPHA operation
   34    | STRING ALPHA ASSIGN STRING_VALUE
   35    | STRING ALPHA ASSIGN ALPHA
   36    | CHAR ALPHA ASSIGN ESCAPE ALPHA
   37    | CHAR ALPHA ASSIGN ESCAPE DIGIT
   38    | INT ALPHA ARRAY DIGIT ASSIGN digit_array
   39    | STRING ALPHA ARRAY DIGIT ASSIGN alpha_array
   40    | CHAR ALPHA ARRAY DIGIT ASSIGN char_array
   41    | INT ALPHA ASSIGN CONVERT OPEN_P ALPHA CLOSE_P
   42    | INT ALPHA ASSIGN LENGTH OPEN_P ALPHA CLOSE_P
   43    | INT ALPHA ASSIGN ALPHA ARRAY DIGIT
   44    | STRING ALPHA ASSIGN ALPHA ARRAY DIGIT
   45    | INT ALPHA ASSIGN ALPHA ARRAY ALPHA
   46    | STRING ALPHA ASSIGN ALPHA ARRAY ALPHA
   47    | CHAR ALPHA ASSIGN ALPHA
   48    | CHAR ALPHA ASSIGN ALPHA ARRAY DIGIT
   49    | CHAR ALPHA ASSIGN ALPHA ARRAY ALPHA
   50    | INT ALPHA
   51    | CHAR ALPHA
   52    | STRING ALPHA
   53    | INT ALPHA ARRAY DIGIT
   54    | STRING ALPHA ARRAY DIGIT
   55    | CHAR ALPHA ARRAY DIGIT
   56    | ALPHA ASSIGN ALPHA
   57    | ALPHA ASSIGN ESCAPE ALPHA
   58    | ALPHA ASSIGN ESCAPE DIGIT
   59    | ALPHA ASSIGN DIGIT
   60    | ALPHA ASSIGN STRING_VALUE
   61    | ALPHA ASSIGN assignment operation
   62    | ALPHA ASSIGN ALPHA ARRAY DIGIT
   63    | ALPHA ASSIGN ALPHA ARRAY ALPHA
   64    | ALPHA ASSIGN CONVERT OPEN_P ALPHA CLOSE_P
   65    | ALPHA ASSIGN LENGTH OPEN_P ALPHA CLOSE_P
   66    | INT ALPHA ASSIGN call
   67    | STRING ALPHA ASSIGN call
   68    | CHAR ALPHA ASSIGN call
   69    | ALPHA ASSIGN call
   70    | ALPHA ARRAY DIGIT ASSIGN DIGIT
   71    | ALPHA ARRAY DIGIT ASSIGN ESCAPE ALPHA
   72    | ALPHA ARRAY DIGIT ASSIGN ESCAPE DIGIT
   73    | ALPHA ARRAY DIGIT ASSIGN STRING_VALUE
   74    | ALPHA ARRAY ALPHA ASSIGN ALPHA

   75 operation: op DIGIT operation
   76          | op ALPHA operation
   77          | %empty

   78 assignment: ALPHA
   79           | DIGIT
   80           | STRING_VALUE
   81           | ESCAPE ALPHA

   82 alpha_array: STRING_VALUE COMMA alpha_array
   83            | STRING_VALUE

   84 digit_array: DIGIT COMMA digit_array
   85            | DIGIT

   86 char_array: ESCAPE ALPHA COMMA char_array
   87           | ESCAPE ALPHA
   88           | ESCAPE DIGIT COMMA char_array
   89           | ESCAPE DIGIT

   90 rule: OPEN_P rule operator rule CLOSE_P
   91     | assignment

   92 operator: op
   93         | L
   94         | G
   95         | LE
   96         | GE
   97         | EQ
   98         | NE
   99         | OR
  100         | AND

  101 op: PLUS
  102   | MINUS
  103   | DIV
  104   | TIMES
  105   | MOD


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    DIGIT <stringValue> (258) 26 32 37 38 39 40 43 44 48 53 54 55 58 59 62 70 71 72 73 75 79 84 85 88 89
    ALPHA <stringValue> (259) 3 4 5 9 10 16 26 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 76 78 81 86 87
    SPACE_ALPHA <stringValue> (260) 27 28
    STRING_VALUE <stringValue> (261) 34 60 73 80 82 83
    INT <stringValue> (262) 3 6 32 33 38 41 42 43 45 50 53 66
    STRING <stringValue> (263) 4 7 34 35 39 44 46 52 54 67
    CHAR <stringValue> (264) 5 8 36 37 40 47 48 49 51 55 68
    PLUS <stringValue> (265) 101
    MINUS <stringValue> (266) 102
    TIMES <stringValue> (267) 104
    DIV <stringValue> (268) 103
    MOD <stringValue> (269) 105
    END (270) 17 18 19 21 26
    OPEN_P (271) 3 4 5 16 22 23 24 26 41 42 64 65 90
    CLOSE_P (272) 3 4 5 16 22 23 24 26 41 42 64 65 90
    CONDITIONAL (273) 22 23 24
    EXEC (274) 1 3 4 5 22 23 24
    END_EXEC (275) 1 3 4 5 22 23 24
    IF (276) 23 24
    ELSE (277) 24
    ESCAPE (278) 28 31 36 37 57 58 71 72 81 86 87 88 89
    WHILE (279) 22
    L (280) 93
    G (281) 94
    LE (282) 95
    GE (283) 96
    EQ (284) 97
    NE (285) 98
    OR (286) 99
    AND (287) 100
    ASSIGN (288) 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74
    RETURN (289) 19
    MAIN (290) 1
    STDIN (291) 26
    STDOUT (292) 21
    CONVERT (293) 41 64
    LENGTH (294) 42 65
    FUNCTION (295) 3 4 5
    COMMA (296) 10 13 26 82 84 86 88
    ARRAY (297) 38 39 40 43 44 45 46 48 49 53 54 55 62 63 70 71 72 73 74


Nonterminals, with rules where they appear

    $accept (43)
        on left: 0
    start <stringValue> (44)
        on left: 1 2
        on right: 0 2
    function <stringValue> (45)
        on left: 3 4 5
        on right: 2
    type <stringValue> (46)
        on left: 6 7 8
        on right: 9 10
    params <stringValue> (47)
        on left: 9 10 11
        on right: 3 4 5 10
    args <stringValue> (48)
        on left: 12 13 14 15
        on right: 13 16
    call <stringValue> (49)
        on left: 16
        on right: 14 18 66 67 68 69
    program <stringValue> (50)
        on left: 17 18 19 20 21 22 23 24 25
        on right: 1 3 4 5 17 18 20 21 22 23 24
    get <stringValue> (51)
        on left: 26
        on right: 20
    out <stringValue> (52)
        on left: 27 28 29 30 31
        on right: 21 27 28 30 31
    var <stringValue> (53)
        on left: 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74
        on right: 17
    operation <stringValue> (54)
        on left: 75 76 77
        on right: 32 33 61 75 76
    assignment <stringValue> (55)
        on left: 78 79 80 81
        on right: 12 13 19 61 91
    alpha_array <stringValue> (56)
        on left: 82 83
        on right: 39 82
    digit_array <stringValue> (57)
        on left: 84 85
        on right: 38 84
    char_array <stringValue> (58)
        on left: 86 87 88 89
        on right: 40 86 88
    rule <stringValue> (59)
        on left: 90 91
        on right: 22 23 24 90
    operator <stringValue> (60)
        on left: 92 93 94 95 96 97 98 99 100
        on right: 22 23 24 90
    op <stringValue> (61)
        on left: 101 102 103 104 105
        on right: 75 76 92


State 0

    0 $accept: . start $end

    INT     shift, and go to state 1
    STRING  shift, and go to state 2
    CHAR    shift, and go to state 3
    MAIN    shift, and go to state 4

    start     go to state 5
    function  go to state 6


State 1

    3 function: INT . FUNCTION ALPHA OPEN_P params CLOSE_P EXEC program END_EXEC

    FUNCTION  shift, and go to state 7


State 2

    4 function: STRING . FUNCTION ALPHA OPEN_P params CLOSE_P EXEC program END_EXEC

    FUNCTION  shift, and go to state 8


State 3

    5 function: CHAR . FUNCTION ALPHA OPEN_P params CLOSE_P EXEC program END_EXEC

    FUNCTION  shift, and go to state 9


State 4

    1 start: MAIN . EXEC program END_EXEC

    EXEC  shift, and go to state 10


State 5

    0 $accept: start . $end

    $end  shift, and go to state 11


State 6

    2 start: function . start

    INT     shift, and go to state 1
    STRING  shift, and go to state 2
    CHAR    shift, and go to state 3
    MAIN    shift, and go to state 4

    start     go to state 12
    function  go to state 6


State 7

    3 function: INT FUNCTION . ALPHA OPEN_P params CLOSE_P EXEC program END_EXEC

    ALPHA  shift, and go to state 13


State 8

    4 function: STRING FUNCTION . ALPHA OPEN_P params CLOSE_P EXEC program END_EXEC

    ALPHA  shift, and go to state 14


State 9

    5 function: CHAR FUNCTION . ALPHA OPEN_P params CLOSE_P EXEC program END_EXEC

    ALPHA  shift, and go to state 15


State 10

    1 start: MAIN EXEC . program END_EXEC

    ALPHA   shift, and go to state 16
    INT     shift, and go to state 17
    STRING  shift, and go to state 18
    CHAR    shift, and go to state 19
    OPEN_P  shift, and go to state 20
    RETURN  shift, and go to state 21
    STDIN   shift, and go to state 22
    STDOUT  shift, and go to state 23

    $default  reduce using rule 25 (program)

    call     go to state 24
    program  go to state 25
    get      go to state 26
    var      go to state 27


State 11

    0 $accept: start $end .

    $default  accept


State 12

    2 start: function start .

    $default  reduce using rule 2 (start)


State 13

    3 function: INT FUNCTION ALPHA . OPEN_P params CLOSE_P EXEC program END_EXEC

    OPEN_P  shift, and go to state 28


State 14

    4 function: STRING FUNCTION ALPHA . OPEN_P params CLOSE_P EXEC program END_EXEC

    OPEN_P  shift, and go to state 29


State 15

    5 function: CHAR FUNCTION ALPHA . OPEN_P params CLOSE_P EXEC program END_EXEC

    OPEN_P  shift, and go to state 30


State 16

   16 call: ALPHA . OPEN_P args CLOSE_P
   56 var: ALPHA . ASSIGN ALPHA
   57    | ALPHA . ASSIGN ESCAPE ALPHA
   58    | ALPHA . ASSIGN ESCAPE DIGIT
   59    | ALPHA . ASSIGN DIGIT
   60    | ALPHA . ASSIGN STRING_VALUE
   61    | ALPHA . ASSIGN assignment operation
   62    | ALPHA . ASSIGN ALPHA ARRAY DIGIT
   63    | ALPHA . ASSIGN ALPHA ARRAY ALPHA
   64    | ALPHA . ASSIGN CONVERT OPEN_P ALPHA CLOSE_P
   65    | ALPHA . ASSIGN LENGTH OPEN_P ALPHA CLOSE_P
   69    | ALPHA . ASSIGN call
   70    | ALPHA . ARRAY DIGIT ASSIGN DIGIT
   71    | ALPHA . ARRAY DIGIT ASSIGN ESCAPE ALPHA
   72    | ALPHA . ARRAY DIGIT ASSIGN ESCAPE DIGIT
   73    | ALPHA . ARRAY DIGIT ASSIGN STRING_VALUE
   74    | ALPHA . ARRAY ALPHA ASSIGN ALPHA

    OPEN_P  shift, and go to state 31
    ASSIGN  shift, and go to state 32
    ARRAY   shift, and go to state 33


State 17

   32 var: INT . ALPHA ASSIGN DIGIT operation
   33    | INT . ALPHA ASSIGN ALPHA operation
   38    | INT . ALPHA ARRAY DIGIT ASSIGN digit_array
   41    | INT . ALPHA ASSIGN CONVERT OPEN_P ALPHA CLOSE_P
   42    | INT . ALPHA ASSIGN LENGTH OPEN_P ALPHA CLOSE_P
   43    | INT . ALPHA ASSIGN ALPHA ARRAY DIGIT
   45    | INT . ALPHA ASSIGN ALPHA ARRAY ALPHA
   50    | INT . ALPHA
   53    | INT . ALPHA ARRAY DIGIT
   66    | INT . ALPHA ASSIGN call

    ALPHA  shift, and go to state 34


State 18

   34 var: STRING . ALPHA ASSIGN STRING_VALUE
   35    | STRING . ALPHA ASSIGN ALPHA
   39    | STRING . ALPHA ARRAY DIGIT ASSIGN alpha_array
   44    | STRING . ALPHA ASSIGN ALPHA ARRAY DIGIT
   46    | STRING . ALPHA ASSIGN ALPHA ARRAY ALPHA
   52    | STRING . ALPHA
   54    | STRING . ALPHA ARRAY DIGIT
   67    | STRING . ALPHA ASSIGN call

    ALPHA  shift, and go to state 35


State 19

   36 var: CHAR . ALPHA ASSIGN ESCAPE ALPHA
   37    | CHAR . ALPHA ASSIGN ESCAPE DIGIT
   40    | CHAR . ALPHA ARRAY DIGIT ASSIGN char_array
   47    | CHAR . ALPHA ASSIGN ALPHA
   48    | CHAR . ALPHA ASSIGN ALPHA ARRAY DIGIT
   49    | CHAR . ALPHA ASSIGN ALPHA ARRAY ALPHA
   51    | CHAR . ALPHA
   55    | CHAR . ALPHA ARRAY DIGIT
   68    | CHAR . ALPHA ASSIGN call

    ALPHA  shift, and go to state 36


State 20

   22 program: OPEN_P . rule operator rule CLOSE_P CONDITIONAL WHILE EXEC program END_EXEC program
   23        | OPEN_P . rule operator rule CLOSE_P CONDITIONAL IF EXEC program END_EXEC program
   24        | OPEN_P . rule operator rule CLOSE_P CONDITIONAL IF EXEC program END_EXEC ELSE EXEC program END_EXEC program

    DIGIT         shift, and go to state 37
    ALPHA         shift, and go to state 38
    STRING_VALUE  shift, and go to state 39
    OPEN_P        shift, and go to state 40
    ESCAPE        shift, and go to state 41

    assignment  go to state 42
    rule        go to state 43


State 21

   19 program: RETURN . assignment END

    DIGIT         shift, and go to state 37
    ALPHA         shift, and go to state 38
    STRING_VALUE  shift, and go to state 39
    ESCAPE        shift, and go to state 41

    assignment  go to state 44


State 22

   26 get: STDIN . OPEN_P ALPHA COMMA DIGIT CLOSE_P END

    OPEN_P  shift, and go to state 45


State 23

   21 program: STDOUT . out END program

    ALPHA        shift, and go to state 46
    SPACE_ALPHA  shift, and go to state 47
    ESCAPE       shift, and go to state 48

    $default  reduce using rule 29 (out)

    out  go to state 49


State 24

   18 program: call . END program

    END  shift, and go to state 50


State 25

    1 start: MAIN EXEC program . END_EXEC

    END_EXEC  shift, and go to state 51


State 26

   20 program: get . program

    ALPHA   shift, and go to state 16
    INT     shift, and go to state 17
    STRING  shift, and go to state 18
    CHAR    shift, and go to state 19
    OPEN_P  shift, and go to state 20
    RETURN  shift, and go to state 21
    STDIN   shift, and go to state 22
    STDOUT  shift, and go to state 23

    $default  reduce using rule 25 (program)

    call     go to state 24
    program  go to state 52
    get      go to state 26
    var      go to state 27


State 27

   17 program: var . END program

    END  shift, and go to state 53


State 28

    3 function: INT FUNCTION ALPHA OPEN_P . params CLOSE_P EXEC program END_EXEC

    INT     shift, and go to state 54
    STRING  shift, and go to state 55
    CHAR    shift, and go to state 56

    $default  reduce using rule 11 (params)

    type    go to state 57
    params  go to state 58


State 29

    4 function: STRING FUNCTION ALPHA OPEN_P . params CLOSE_P EXEC program END_EXEC

    INT     shift, and go to state 54
    STRING  shift, and go to state 55
    CHAR    shift, and go to state 56

    $default  reduce using rule 11 (params)

    type    go to state 57
    params  go to state 59


State 30

    5 function: CHAR FUNCTION ALPHA OPEN_P . params CLOSE_P EXEC program END_EXEC

    INT     shift, and go to state 54
    STRING  shift, and go to state 55
    CHAR    shift, and go to state 56

    $default  reduce using rule 11 (params)

    type    go to state 57
    params  go to state 60


State 31

   16 call: ALPHA OPEN_P . args CLOSE_P

    DIGIT         shift, and go to state 37
    ALPHA         shift, and go to state 61
    STRING_VALUE  shift, and go to state 39
    ESCAPE        shift, and go to state 41

    $default  reduce using rule 15 (args)

    args        go to state 62
    call        go to state 63
    assignment  go to state 64


State 32

   56 var: ALPHA ASSIGN . ALPHA
   57    | ALPHA ASSIGN . ESCAPE ALPHA
   58    | ALPHA ASSIGN . ESCAPE DIGIT
   59    | ALPHA ASSIGN . DIGIT
   60    | ALPHA ASSIGN . STRING_VALUE
   61    | ALPHA ASSIGN . assignment operation
   62    | ALPHA ASSIGN . ALPHA ARRAY DIGIT
   63    | ALPHA ASSIGN . ALPHA ARRAY ALPHA
   64    | ALPHA ASSIGN . CONVERT OPEN_P ALPHA CLOSE_P
   65    | ALPHA ASSIGN . LENGTH OPEN_P ALPHA CLOSE_P
   69    | ALPHA ASSIGN . call

    DIGIT         shift, and go to state 65
    ALPHA         shift, and go to state 66
    STRING_VALUE  shift, and go to state 67
    ESCAPE        shift, and go to state 68
    CONVERT       shift, and go to state 69
    LENGTH        shift, and go to state 70

    call        go to state 71
    assignment  go to state 72


State 33

   70 var: ALPHA ARRAY . DIGIT ASSIGN DIGIT
   71    | ALPHA ARRAY . DIGIT ASSIGN ESCAPE ALPHA
   72    | ALPHA ARRAY . DIGIT ASSIGN ESCAPE DIGIT
   73    | ALPHA ARRAY . DIGIT ASSIGN STRING_VALUE
   74    | ALPHA ARRAY . ALPHA ASSIGN ALPHA

    DIGIT  shift, and go to state 73
    ALPHA  shift, and go to state 74


State 34

   32 var: INT ALPHA . ASSIGN DIGIT operation
   33    | INT ALPHA . ASSIGN ALPHA operation
   38    | INT ALPHA . ARRAY DIGIT ASSIGN digit_array
   41    | INT ALPHA . ASSIGN CONVERT OPEN_P ALPHA CLOSE_P
   42    | INT ALPHA . ASSIGN LENGTH OPEN_P ALPHA CLOSE_P
   43    | INT ALPHA . ASSIGN ALPHA ARRAY DIGIT
   45    | INT ALPHA . ASSIGN ALPHA ARRAY ALPHA
   50    | INT ALPHA .
   53    | INT ALPHA . ARRAY DIGIT
   66    | INT ALPHA . ASSIGN call

    ASSIGN  shift, and go to state 75
    ARRAY   shift, and go to state 76

    $default  reduce using rule 50 (var)


State 35

   34 var: STRING ALPHA . ASSIGN STRING_VALUE
   35    | STRING ALPHA . ASSIGN ALPHA
   39    | STRING ALPHA . ARRAY DIGIT ASSIGN alpha_array
   44    | STRING ALPHA . ASSIGN ALPHA ARRAY DIGIT
   46    | STRING ALPHA . ASSIGN ALPHA ARRAY ALPHA
   52    | STRING ALPHA .
   54    | STRING ALPHA . ARRAY DIGIT
   67    | STRING ALPHA . ASSIGN call

    ASSIGN  shift, and go to state 77
    ARRAY   shift, and go to state 78

    $default  reduce using rule 52 (var)


State 36

   36 var: CHAR ALPHA . ASSIGN ESCAPE ALPHA
   37    | CHAR ALPHA . ASSIGN ESCAPE DIGIT
   40    | CHAR ALPHA . ARRAY DIGIT ASSIGN char_array
   47    | CHAR ALPHA . ASSIGN ALPHA
   48    | CHAR ALPHA . ASSIGN ALPHA ARRAY DIGIT
   49    | CHAR ALPHA . ASSIGN ALPHA ARRAY ALPHA
   51    | CHAR ALPHA .
   55    | CHAR ALPHA . ARRAY DIGIT
   68    | CHAR ALPHA . ASSIGN call

    ASSIGN  shift, and go to state 79
    ARRAY   shift, and go to state 80

    $default  reduce using rule 51 (var)


State 37

   79 assignment: DIGIT .

    $default  reduce using rule 79 (assignment)


State 38

   78 assignment: ALPHA .

    $default  reduce using rule 78 (assignment)


State 39

   80 assignment: STRING_VALUE .

    $default  reduce using rule 80 (assignment)


State 40

   90 rule: OPEN_P . rule operator rule CLOSE_P

    DIGIT         shift, and go to state 37
    ALPHA         shift, and go to state 38
    STRING_VALUE  shift, and go to state 39
    OPEN_P        shift, and go to state 40
    ESCAPE        shift, and go to state 41

    assignment  go to state 42
    rule        go to state 81


State 41

   81 assignment: ESCAPE . ALPHA

    ALPHA  shift, and go to state 82


State 42

   91 rule: assignment .

    $default  reduce using rule 91 (rule)


State 43

   22 program: OPEN_P rule . operator rule CLOSE_P CONDITIONAL WHILE EXEC program END_EXEC program
   23        | OPEN_P rule . operator rule CLOSE_P CONDITIONAL IF EXEC program END_EXEC program
   24        | OPEN_P rule . operator rule CLOSE_P CONDITIONAL IF EXEC program END_EXEC ELSE EXEC program END_EXEC program

    PLUS   shift, and go to state 83
    MINUS  shift, and go to state 84
    TIMES  shift, and go to state 85
    DIV    shift, and go to state 86
    MOD    shift, and go to state 87
    L      shift, and go to state 88
    G      shift, and go to state 89
    LE     shift, and go to state 90
    GE     shift, and go to state 91
    EQ     shift, and go to state 92
    NE     shift, and go to state 93
    OR     shift, and go to state 94
    AND    shift, and go to state 95

    operator  go to state 96
    op        go to state 97


State 44

   19 program: RETURN assignment . END

    END  shift, and go to state 98


State 45

   26 get: STDIN OPEN_P . ALPHA COMMA DIGIT CLOSE_P END

    ALPHA  shift, and go to state 99


State 46

   30 out: ALPHA . out

    ALPHA        shift, and go to state 46
    SPACE_ALPHA  shift, and go to state 47
    ESCAPE       shift, and go to state 48

    $default  reduce using rule 29 (out)

    out  go to state 100


State 47

   27 out: SPACE_ALPHA . out

    ALPHA        shift, and go to state 46
    SPACE_ALPHA  shift, and go to state 47
    ESCAPE       shift, and go to state 48

    $default  reduce using rule 29 (out)

    out  go to state 101


State 48

   28 out: ESCAPE . SPACE_ALPHA ESCAPE out
   31    | ESCAPE . ALPHA ESCAPE out

    ALPHA        shift, and go to state 102
    SPACE_ALPHA  shift, and go to state 103


State 49

   21 program: STDOUT out . END program

    END  shift, and go to state 104


State 50

   18 program: call END . program

    ALPHA   shift, and go to state 16
    INT     shift, and go to state 17
    STRING  shift, and go to state 18
    CHAR    shift, and go to state 19
    OPEN_P  shift, and go to state 20
    RETURN  shift, and go to state 21
    STDIN   shift, and go to state 22
    STDOUT  shift, and go to state 23

    $default  reduce using rule 25 (program)

    call     go to state 24
    program  go to state 105
    get      go to state 26
    var      go to state 27


State 51

    1 start: MAIN EXEC program END_EXEC .

    $default  reduce using rule 1 (start)


State 52

   20 program: get program .

    $default  reduce using rule 20 (program)


State 53

   17 program: var END . program

    ALPHA   shift, and go to state 16
    INT     shift, and go to state 17
    STRING  shift, and go to state 18
    CHAR    shift, and go to state 19
    OPEN_P  shift, and go to state 20
    RETURN  shift, and go to state 21
    STDIN   shift, and go to state 22
    STDOUT  shift, and go to state 23

    $default  reduce using rule 25 (program)

    call     go to state 24
    program  go to state 106
    get      go to state 26
    var      go to state 27


State 54

    6 type: INT .

    $default  reduce using rule 6 (type)


State 55

    7 type: STRING .

    $default  reduce using rule 7 (type)


State 56

    8 type: CHAR .

    $default  reduce using rule 8 (type)


State 57

    9 params: type . ALPHA
   10       | type . ALPHA COMMA params

    ALPHA  shift, and go to state 107


State 58

    3 function: INT FUNCTION ALPHA OPEN_P params . CLOSE_P EXEC program END_EXEC

    CLOSE_P  shift, and go to state 108


State 59

    4 function: STRING FUNCTION ALPHA OPEN_P params . CLOSE_P EXEC program END_EXEC

    CLOSE_P  shift, and go to state 109


State 60

    5 function: CHAR FUNCTION ALPHA OPEN_P params . CLOSE_P EXEC program END_EXEC

    CLOSE_P  shift, and go to state 110


State 61

   16 call: ALPHA . OPEN_P args CLOSE_P
   78 assignment: ALPHA .

    OPEN_P  shift, and go to state 31

    $default  reduce using rule 78 (assignment)


State 62

   16 call: ALPHA OPEN_P args . CLOSE_P

    CLOSE_P  shift, and go to state 111


State 63

   14 args: call .

    $default  reduce using rule 14 (args)


State 64

   12 args: assignment .
   13     | assignment . COMMA args

    COMMA  shift, and go to state 112

    $default  reduce using rule 12 (args)


State 65

   59 var: ALPHA ASSIGN DIGIT .
   79 assignment: DIGIT .

    END       reduce using rule 59 (var)
    END       [reduce using rule 79 (assignment)]
    $default  reduce using rule 79 (assignment)


State 66

   16 call: ALPHA . OPEN_P args CLOSE_P
   56 var: ALPHA ASSIGN ALPHA .
   62    | ALPHA ASSIGN ALPHA . ARRAY DIGIT
   63    | ALPHA ASSIGN ALPHA . ARRAY ALPHA
   78 assignment: ALPHA .

    OPEN_P  shift, and go to state 31
    ARRAY   shift, and go to state 113

    END       reduce using rule 56 (var)
    END       [reduce using rule 78 (assignment)]
    $default  reduce using rule 78 (assignment)


State 67

   60 var: ALPHA ASSIGN STRING_VALUE .
   80 assignment: STRING_VALUE .

    END       reduce using rule 60 (var)
    END       [reduce using rule 80 (assignment)]
    $default  reduce using rule 80 (assignment)


State 68

   57 var: ALPHA ASSIGN ESCAPE . ALPHA
   58    | ALPHA ASSIGN ESCAPE . DIGIT
   81 assignment: ESCAPE . ALPHA

    DIGIT  shift, and go to state 114
    ALPHA  shift, and go to state 115


State 69

   64 var: ALPHA ASSIGN CONVERT . OPEN_P ALPHA CLOSE_P

    OPEN_P  shift, and go to state 116


State 70

   65 var: ALPHA ASSIGN LENGTH . OPEN_P ALPHA CLOSE_P

    OPEN_P  shift, and go to state 117


State 71

   69 var: ALPHA ASSIGN call .

    $default  reduce using rule 69 (var)


State 72

   61 var: ALPHA ASSIGN assignment . operation

    PLUS   shift, and go to state 83
    MINUS  shift, and go to state 84
    TIMES  shift, and go to state 85
    DIV    shift, and go to state 86
    MOD    shift, and go to state 87

    $default  reduce using rule 77 (operation)

    operation  go to state 118
    op         go to state 119


State 73

   70 var: ALPHA ARRAY DIGIT . ASSIGN DIGIT
   71    | ALPHA ARRAY DIGIT . ASSIGN ESCAPE ALPHA
   72    | ALPHA ARRAY DIGIT . ASSIGN ESCAPE DIGIT
   73    | ALPHA ARRAY DIGIT . ASSIGN STRING_VALUE

    ASSIGN  shift, and go to state 120


State 74

   74 var: ALPHA ARRAY ALPHA . ASSIGN ALPHA

    ASSIGN  shift, and go to state 121


State 75

   32 var: INT ALPHA ASSIGN . DIGIT operation
   33    | INT ALPHA ASSIGN . ALPHA operation
   41    | INT ALPHA ASSIGN . CONVERT OPEN_P ALPHA CLOSE_P
   42    | INT ALPHA ASSIGN . LENGTH OPEN_P ALPHA CLOSE_P
   43    | INT ALPHA ASSIGN . ALPHA ARRAY DIGIT
   45    | INT ALPHA ASSIGN . ALPHA ARRAY ALPHA
   66    | INT ALPHA ASSIGN . call

    DIGIT    shift, and go to state 122
    ALPHA    shift, and go to state 123
    CONVERT  shift, and go to state 124
    LENGTH   shift, and go to state 125

    call  go to state 126


State 76

   38 var: INT ALPHA ARRAY . DIGIT ASSIGN digit_array
   53    | INT ALPHA ARRAY . DIGIT

    DIGIT  shift, and go to state 127


State 77

   34 var: STRING ALPHA ASSIGN . STRING_VALUE
   35    | STRING ALPHA ASSIGN . ALPHA
   44    | STRING ALPHA ASSIGN . ALPHA ARRAY DIGIT
   46    | STRING ALPHA ASSIGN . ALPHA ARRAY ALPHA
   67    | STRING ALPHA ASSIGN . call

    ALPHA         shift, and go to state 128
    STRING_VALUE  shift, and go to state 129

    call  go to state 130


State 78

   39 var: STRING ALPHA ARRAY . DIGIT ASSIGN alpha_array
   54    | STRING ALPHA ARRAY . DIGIT

    DIGIT  shift, and go to state 131


State 79

   36 var: CHAR ALPHA ASSIGN . ESCAPE ALPHA
   37    | CHAR ALPHA ASSIGN . ESCAPE DIGIT
   47    | CHAR ALPHA ASSIGN . ALPHA
   48    | CHAR ALPHA ASSIGN . ALPHA ARRAY DIGIT
   49    | CHAR ALPHA ASSIGN . ALPHA ARRAY ALPHA
   68    | CHAR ALPHA ASSIGN . call

    ALPHA   shift, and go to state 132
    ESCAPE  shift, and go to state 133

    call  go to state 134


State 80

   40 var: CHAR ALPHA ARRAY . DIGIT ASSIGN char_array
   55    | CHAR ALPHA ARRAY . DIGIT

    DIGIT  shift, and go to state 135


State 81

   90 rule: OPEN_P rule . operator rule CLOSE_P

    PLUS   shift, and go to state 83
    MINUS  shift, and go to state 84
    TIMES  shift, and go to state 85
    DIV    shift, and go to state 86
    MOD    shift, and go to state 87
    L      shift, and go to state 88
    G      shift, and go to state 89
    LE     shift, and go to state 90
    GE     shift, and go to state 91
    EQ     shift, and go to state 92
    NE     shift, and go to state 93
    OR     shift, and go to state 94
    AND    shift, and go to state 95

    operator  go to state 136
    op        go to state 97


State 82

   81 assignment: ESCAPE ALPHA .

    $default  reduce using rule 81 (assignment)


State 83

  101 op: PLUS .

    $default  reduce using rule 101 (op)


State 84

  102 op: MINUS .

    $default  reduce using rule 102 (op)


State 85

  104 op: TIMES .

    $default  reduce using rule 104 (op)


State 86

  103 op: DIV .

    $default  reduce using rule 103 (op)


State 87

  105 op: MOD .

    $default  reduce using rule 105 (op)


State 88

   93 operator: L .

    $default  reduce using rule 93 (operator)


State 89

   94 operator: G .

    $default  reduce using rule 94 (operator)


State 90

   95 operator: LE .

    $default  reduce using rule 95 (operator)


State 91

   96 operator: GE .

    $default  reduce using rule 96 (operator)


State 92

   97 operator: EQ .

    $default  reduce using rule 97 (operator)


State 93

   98 operator: NE .

    $default  reduce using rule 98 (operator)


State 94

   99 operator: OR .

    $default  reduce using rule 99 (operator)


State 95

  100 operator: AND .

    $default  reduce using rule 100 (operator)


State 96

   22 program: OPEN_P rule operator . rule CLOSE_P CONDITIONAL WHILE EXEC program END_EXEC program
   23        | OPEN_P rule operator . rule CLOSE_P CONDITIONAL IF EXEC program END_EXEC program
   24        | OPEN_P rule operator . rule CLOSE_P CONDITIONAL IF EXEC program END_EXEC ELSE EXEC program END_EXEC program

    DIGIT         shift, and go to state 37
    ALPHA         shift, and go to state 38
    STRING_VALUE  shift, and go to state 39
    OPEN_P        shift, and go to state 40
    ESCAPE        shift, and go to state 41

    assignment  go to state 42
    rule        go to state 137


State 97

   92 operator: op .

    $default  reduce using rule 92 (operator)


State 98

   19 program: RETURN assignment END .

    $default  reduce using rule 19 (program)


State 99

   26 get: STDIN OPEN_P ALPHA . COMMA DIGIT CLOSE_P END

    COMMA  shift, and go to state 138


State 100

   30 out: ALPHA out .

    $default  reduce using rule 30 (out)


State 101

   27 out: SPACE_ALPHA out .

    $default  reduce using rule 27 (out)


State 102

   31 out: ESCAPE ALPHA . ESCAPE out

    ESCAPE  shift, and go to state 139


State 103

   28 out: ESCAPE SPACE_ALPHA . ESCAPE out

    ESCAPE  shift, and go to state 140


State 104

   21 program: STDOUT out END . program

    ALPHA   shift, and go to state 16
    INT     shift, and go to state 17
    STRING  shift, and go to state 18
    CHAR    shift, and go to state 19
    OPEN_P  shift, and go to state 20
    RETURN  shift, and go to state 21
    STDIN   shift, and go to state 22
    STDOUT  shift, and go to state 23

    $default  reduce using rule 25 (program)

    call     go to state 24
    program  go to state 141
    get      go to state 26
    var      go to state 27


State 105

   18 program: call END program .

    $default  reduce using rule 18 (program)


State 106

   17 program: var END program .

    $default  reduce using rule 17 (program)


State 107

    9 params: type ALPHA .
   10       | type ALPHA . COMMA params

    COMMA  shift, and go to state 142

    $default  reduce using rule 9 (params)


State 108

    3 function: INT FUNCTION ALPHA OPEN_P params CLOSE_P . EXEC program END_EXEC

    EXEC  shift, and go to state 143


State 109

    4 function: STRING FUNCTION ALPHA OPEN_P params CLOSE_P . EXEC program END_EXEC

    EXEC  shift, and go to state 144


State 110

    5 function: CHAR FUNCTION ALPHA OPEN_P params CLOSE_P . EXEC program END_EXEC

    EXEC  shift, and go to state 145


State 111

   16 call: ALPHA OPEN_P args CLOSE_P .

    $default  reduce using rule 16 (call)


State 112

   13 args: assignment COMMA . args

    DIGIT         shift, and go to state 37
    ALPHA         shift, and go to state 61
    STRING_VALUE  shift, and go to state 39
    ESCAPE        shift, and go to state 41

    $default  reduce using rule 15 (args)

    args        go to state 146
    call        go to state 63
    assignment  go to state 64


State 113

   62 var: ALPHA ASSIGN ALPHA ARRAY . DIGIT
   63    | ALPHA ASSIGN ALPHA ARRAY . ALPHA

    DIGIT  shift, and go to state 147
    ALPHA  shift, and go to state 148


State 114

   58 var: ALPHA ASSIGN ESCAPE DIGIT .

    $default  reduce using rule 58 (var)


State 115

   57 var: ALPHA ASSIGN ESCAPE ALPHA .
   81 assignment: ESCAPE ALPHA .

    END       reduce using rule 57 (var)
    END       [reduce using rule 81 (assignment)]
    $default  reduce using rule 81 (assignment)


State 116

   64 var: ALPHA ASSIGN CONVERT OPEN_P . ALPHA CLOSE_P

    ALPHA  shift, and go to state 149


State 117

   65 var: ALPHA ASSIGN LENGTH OPEN_P . ALPHA CLOSE_P

    ALPHA  shift, and go to state 150


State 118

   61 var: ALPHA ASSIGN assignment operation .

    $default  reduce using rule 61 (var)


State 119

   75 operation: op . DIGIT operation
   76          | op . ALPHA operation

    DIGIT  shift, and go to state 151
    ALPHA  shift, and go to state 152


State 120

   70 var: ALPHA ARRAY DIGIT ASSIGN . DIGIT
   71    | ALPHA ARRAY DIGIT ASSIGN . ESCAPE ALPHA
   72    | ALPHA ARRAY DIGIT ASSIGN . ESCAPE DIGIT
   73    | ALPHA ARRAY DIGIT ASSIGN . STRING_VALUE

    DIGIT         shift, and go to state 153
    STRING_VALUE  shift, and go to state 154
    ESCAPE        shift, and go to state 155


State 121

   74 var: ALPHA ARRAY ALPHA ASSIGN . ALPHA

    ALPHA  shift, and go to state 156


State 122

   32 var: INT ALPHA ASSIGN DIGIT . operation

    PLUS   shift, and go to state 83
    MINUS  shift, and go to state 84
    TIMES  shift, and go to state 85
    DIV    shift, and go to state 86
    MOD    shift, and go to state 87

    $default  reduce using rule 77 (operation)

    operation  go to state 157
    op         go to state 119


State 123

   16 call: ALPHA . OPEN_P args CLOSE_P
   33 var: INT ALPHA ASSIGN ALPHA . operation
   43    | INT ALPHA ASSIGN ALPHA . ARRAY DIGIT
   45    | INT ALPHA ASSIGN ALPHA . ARRAY ALPHA

    PLUS    shift, and go to state 83
    MINUS   shift, and go to state 84
    TIMES   shift, and go to state 85
    DIV     shift, and go to state 86
    MOD     shift, and go to state 87
    OPEN_P  shift, and go to state 31
    ARRAY   shift, and go to state 158

    $default  reduce using rule 77 (operation)

    operation  go to state 159
    op         go to state 119


State 124

   41 var: INT ALPHA ASSIGN CONVERT . OPEN_P ALPHA CLOSE_P

    OPEN_P  shift, and go to state 160


State 125

   42 var: INT ALPHA ASSIGN LENGTH . OPEN_P ALPHA CLOSE_P

    OPEN_P  shift, and go to state 161


State 126

   66 var: INT ALPHA ASSIGN call .

    $default  reduce using rule 66 (var)


State 127

   38 var: INT ALPHA ARRAY DIGIT . ASSIGN digit_array
   53    | INT ALPHA ARRAY DIGIT .

    ASSIGN  shift, and go to state 162

    $default  reduce using rule 53 (var)


State 128

   16 call: ALPHA . OPEN_P args CLOSE_P
   35 var: STRING ALPHA ASSIGN ALPHA .
   44    | STRING ALPHA ASSIGN ALPHA . ARRAY DIGIT
   46    | STRING ALPHA ASSIGN ALPHA . ARRAY ALPHA

    OPEN_P  shift, and go to state 31
    ARRAY   shift, and go to state 163

    $default  reduce using rule 35 (var)


State 129

   34 var: STRING ALPHA ASSIGN STRING_VALUE .

    $default  reduce using rule 34 (var)


State 130

   67 var: STRING ALPHA ASSIGN call .

    $default  reduce using rule 67 (var)


State 131

   39 var: STRING ALPHA ARRAY DIGIT . ASSIGN alpha_array
   54    | STRING ALPHA ARRAY DIGIT .

    ASSIGN  shift, and go to state 164

    $default  reduce using rule 54 (var)


State 132

   16 call: ALPHA . OPEN_P args CLOSE_P
   47 var: CHAR ALPHA ASSIGN ALPHA .
   48    | CHAR ALPHA ASSIGN ALPHA . ARRAY DIGIT
   49    | CHAR ALPHA ASSIGN ALPHA . ARRAY ALPHA

    OPEN_P  shift, and go to state 31
    ARRAY   shift, and go to state 165

    $default  reduce using rule 47 (var)


State 133

   36 var: CHAR ALPHA ASSIGN ESCAPE . ALPHA
   37    | CHAR ALPHA ASSIGN ESCAPE . DIGIT

    DIGIT  shift, and go to state 166
    ALPHA  shift, and go to state 167


State 134

   68 var: CHAR ALPHA ASSIGN call .

    $default  reduce using rule 68 (var)


State 135

   40 var: CHAR ALPHA ARRAY DIGIT . ASSIGN char_array
   55    | CHAR ALPHA ARRAY DIGIT .

    ASSIGN  shift, and go to state 168

    $default  reduce using rule 55 (var)


State 136

   90 rule: OPEN_P rule operator . rule CLOSE_P

    DIGIT         shift, and go to state 37
    ALPHA         shift, and go to state 38
    STRING_VALUE  shift, and go to state 39
    OPEN_P        shift, and go to state 40
    ESCAPE        shift, and go to state 41

    assignment  go to state 42
    rule        go to state 169


State 137

   22 program: OPEN_P rule operator rule . CLOSE_P CONDITIONAL WHILE EXEC program END_EXEC program
   23        | OPEN_P rule operator rule . CLOSE_P CONDITIONAL IF EXEC program END_EXEC program
   24        | OPEN_P rule operator rule . CLOSE_P CONDITIONAL IF EXEC program END_EXEC ELSE EXEC program END_EXEC program

    CLOSE_P  shift, and go to state 170


State 138

   26 get: STDIN OPEN_P ALPHA COMMA . DIGIT CLOSE_P END

    DIGIT  shift, and go to state 171


State 139

   31 out: ESCAPE ALPHA ESCAPE . out

    ALPHA        shift, and go to state 46
    SPACE_ALPHA  shift, and go to state 47
    ESCAPE       shift, and go to state 48

    $default  reduce using rule 29 (out)

    out  go to state 172


State 140

   28 out: ESCAPE SPACE_ALPHA ESCAPE . out

    ALPHA        shift, and go to state 46
    SPACE_ALPHA  shift, and go to state 47
    ESCAPE       shift, and go to state 48

    $default  reduce using rule 29 (out)

    out  go to state 173


State 141

   21 program: STDOUT out END program .

    $default  reduce using rule 21 (program)


State 142

   10 params: type ALPHA COMMA . params

    INT     shift, and go to state 54
    STRING  shift, and go to state 55
    CHAR    shift, and go to state 56

    $default  reduce using rule 11 (params)

    type    go to state 57
    params  go to state 174


State 143

    3 function: INT FUNCTION ALPHA OPEN_P params CLOSE_P EXEC . program END_EXEC

    ALPHA   shift, and go to state 16
    INT     shift, and go to state 17
    STRING  shift, and go to state 18
    CHAR    shift, and go to state 19
    OPEN_P  shift, and go to state 20
    RETURN  shift, and go to state 21
    STDIN   shift, and go to state 22
    STDOUT  shift, and go to state 23

    $default  reduce using rule 25 (program)

    call     go to state 24
    program  go to state 175
    get      go to state 26
    var      go to state 27


State 144

    4 function: STRING FUNCTION ALPHA OPEN_P params CLOSE_P EXEC . program END_EXEC

    ALPHA   shift, and go to state 16
    INT     shift, and go to state 17
    STRING  shift, and go to state 18
    CHAR    shift, and go to state 19
    OPEN_P  shift, and go to state 20
    RETURN  shift, and go to state 21
    STDIN   shift, and go to state 22
    STDOUT  shift, and go to state 23

    $default  reduce using rule 25 (program)

    call     go to state 24
    program  go to state 176
    get      go to state 26
    var      go to state 27


State 145

    5 function: CHAR FUNCTION ALPHA OPEN_P params CLOSE_P EXEC . program END_EXEC

    ALPHA   shift, and go to state 16
    INT     shift, and go to state 17
    STRING  shift, and go to state 18
    CHAR    shift, and go to state 19
    OPEN_P  shift, and go to state 20
    RETURN  shift, and go to state 21
    STDIN   shift, and go to state 22
    STDOUT  shift, and go to state 23

    $default  reduce using rule 25 (program)

    call     go to state 24
    program  go to state 177
    get      go to state 26
    var      go to state 27


State 146

   13 args: assignment COMMA args .

    $default  reduce using rule 13 (args)


State 147

   62 var: ALPHA ASSIGN ALPHA ARRAY DIGIT .

    $default  reduce using rule 62 (var)


State 148

   63 var: ALPHA ASSIGN ALPHA ARRAY ALPHA .

    $default  reduce using rule 63 (var)


State 149

   64 var: ALPHA ASSIGN CONVERT OPEN_P ALPHA . CLOSE_P

    CLOSE_P  shift, and go to state 178


State 150

   65 var: ALPHA ASSIGN LENGTH OPEN_P ALPHA . CLOSE_P

    CLOSE_P  shift, and go to state 179


State 151

   75 operation: op DIGIT . operation

    PLUS   shift, and go to state 83
    MINUS  shift, and go to state 84
    TIMES  shift, and go to state 85
    DIV    shift, and go to state 86
    MOD    shift, and go to state 87

    $default  reduce using rule 77 (operation)

    operation  go to state 180
    op         go to state 119


State 152

   76 operation: op ALPHA . operation

    PLUS   shift, and go to state 83
    MINUS  shift, and go to state 84
    TIMES  shift, and go to state 85
    DIV    shift, and go to state 86
    MOD    shift, and go to state 87

    $default  reduce using rule 77 (operation)

    operation  go to state 181
    op         go to state 119


State 153

   70 var: ALPHA ARRAY DIGIT ASSIGN DIGIT .

    $default  reduce using rule 70 (var)


State 154

   73 var: ALPHA ARRAY DIGIT ASSIGN STRING_VALUE .

    $default  reduce using rule 73 (var)


State 155

   71 var: ALPHA ARRAY DIGIT ASSIGN ESCAPE . ALPHA
   72    | ALPHA ARRAY DIGIT ASSIGN ESCAPE . DIGIT

    DIGIT  shift, and go to state 182
    ALPHA  shift, and go to state 183


State 156

   74 var: ALPHA ARRAY ALPHA ASSIGN ALPHA .

    $default  reduce using rule 74 (var)


State 157

   32 var: INT ALPHA ASSIGN DIGIT operation .

    $default  reduce using rule 32 (var)


State 158

   43 var: INT ALPHA ASSIGN ALPHA ARRAY . DIGIT
   45    | INT ALPHA ASSIGN ALPHA ARRAY . ALPHA

    DIGIT  shift, and go to state 184
    ALPHA  shift, and go to state 185


State 159

   33 var: INT ALPHA ASSIGN ALPHA operation .

    $default  reduce using rule 33 (var)


State 160

   41 var: INT ALPHA ASSIGN CONVERT OPEN_P . ALPHA CLOSE_P

    ALPHA  shift, and go to state 186


State 161

   42 var: INT ALPHA ASSIGN LENGTH OPEN_P . ALPHA CLOSE_P

    ALPHA  shift, and go to state 187


State 162

   38 var: INT ALPHA ARRAY DIGIT ASSIGN . digit_array

    DIGIT  shift, and go to state 188

    digit_array  go to state 189


State 163

   44 var: STRING ALPHA ASSIGN ALPHA ARRAY . DIGIT
   46    | STRING ALPHA ASSIGN ALPHA ARRAY . ALPHA

    DIGIT  shift, and go to state 190
    ALPHA  shift, and go to state 191


State 164

   39 var: STRING ALPHA ARRAY DIGIT ASSIGN . alpha_array

    STRING_VALUE  shift, and go to state 192

    alpha_array  go to state 193


State 165

   48 var: CHAR ALPHA ASSIGN ALPHA ARRAY . DIGIT
   49    | CHAR ALPHA ASSIGN ALPHA ARRAY . ALPHA

    DIGIT  shift, and go to state 194
    ALPHA  shift, and go to state 195


State 166

   37 var: CHAR ALPHA ASSIGN ESCAPE DIGIT .

    $default  reduce using rule 37 (var)


State 167

   36 var: CHAR ALPHA ASSIGN ESCAPE ALPHA .

    $default  reduce using rule 36 (var)


State 168

   40 var: CHAR ALPHA ARRAY DIGIT ASSIGN . char_array

    ESCAPE  shift, and go to state 196

    char_array  go to state 197


State 169

   90 rule: OPEN_P rule operator rule . CLOSE_P

    CLOSE_P  shift, and go to state 198


State 170

   22 program: OPEN_P rule operator rule CLOSE_P . CONDITIONAL WHILE EXEC program END_EXEC program
   23        | OPEN_P rule operator rule CLOSE_P . CONDITIONAL IF EXEC program END_EXEC program
   24        | OPEN_P rule operator rule CLOSE_P . CONDITIONAL IF EXEC program END_EXEC ELSE EXEC program END_EXEC program

    CONDITIONAL  shift, and go to state 199


State 171

   26 get: STDIN OPEN_P ALPHA COMMA DIGIT . CLOSE_P END

    CLOSE_P  shift, and go to state 200


State 172

   31 out: ESCAPE ALPHA ESCAPE out .

    $default  reduce using rule 31 (out)


State 173

   28 out: ESCAPE SPACE_ALPHA ESCAPE out .

    $default  reduce using rule 28 (out)


State 174

   10 params: type ALPHA COMMA params .

    $default  reduce using rule 10 (params)


State 175

    3 function: INT FUNCTION ALPHA OPEN_P params CLOSE_P EXEC program . END_EXEC

    END_EXEC  shift, and go to state 201


State 176

    4 function: STRING FUNCTION ALPHA OPEN_P params CLOSE_P EXEC program . END_EXEC

    END_EXEC  shift, and go to state 202


State 177

    5 function: CHAR FUNCTION ALPHA OPEN_P params CLOSE_P EXEC program . END_EXEC

    END_EXEC  shift, and go to state 203


State 178

   64 var: ALPHA ASSIGN CONVERT OPEN_P ALPHA CLOSE_P .

    $default  reduce using rule 64 (var)


State 179

   65 var: ALPHA ASSIGN LENGTH OPEN_P ALPHA CLOSE_P .

    $default  reduce using rule 65 (var)


State 180

   75 operation: op DIGIT operation .

    $default  reduce using rule 75 (operation)


State 181

   76 operation: op ALPHA operation .

    $default  reduce using rule 76 (operation)


State 182

   72 var: ALPHA ARRAY DIGIT ASSIGN ESCAPE DIGIT .

    $default  reduce using rule 72 (var)


State 183

   71 var: ALPHA ARRAY DIGIT ASSIGN ESCAPE ALPHA .

    $default  reduce using rule 71 (var)


State 184

   43 var: INT ALPHA ASSIGN ALPHA ARRAY DIGIT .

    $default  reduce using rule 43 (var)


State 185

   45 var: INT ALPHA ASSIGN ALPHA ARRAY ALPHA .

    $default  reduce using rule 45 (var)


State 186

   41 var: INT ALPHA ASSIGN CONVERT OPEN_P ALPHA . CLOSE_P

    CLOSE_P  shift, and go to state 204


State 187

   42 var: INT ALPHA ASSIGN LENGTH OPEN_P ALPHA . CLOSE_P

    CLOSE_P  shift, and go to state 205


State 188

   84 digit_array: DIGIT . COMMA digit_array
   85            | DIGIT .

    COMMA  shift, and go to state 206

    $default  reduce using rule 85 (digit_array)


State 189

   38 var: INT ALPHA ARRAY DIGIT ASSIGN digit_array .

    $default  reduce using rule 38 (var)


State 190

   44 var: STRING ALPHA ASSIGN ALPHA ARRAY DIGIT .

    $default  reduce using rule 44 (var)


State 191

   46 var: STRING ALPHA ASSIGN ALPHA ARRAY ALPHA .

    $default  reduce using rule 46 (var)


State 192

   82 alpha_array: STRING_VALUE . COMMA alpha_array
   83            | STRING_VALUE .

    COMMA  shift, and go to state 207

    $default  reduce using rule 83 (alpha_array)


State 193

   39 var: STRING ALPHA ARRAY DIGIT ASSIGN alpha_array .

    $default  reduce using rule 39 (var)


State 194

   48 var: CHAR ALPHA ASSIGN ALPHA ARRAY DIGIT .

    $default  reduce using rule 48 (var)


State 195

   49 var: CHAR ALPHA ASSIGN ALPHA ARRAY ALPHA .

    $default  reduce using rule 49 (var)


State 196

   86 char_array: ESCAPE . ALPHA COMMA char_array
   87           | ESCAPE . ALPHA
   88           | ESCAPE . DIGIT COMMA char_array
   89           | ESCAPE . DIGIT

    DIGIT  shift, and go to state 208
    ALPHA  shift, and go to state 209


State 197

   40 var: CHAR ALPHA ARRAY DIGIT ASSIGN char_array .

    $default  reduce using rule 40 (var)


State 198

   90 rule: OPEN_P rule operator rule CLOSE_P .

    $default  reduce using rule 90 (rule)


State 199

   22 program: OPEN_P rule operator rule CLOSE_P CONDITIONAL . WHILE EXEC program END_EXEC program
   23        | OPEN_P rule operator rule CLOSE_P CONDITIONAL . IF EXEC program END_EXEC program
   24        | OPEN_P rule operator rule CLOSE_P CONDITIONAL . IF EXEC program END_EXEC ELSE EXEC program END_EXEC program

    IF     shift, and go to state 210
    WHILE  shift, and go to state 211


State 200

   26 get: STDIN OPEN_P ALPHA COMMA DIGIT CLOSE_P . END

    END  shift, and go to state 212


State 201

    3 function: INT FUNCTION ALPHA OPEN_P params CLOSE_P EXEC program END_EXEC .

    $default  reduce using rule 3 (function)


State 202

    4 function: STRING FUNCTION ALPHA OPEN_P params CLOSE_P EXEC program END_EXEC .

    $default  reduce using rule 4 (function)


State 203

    5 function: CHAR FUNCTION ALPHA OPEN_P params CLOSE_P EXEC program END_EXEC .

    $default  reduce using rule 5 (function)


State 204

   41 var: INT ALPHA ASSIGN CONVERT OPEN_P ALPHA CLOSE_P .

    $default  reduce using rule 41 (var)


State 205

   42 var: INT ALPHA ASSIGN LENGTH OPEN_P ALPHA CLOSE_P .

    $default  reduce using rule 42 (var)


State 206

   84 digit_array: DIGIT COMMA . digit_array

    DIGIT  shift, and go to state 188

    digit_array  go to state 213


State 207

   82 alpha_array: STRING_VALUE COMMA . alpha_array

    STRING_VALUE  shift, and go to state 192

    alpha_array  go to state 214


State 208

   88 char_array: ESCAPE DIGIT . COMMA char_array
   89           | ESCAPE DIGIT .

    COMMA  shift, and go to state 215

    $default  reduce using rule 89 (char_array)


State 209

   86 char_array: ESCAPE ALPHA . COMMA char_array
   87           | ESCAPE ALPHA .

    COMMA  shift, and go to state 216

    $default  reduce using rule 87 (char_array)


State 210

   23 program: OPEN_P rule operator rule CLOSE_P CONDITIONAL IF . EXEC program END_EXEC program
   24        | OPEN_P rule operator rule CLOSE_P CONDITIONAL IF . EXEC program END_EXEC ELSE EXEC program END_EXEC program

    EXEC  shift, and go to state 217


State 211

   22 program: OPEN_P rule operator rule CLOSE_P CONDITIONAL WHILE . EXEC program END_EXEC program

    EXEC  shift, and go to state 218


State 212

   26 get: STDIN OPEN_P ALPHA COMMA DIGIT CLOSE_P END .

    $default  reduce using rule 26 (get)


State 213

   84 digit_array: DIGIT COMMA digit_array .

    $default  reduce using rule 84 (digit_array)


State 214

   82 alpha_array: STRING_VALUE COMMA alpha_array .

    $default  reduce using rule 82 (alpha_array)


State 215

   88 char_array: ESCAPE DIGIT COMMA . char_array

    ESCAPE  shift, and go to state 196

    char_array  go to state 219


State 216

   86 char_array: ESCAPE ALPHA COMMA . char_array

    ESCAPE  shift, and go to state 196

    char_array  go to state 220


State 217

   23 program: OPEN_P rule operator rule CLOSE_P CONDITIONAL IF EXEC . program END_EXEC program
   24        | OPEN_P rule operator rule CLOSE_P CONDITIONAL IF EXEC . program END_EXEC ELSE EXEC program END_EXEC program

    ALPHA   shift, and go to state 16
    INT     shift, and go to state 17
    STRING  shift, and go to state 18
    CHAR    shift, and go to state 19
    OPEN_P  shift, and go to state 20
    RETURN  shift, and go to state 21
    STDIN   shift, and go to state 22
    STDOUT  shift, and go to state 23

    $default  reduce using rule 25 (program)

    call     go to state 24
    program  go to state 221
    get      go to state 26
    var      go to state 27


State 218

   22 program: OPEN_P rule operator rule CLOSE_P CONDITIONAL WHILE EXEC . program END_EXEC program

    ALPHA   shift, and go to state 16
    INT     shift, and go to state 17
    STRING  shift, and go to state 18
    CHAR    shift, and go to state 19
    OPEN_P  shift, and go to state 20
    RETURN  shift, and go to state 21
    STDIN   shift, and go to state 22
    STDOUT  shift, and go to state 23

    $default  reduce using rule 25 (program)

    call     go to state 24
    program  go to state 222
    get      go to state 26
    var      go to state 27


State 219

   88 char_array: ESCAPE DIGIT COMMA char_array .

    $default  reduce using rule 88 (char_array)


State 220

   86 char_array: ESCAPE ALPHA COMMA char_array .

    $default  reduce using rule 86 (char_array)


State 221

   23 program: OPEN_P rule operator rule CLOSE_P CONDITIONAL IF EXEC program . END_EXEC program
   24        | OPEN_P rule operator rule CLOSE_P CONDITIONAL IF EXEC program . END_EXEC ELSE EXEC program END_EXEC program

    END_EXEC  shift, and go to state 223


State 222

   22 program: OPEN_P rule operator rule CLOSE_P CONDITIONAL WHILE EXEC program . END_EXEC program

    END_EXEC  shift, and go to state 224


State 223

   23 program: OPEN_P rule operator rule CLOSE_P CONDITIONAL IF EXEC program END_EXEC . program
   24        | OPEN_P rule operator rule CLOSE_P CONDITIONAL IF EXEC program END_EXEC . ELSE EXEC program END_EXEC program

    ALPHA   shift, and go to state 16
    INT     shift, and go to state 17
    STRING  shift, and go to state 18
    CHAR    shift, and go to state 19
    OPEN_P  shift, and go to state 20
    ELSE    shift, and go to state 225
    RETURN  shift, and go to state 21
    STDIN   shift, and go to state 22
    STDOUT  shift, and go to state 23

    $default  reduce using rule 25 (program)

    call     go to state 24
    program  go to state 226
    get      go to state 26
    var      go to state 27


State 224

   22 program: OPEN_P rule operator rule CLOSE_P CONDITIONAL WHILE EXEC program END_EXEC . program

    ALPHA   shift, and go to state 16
    INT     shift, and go to state 17
    STRING  shift, and go to state 18
    CHAR    shift, and go to state 19
    OPEN_P  shift, and go to state 20
    RETURN  shift, and go to state 21
    STDIN   shift, and go to state 22
    STDOUT  shift, and go to state 23

    $default  reduce using rule 25 (program)

    call     go to state 24
    program  go to state 227
    get      go to state 26
    var      go to state 27


State 225

   24 program: OPEN_P rule operator rule CLOSE_P CONDITIONAL IF EXEC program END_EXEC ELSE . EXEC program END_EXEC program

    EXEC  shift, and go to state 228


State 226

   23 program: OPEN_P rule operator rule CLOSE_P CONDITIONAL IF EXEC program END_EXEC program .

    $default  reduce using rule 23 (program)


State 227

   22 program: OPEN_P rule operator rule CLOSE_P CONDITIONAL WHILE EXEC program END_EXEC program .

    $default  reduce using rule 22 (program)


State 228

   24 program: OPEN_P rule operator rule CLOSE_P CONDITIONAL IF EXEC program END_EXEC ELSE EXEC . program END_EXEC program

    ALPHA   shift, and go to state 16
    INT     shift, and go to state 17
    STRING  shift, and go to state 18
    CHAR    shift, and go to state 19
    OPEN_P  shift, and go to state 20
    RETURN  shift, and go to state 21
    STDIN   shift, and go to state 22
    STDOUT  shift, and go to state 23

    $default  reduce using rule 25 (program)

    call     go to state 24
    program  go to state 229
    get      go to state 26
    var      go to state 27


State 229

   24 program: OPEN_P rule operator rule CLOSE_P CONDITIONAL IF EXEC program END_EXEC ELSE EXEC program . END_EXEC program

    END_EXEC  shift, and go to state 230


State 230

   24 program: OPEN_P rule operator rule CLOSE_P CONDITIONAL IF EXEC program END_EXEC ELSE EXEC program END_EXEC . program

    ALPHA   shift, and go to state 16
    INT     shift, and go to state 17
    STRING  shift, and go to state 18
    CHAR    shift, and go to state 19
    OPEN_P  shift, and go to state 20
    RETURN  shift, and go to state 21
    STDIN   shift, and go to state 22
    STDOUT  shift, and go to state 23

    $default  reduce using rule 25 (program)

    call     go to state 24
    program  go to state 231
    get      go to state 26
    var      go to state 27


State 231

   24 program: OPEN_P rule operator rule CLOSE_P CONDITIONAL IF EXEC program END_EXEC ELSE EXEC program END_EXEC program .

    $default  reduce using rule 24 (program)
