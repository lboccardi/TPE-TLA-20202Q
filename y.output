State 66 conflicts: 1 reduce/reduce


Grammar

    0 $accept: start $end

    1 start: MAIN EXEC program END_EXEC
    2      | function start

    3 function: INT FUNCTION ALPHA OPEN_P params CLOSE_P EXEC program END_EXEC
    4         | STRING FUNCTION ALPHA OPEN_P params CLOSE_P EXEC program END_EXEC
    5         | CHAR FUNCTION ALPHA OPEN_P params CLOSE_P EXEC program END_EXEC
    6         | INT FUNCTION ALPHA OPEN_P params CLOSE_P END
    7         | STRING FUNCTION ALPHA OPEN_P params CLOSE_P END
    8         | CHAR FUNCTION ALPHA OPEN_P params CLOSE_P END

    9 type: INT
   10     | STRING
   11     | CHAR

   12 params: type ALPHA
   13       | type ALPHA COMMA params
   14       | %empty

   15 args: assignment
   16     | assignment COMMA args
   17     | call
   18     | %empty

   19 call: ALPHA OPEN_P args CLOSE_P

   20 program: var END program
   21        | call END program
   22        | RETURN assignment END
   23        | get program
   24        | STDOUT out END program
   25        | OPEN_P rule operator rule CLOSE_P CONDITIONAL WHILE EXEC program END_EXEC program
   26        | OPEN_P rule operator rule CLOSE_P CONDITIONAL IF EXEC program END_EXEC program
   27        | OPEN_P rule operator rule CLOSE_P CONDITIONAL IF EXEC program END_EXEC ELSE EXEC program END_EXEC program
   28        | %empty

   29 get: STDIN OPEN_P ALPHA COMMA DIGIT CLOSE_P END

   30 out: SPACE_ALPHA out
   31    | ESCAPE SPACE_ALPHA ESCAPE out
   32    | %empty
   33    | ALPHA out
   34    | ESCAPE ALPHA ESCAPE out

   35 var: INT ALPHA ASSIGN DIGIT operation
   36    | INT ALPHA ASSIGN ALPHA operation
   37    | STRING ALPHA ASSIGN STRING_VALUE
   38    | STRING ALPHA ASSIGN ALPHA
   39    | CHAR ALPHA ASSIGN ESCAPE ALPHA
   40    | CHAR ALPHA ASSIGN ESCAPE DIGIT
   41    | INT ALPHA ARRAY DIGIT ASSIGN digit_array
   42    | STRING ALPHA ARRAY DIGIT ASSIGN alpha_array
   43    | CHAR ALPHA ARRAY DIGIT ASSIGN char_array
   44    | INT ALPHA ASSIGN CONVERT OPEN_P ALPHA CLOSE_P
   45    | INT ALPHA ASSIGN LENGTH OPEN_P ALPHA CLOSE_P
   46    | INT ALPHA ASSIGN ALPHA ARRAY DIGIT
   47    | STRING ALPHA ASSIGN ALPHA ARRAY DIGIT
   48    | INT ALPHA ASSIGN ALPHA ARRAY ALPHA
   49    | STRING ALPHA ASSIGN ALPHA ARRAY ALPHA
   50    | CHAR ALPHA ASSIGN ALPHA
   51    | CHAR ALPHA ASSIGN ALPHA ARRAY DIGIT
   52    | CHAR ALPHA ASSIGN ALPHA ARRAY ALPHA
   53    | INT ALPHA
   54    | CHAR ALPHA
   55    | STRING ALPHA
   56    | INT ALPHA ARRAY DIGIT
   57    | INT ALPHA ARRAY ALPHA
   58    | STRING ALPHA ARRAY DIGIT
   59    | CHAR ALPHA ARRAY DIGIT
   60    | CHAR ALPHA ARRAY ALPHA
   61    | ALPHA ASSIGN ALPHA
   62    | ALPHA ASSIGN ESCAPE ALPHA
   63    | ALPHA ASSIGN ESCAPE DIGIT
   64    | ALPHA ASSIGN STRING_VALUE
   65    | ALPHA ASSIGN var_init operation
   66    | ALPHA ASSIGN ALPHA ARRAY DIGIT
   67    | ALPHA ASSIGN ALPHA ARRAY ALPHA
   68    | ALPHA ASSIGN CONVERT OPEN_P ALPHA CLOSE_P
   69    | ALPHA ASSIGN LENGTH OPEN_P ALPHA CLOSE_P
   70    | INT ALPHA ASSIGN call
   71    | STRING ALPHA ASSIGN call
   72    | CHAR ALPHA ASSIGN call
   73    | ALPHA ASSIGN call
   74    | ALPHA ARRAY DIGIT ASSIGN DIGIT
   75    | ALPHA ARRAY DIGIT ASSIGN ESCAPE ALPHA
   76    | ALPHA ARRAY DIGIT ASSIGN ESCAPE DIGIT
   77    | ALPHA ARRAY DIGIT ASSIGN STRING_VALUE
   78    | ALPHA ARRAY ALPHA ASSIGN ALPHA
   79    | ALPHA ARRAY ALPHA ASSIGN ALPHA ARRAY ALPHA
   80    | ALPHA ARRAY ALPHA ASSIGN ESCAPE ALPHA
   81    | ALPHA ARRAY ALPHA ASSIGN ESCAPE DIGIT

   82 operation: op DIGIT operation
   83          | op ALPHA operation
   84          | %empty

   85 assignment: ALPHA
   86           | DIGIT
   87           | STRING_VALUE
   88           | ESCAPE ALPHA
   89           | ALPHA ARRAY DIGIT
   90           | ALPHA ARRAY ALPHA

   91 var_init: ALPHA
   92         | DIGIT

   93 alpha_array: STRING_VALUE COMMA alpha_array
   94            | STRING_VALUE

   95 digit_array: DIGIT COMMA digit_array
   96            | DIGIT

   97 char_array: ESCAPE ALPHA COMMA char_array
   98           | ESCAPE ALPHA
   99           | ESCAPE DIGIT COMMA char_array
  100           | ESCAPE DIGIT

  101 rule: OPEN_P rule operator rule CLOSE_P
  102     | assignment

  103 operator: op
  104         | L
  105         | G
  106         | LE
  107         | GE
  108         | EQ
  109         | NE
  110         | OR
  111         | AND

  112 op: PLUS
  113   | MINUS
  114   | DIV
  115   | TIMES
  116   | MOD


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    DIGIT <stringValue> (258) 29 35 40 41 42 43 46 47 51 56 58 59 63 66 74 75 76 77 81 82 86 89 92 95 96 99 100
    ALPHA <stringValue> (259) 3 4 5 6 7 8 12 13 19 29 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 83 85 88 89 90 91 97 98
    SPACE_ALPHA <stringValue> (260) 30 31
    STRING_VALUE <stringValue> (261) 37 64 77 87 93 94
    INT <stringValue> (262) 3 6 9 35 36 41 44 45 46 48 53 56 57 70
    STRING <stringValue> (263) 4 7 10 37 38 42 47 49 55 58 71
    CHAR <stringValue> (264) 5 8 11 39 40 43 50 51 52 54 59 60 72
    PLUS <stringValue> (265) 112
    MINUS <stringValue> (266) 113
    TIMES <stringValue> (267) 115
    DIV <stringValue> (268) 114
    MOD <stringValue> (269) 116
    END (270) 6 7 8 20 21 22 24 29
    OPEN_P (271) 3 4 5 6 7 8 19 25 26 27 29 44 45 68 69 101
    CLOSE_P (272) 3 4 5 6 7 8 19 25 26 27 29 44 45 68 69 101
    CONDITIONAL (273) 25 26 27
    EXEC (274) 1 3 4 5 25 26 27
    END_EXEC (275) 1 3 4 5 25 26 27
    IF (276) 26 27
    ELSE (277) 27
    ESCAPE (278) 31 34 39 40 62 63 75 76 80 81 88 97 98 99 100
    WHILE (279) 25
    L (280) 104
    G (281) 105
    LE (282) 106
    GE (283) 107
    EQ (284) 108
    NE (285) 109
    OR (286) 110
    AND (287) 111
    ASSIGN (288) 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81
    RETURN (289) 22
    MAIN (290) 1
    STDIN (291) 29
    STDOUT (292) 24
    CONVERT (293) 44 68
    LENGTH (294) 45 69
    FUNCTION (295) 3 4 5 6 7 8
    COMMA (296) 13 16 29 93 95 97 99
    ARRAY (297) 41 42 43 46 47 48 49 51 52 56 57 58 59 60 66 67 74 75 76 77 78 79 80 81 89 90


Nonterminals, with rules where they appear

    $accept (43)
        on left: 0
    start <stringValue> (44)
        on left: 1 2
        on right: 0 2
    function <stringValue> (45)
        on left: 3 4 5 6 7 8
        on right: 2
    type <stringValue> (46)
        on left: 9 10 11
        on right: 12 13
    params <stringValue> (47)
        on left: 12 13 14
        on right: 3 4 5 6 7 8 13
    args <stringValue> (48)
        on left: 15 16 17 18
        on right: 16 19
    call <stringValue> (49)
        on left: 19
        on right: 17 21 70 71 72 73
    program <stringValue> (50)
        on left: 20 21 22 23 24 25 26 27 28
        on right: 1 3 4 5 20 21 23 24 25 26 27
    get <stringValue> (51)
        on left: 29
        on right: 23
    out <stringValue> (52)
        on left: 30 31 32 33 34
        on right: 24 30 31 33 34
    var <stringValue> (53)
        on left: 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81
        on right: 20
    operation <stringValue> (54)
        on left: 82 83 84
        on right: 35 36 65 82 83
    assignment <stringValue> (55)
        on left: 85 86 87 88 89 90
        on right: 15 16 22 102
    var_init <stringValue> (56)
        on left: 91 92
        on right: 65
    alpha_array <stringValue> (57)
        on left: 93 94
        on right: 42 93
    digit_array <stringValue> (58)
        on left: 95 96
        on right: 41 95
    char_array <stringValue> (59)
        on left: 97 98 99 100
        on right: 43 97 99
    rule <stringValue> (60)
        on left: 101 102
        on right: 25 26 27 101
    operator <stringValue> (61)
        on left: 103 104 105 106 107 108 109 110 111
        on right: 25 26 27 101
    op <stringValue> (62)
        on left: 112 113 114 115 116
        on right: 82 83 103


State 0

    0 $accept: . start $end

    INT     shift, and go to state 1
    STRING  shift, and go to state 2
    CHAR    shift, and go to state 3
    MAIN    shift, and go to state 4

    start     go to state 5
    function  go to state 6


State 1

    3 function: INT . FUNCTION ALPHA OPEN_P params CLOSE_P EXEC program END_EXEC
    6         | INT . FUNCTION ALPHA OPEN_P params CLOSE_P END

    FUNCTION  shift, and go to state 7


State 2

    4 function: STRING . FUNCTION ALPHA OPEN_P params CLOSE_P EXEC program END_EXEC
    7         | STRING . FUNCTION ALPHA OPEN_P params CLOSE_P END

    FUNCTION  shift, and go to state 8


State 3

    5 function: CHAR . FUNCTION ALPHA OPEN_P params CLOSE_P EXEC program END_EXEC
    8         | CHAR . FUNCTION ALPHA OPEN_P params CLOSE_P END

    FUNCTION  shift, and go to state 9


State 4

    1 start: MAIN . EXEC program END_EXEC

    EXEC  shift, and go to state 10


State 5

    0 $accept: start . $end

    $end  shift, and go to state 11


State 6

    2 start: function . start

    INT     shift, and go to state 1
    STRING  shift, and go to state 2
    CHAR    shift, and go to state 3
    MAIN    shift, and go to state 4

    start     go to state 12
    function  go to state 6


State 7

    3 function: INT FUNCTION . ALPHA OPEN_P params CLOSE_P EXEC program END_EXEC
    6         | INT FUNCTION . ALPHA OPEN_P params CLOSE_P END

    ALPHA  shift, and go to state 13


State 8

    4 function: STRING FUNCTION . ALPHA OPEN_P params CLOSE_P EXEC program END_EXEC
    7         | STRING FUNCTION . ALPHA OPEN_P params CLOSE_P END

    ALPHA  shift, and go to state 14


State 9

    5 function: CHAR FUNCTION . ALPHA OPEN_P params CLOSE_P EXEC program END_EXEC
    8         | CHAR FUNCTION . ALPHA OPEN_P params CLOSE_P END

    ALPHA  shift, and go to state 15


State 10

    1 start: MAIN EXEC . program END_EXEC

    ALPHA   shift, and go to state 16
    INT     shift, and go to state 17
    STRING  shift, and go to state 18
    CHAR    shift, and go to state 19
    OPEN_P  shift, and go to state 20
    RETURN  shift, and go to state 21
    STDIN   shift, and go to state 22
    STDOUT  shift, and go to state 23

    $default  reduce using rule 28 (program)

    call     go to state 24
    program  go to state 25
    get      go to state 26
    var      go to state 27


State 11

    0 $accept: start $end .

    $default  accept


State 12

    2 start: function start .

    $default  reduce using rule 2 (start)


State 13

    3 function: INT FUNCTION ALPHA . OPEN_P params CLOSE_P EXEC program END_EXEC
    6         | INT FUNCTION ALPHA . OPEN_P params CLOSE_P END

    OPEN_P  shift, and go to state 28


State 14

    4 function: STRING FUNCTION ALPHA . OPEN_P params CLOSE_P EXEC program END_EXEC
    7         | STRING FUNCTION ALPHA . OPEN_P params CLOSE_P END

    OPEN_P  shift, and go to state 29


State 15

    5 function: CHAR FUNCTION ALPHA . OPEN_P params CLOSE_P EXEC program END_EXEC
    8         | CHAR FUNCTION ALPHA . OPEN_P params CLOSE_P END

    OPEN_P  shift, and go to state 30


State 16

   19 call: ALPHA . OPEN_P args CLOSE_P
   61 var: ALPHA . ASSIGN ALPHA
   62    | ALPHA . ASSIGN ESCAPE ALPHA
   63    | ALPHA . ASSIGN ESCAPE DIGIT
   64    | ALPHA . ASSIGN STRING_VALUE
   65    | ALPHA . ASSIGN var_init operation
   66    | ALPHA . ASSIGN ALPHA ARRAY DIGIT
   67    | ALPHA . ASSIGN ALPHA ARRAY ALPHA
   68    | ALPHA . ASSIGN CONVERT OPEN_P ALPHA CLOSE_P
   69    | ALPHA . ASSIGN LENGTH OPEN_P ALPHA CLOSE_P
   73    | ALPHA . ASSIGN call
   74    | ALPHA . ARRAY DIGIT ASSIGN DIGIT
   75    | ALPHA . ARRAY DIGIT ASSIGN ESCAPE ALPHA
   76    | ALPHA . ARRAY DIGIT ASSIGN ESCAPE DIGIT
   77    | ALPHA . ARRAY DIGIT ASSIGN STRING_VALUE
   78    | ALPHA . ARRAY ALPHA ASSIGN ALPHA
   79    | ALPHA . ARRAY ALPHA ASSIGN ALPHA ARRAY ALPHA
   80    | ALPHA . ARRAY ALPHA ASSIGN ESCAPE ALPHA
   81    | ALPHA . ARRAY ALPHA ASSIGN ESCAPE DIGIT

    OPEN_P  shift, and go to state 31
    ASSIGN  shift, and go to state 32
    ARRAY   shift, and go to state 33


State 17

   35 var: INT . ALPHA ASSIGN DIGIT operation
   36    | INT . ALPHA ASSIGN ALPHA operation
   41    | INT . ALPHA ARRAY DIGIT ASSIGN digit_array
   44    | INT . ALPHA ASSIGN CONVERT OPEN_P ALPHA CLOSE_P
   45    | INT . ALPHA ASSIGN LENGTH OPEN_P ALPHA CLOSE_P
   46    | INT . ALPHA ASSIGN ALPHA ARRAY DIGIT
   48    | INT . ALPHA ASSIGN ALPHA ARRAY ALPHA
   53    | INT . ALPHA
   56    | INT . ALPHA ARRAY DIGIT
   57    | INT . ALPHA ARRAY ALPHA
   70    | INT . ALPHA ASSIGN call

    ALPHA  shift, and go to state 34


State 18

   37 var: STRING . ALPHA ASSIGN STRING_VALUE
   38    | STRING . ALPHA ASSIGN ALPHA
   42    | STRING . ALPHA ARRAY DIGIT ASSIGN alpha_array
   47    | STRING . ALPHA ASSIGN ALPHA ARRAY DIGIT
   49    | STRING . ALPHA ASSIGN ALPHA ARRAY ALPHA
   55    | STRING . ALPHA
   58    | STRING . ALPHA ARRAY DIGIT
   71    | STRING . ALPHA ASSIGN call

    ALPHA  shift, and go to state 35


State 19

   39 var: CHAR . ALPHA ASSIGN ESCAPE ALPHA
   40    | CHAR . ALPHA ASSIGN ESCAPE DIGIT
   43    | CHAR . ALPHA ARRAY DIGIT ASSIGN char_array
   50    | CHAR . ALPHA ASSIGN ALPHA
   51    | CHAR . ALPHA ASSIGN ALPHA ARRAY DIGIT
   52    | CHAR . ALPHA ASSIGN ALPHA ARRAY ALPHA
   54    | CHAR . ALPHA
   59    | CHAR . ALPHA ARRAY DIGIT
   60    | CHAR . ALPHA ARRAY ALPHA
   72    | CHAR . ALPHA ASSIGN call

    ALPHA  shift, and go to state 36


State 20

   25 program: OPEN_P . rule operator rule CLOSE_P CONDITIONAL WHILE EXEC program END_EXEC program
   26        | OPEN_P . rule operator rule CLOSE_P CONDITIONAL IF EXEC program END_EXEC program
   27        | OPEN_P . rule operator rule CLOSE_P CONDITIONAL IF EXEC program END_EXEC ELSE EXEC program END_EXEC program

    DIGIT         shift, and go to state 37
    ALPHA         shift, and go to state 38
    STRING_VALUE  shift, and go to state 39
    OPEN_P        shift, and go to state 40
    ESCAPE        shift, and go to state 41

    assignment  go to state 42
    rule        go to state 43


State 21

   22 program: RETURN . assignment END

    DIGIT         shift, and go to state 37
    ALPHA         shift, and go to state 38
    STRING_VALUE  shift, and go to state 39
    ESCAPE        shift, and go to state 41

    assignment  go to state 44


State 22

   29 get: STDIN . OPEN_P ALPHA COMMA DIGIT CLOSE_P END

    OPEN_P  shift, and go to state 45


State 23

   24 program: STDOUT . out END program

    ALPHA        shift, and go to state 46
    SPACE_ALPHA  shift, and go to state 47
    ESCAPE       shift, and go to state 48

    $default  reduce using rule 32 (out)

    out  go to state 49


State 24

   21 program: call . END program

    END  shift, and go to state 50


State 25

    1 start: MAIN EXEC program . END_EXEC

    END_EXEC  shift, and go to state 51


State 26

   23 program: get . program

    ALPHA   shift, and go to state 16
    INT     shift, and go to state 17
    STRING  shift, and go to state 18
    CHAR    shift, and go to state 19
    OPEN_P  shift, and go to state 20
    RETURN  shift, and go to state 21
    STDIN   shift, and go to state 22
    STDOUT  shift, and go to state 23

    $default  reduce using rule 28 (program)

    call     go to state 24
    program  go to state 52
    get      go to state 26
    var      go to state 27


State 27

   20 program: var . END program

    END  shift, and go to state 53


State 28

    3 function: INT FUNCTION ALPHA OPEN_P . params CLOSE_P EXEC program END_EXEC
    6         | INT FUNCTION ALPHA OPEN_P . params CLOSE_P END

    INT     shift, and go to state 54
    STRING  shift, and go to state 55
    CHAR    shift, and go to state 56

    $default  reduce using rule 14 (params)

    type    go to state 57
    params  go to state 58


State 29

    4 function: STRING FUNCTION ALPHA OPEN_P . params CLOSE_P EXEC program END_EXEC
    7         | STRING FUNCTION ALPHA OPEN_P . params CLOSE_P END

    INT     shift, and go to state 54
    STRING  shift, and go to state 55
    CHAR    shift, and go to state 56

    $default  reduce using rule 14 (params)

    type    go to state 57
    params  go to state 59


State 30

    5 function: CHAR FUNCTION ALPHA OPEN_P . params CLOSE_P EXEC program END_EXEC
    8         | CHAR FUNCTION ALPHA OPEN_P . params CLOSE_P END

    INT     shift, and go to state 54
    STRING  shift, and go to state 55
    CHAR    shift, and go to state 56

    $default  reduce using rule 14 (params)

    type    go to state 57
    params  go to state 60


State 31

   19 call: ALPHA OPEN_P . args CLOSE_P

    DIGIT         shift, and go to state 37
    ALPHA         shift, and go to state 61
    STRING_VALUE  shift, and go to state 39
    ESCAPE        shift, and go to state 41

    $default  reduce using rule 18 (args)

    args        go to state 62
    call        go to state 63
    assignment  go to state 64


State 32

   61 var: ALPHA ASSIGN . ALPHA
   62    | ALPHA ASSIGN . ESCAPE ALPHA
   63    | ALPHA ASSIGN . ESCAPE DIGIT
   64    | ALPHA ASSIGN . STRING_VALUE
   65    | ALPHA ASSIGN . var_init operation
   66    | ALPHA ASSIGN . ALPHA ARRAY DIGIT
   67    | ALPHA ASSIGN . ALPHA ARRAY ALPHA
   68    | ALPHA ASSIGN . CONVERT OPEN_P ALPHA CLOSE_P
   69    | ALPHA ASSIGN . LENGTH OPEN_P ALPHA CLOSE_P
   73    | ALPHA ASSIGN . call

    DIGIT         shift, and go to state 65
    ALPHA         shift, and go to state 66
    STRING_VALUE  shift, and go to state 67
    ESCAPE        shift, and go to state 68
    CONVERT       shift, and go to state 69
    LENGTH        shift, and go to state 70

    call      go to state 71
    var_init  go to state 72


State 33

   74 var: ALPHA ARRAY . DIGIT ASSIGN DIGIT
   75    | ALPHA ARRAY . DIGIT ASSIGN ESCAPE ALPHA
   76    | ALPHA ARRAY . DIGIT ASSIGN ESCAPE DIGIT
   77    | ALPHA ARRAY . DIGIT ASSIGN STRING_VALUE
   78    | ALPHA ARRAY . ALPHA ASSIGN ALPHA
   79    | ALPHA ARRAY . ALPHA ASSIGN ALPHA ARRAY ALPHA
   80    | ALPHA ARRAY . ALPHA ASSIGN ESCAPE ALPHA
   81    | ALPHA ARRAY . ALPHA ASSIGN ESCAPE DIGIT

    DIGIT  shift, and go to state 73
    ALPHA  shift, and go to state 74


State 34

   35 var: INT ALPHA . ASSIGN DIGIT operation
   36    | INT ALPHA . ASSIGN ALPHA operation
   41    | INT ALPHA . ARRAY DIGIT ASSIGN digit_array
   44    | INT ALPHA . ASSIGN CONVERT OPEN_P ALPHA CLOSE_P
   45    | INT ALPHA . ASSIGN LENGTH OPEN_P ALPHA CLOSE_P
   46    | INT ALPHA . ASSIGN ALPHA ARRAY DIGIT
   48    | INT ALPHA . ASSIGN ALPHA ARRAY ALPHA
   53    | INT ALPHA .
   56    | INT ALPHA . ARRAY DIGIT
   57    | INT ALPHA . ARRAY ALPHA
   70    | INT ALPHA . ASSIGN call

    ASSIGN  shift, and go to state 75
    ARRAY   shift, and go to state 76

    $default  reduce using rule 53 (var)


State 35

   37 var: STRING ALPHA . ASSIGN STRING_VALUE
   38    | STRING ALPHA . ASSIGN ALPHA
   42    | STRING ALPHA . ARRAY DIGIT ASSIGN alpha_array
   47    | STRING ALPHA . ASSIGN ALPHA ARRAY DIGIT
   49    | STRING ALPHA . ASSIGN ALPHA ARRAY ALPHA
   55    | STRING ALPHA .
   58    | STRING ALPHA . ARRAY DIGIT
   71    | STRING ALPHA . ASSIGN call

    ASSIGN  shift, and go to state 77
    ARRAY   shift, and go to state 78

    $default  reduce using rule 55 (var)


State 36

   39 var: CHAR ALPHA . ASSIGN ESCAPE ALPHA
   40    | CHAR ALPHA . ASSIGN ESCAPE DIGIT
   43    | CHAR ALPHA . ARRAY DIGIT ASSIGN char_array
   50    | CHAR ALPHA . ASSIGN ALPHA
   51    | CHAR ALPHA . ASSIGN ALPHA ARRAY DIGIT
   52    | CHAR ALPHA . ASSIGN ALPHA ARRAY ALPHA
   54    | CHAR ALPHA .
   59    | CHAR ALPHA . ARRAY DIGIT
   60    | CHAR ALPHA . ARRAY ALPHA
   72    | CHAR ALPHA . ASSIGN call

    ASSIGN  shift, and go to state 79
    ARRAY   shift, and go to state 80

    $default  reduce using rule 54 (var)


State 37

   86 assignment: DIGIT .

    $default  reduce using rule 86 (assignment)


State 38

   85 assignment: ALPHA .
   89           | ALPHA . ARRAY DIGIT
   90           | ALPHA . ARRAY ALPHA

    ARRAY  shift, and go to state 81

    $default  reduce using rule 85 (assignment)


State 39

   87 assignment: STRING_VALUE .

    $default  reduce using rule 87 (assignment)


State 40

  101 rule: OPEN_P . rule operator rule CLOSE_P

    DIGIT         shift, and go to state 37
    ALPHA         shift, and go to state 38
    STRING_VALUE  shift, and go to state 39
    OPEN_P        shift, and go to state 40
    ESCAPE        shift, and go to state 41

    assignment  go to state 42
    rule        go to state 82


State 41

   88 assignment: ESCAPE . ALPHA

    ALPHA  shift, and go to state 83


State 42

  102 rule: assignment .

    $default  reduce using rule 102 (rule)


State 43

   25 program: OPEN_P rule . operator rule CLOSE_P CONDITIONAL WHILE EXEC program END_EXEC program
   26        | OPEN_P rule . operator rule CLOSE_P CONDITIONAL IF EXEC program END_EXEC program
   27        | OPEN_P rule . operator rule CLOSE_P CONDITIONAL IF EXEC program END_EXEC ELSE EXEC program END_EXEC program

    PLUS   shift, and go to state 84
    MINUS  shift, and go to state 85
    TIMES  shift, and go to state 86
    DIV    shift, and go to state 87
    MOD    shift, and go to state 88
    L      shift, and go to state 89
    G      shift, and go to state 90
    LE     shift, and go to state 91
    GE     shift, and go to state 92
    EQ     shift, and go to state 93
    NE     shift, and go to state 94
    OR     shift, and go to state 95
    AND    shift, and go to state 96

    operator  go to state 97
    op        go to state 98


State 44

   22 program: RETURN assignment . END

    END  shift, and go to state 99


State 45

   29 get: STDIN OPEN_P . ALPHA COMMA DIGIT CLOSE_P END

    ALPHA  shift, and go to state 100


State 46

   33 out: ALPHA . out

    ALPHA        shift, and go to state 46
    SPACE_ALPHA  shift, and go to state 47
    ESCAPE       shift, and go to state 48

    $default  reduce using rule 32 (out)

    out  go to state 101


State 47

   30 out: SPACE_ALPHA . out

    ALPHA        shift, and go to state 46
    SPACE_ALPHA  shift, and go to state 47
    ESCAPE       shift, and go to state 48

    $default  reduce using rule 32 (out)

    out  go to state 102


State 48

   31 out: ESCAPE . SPACE_ALPHA ESCAPE out
   34    | ESCAPE . ALPHA ESCAPE out

    ALPHA        shift, and go to state 103
    SPACE_ALPHA  shift, and go to state 104


State 49

   24 program: STDOUT out . END program

    END  shift, and go to state 105


State 50

   21 program: call END . program

    ALPHA   shift, and go to state 16
    INT     shift, and go to state 17
    STRING  shift, and go to state 18
    CHAR    shift, and go to state 19
    OPEN_P  shift, and go to state 20
    RETURN  shift, and go to state 21
    STDIN   shift, and go to state 22
    STDOUT  shift, and go to state 23

    $default  reduce using rule 28 (program)

    call     go to state 24
    program  go to state 106
    get      go to state 26
    var      go to state 27


State 51

    1 start: MAIN EXEC program END_EXEC .

    $default  reduce using rule 1 (start)


State 52

   23 program: get program .

    $default  reduce using rule 23 (program)


State 53

   20 program: var END . program

    ALPHA   shift, and go to state 16
    INT     shift, and go to state 17
    STRING  shift, and go to state 18
    CHAR    shift, and go to state 19
    OPEN_P  shift, and go to state 20
    RETURN  shift, and go to state 21
    STDIN   shift, and go to state 22
    STDOUT  shift, and go to state 23

    $default  reduce using rule 28 (program)

    call     go to state 24
    program  go to state 107
    get      go to state 26
    var      go to state 27


State 54

    9 type: INT .

    $default  reduce using rule 9 (type)


State 55

   10 type: STRING .

    $default  reduce using rule 10 (type)


State 56

   11 type: CHAR .

    $default  reduce using rule 11 (type)


State 57

   12 params: type . ALPHA
   13       | type . ALPHA COMMA params

    ALPHA  shift, and go to state 108


State 58

    3 function: INT FUNCTION ALPHA OPEN_P params . CLOSE_P EXEC program END_EXEC
    6         | INT FUNCTION ALPHA OPEN_P params . CLOSE_P END

    CLOSE_P  shift, and go to state 109


State 59

    4 function: STRING FUNCTION ALPHA OPEN_P params . CLOSE_P EXEC program END_EXEC
    7         | STRING FUNCTION ALPHA OPEN_P params . CLOSE_P END

    CLOSE_P  shift, and go to state 110


State 60

    5 function: CHAR FUNCTION ALPHA OPEN_P params . CLOSE_P EXEC program END_EXEC
    8         | CHAR FUNCTION ALPHA OPEN_P params . CLOSE_P END

    CLOSE_P  shift, and go to state 111


State 61

   19 call: ALPHA . OPEN_P args CLOSE_P
   85 assignment: ALPHA .
   89           | ALPHA . ARRAY DIGIT
   90           | ALPHA . ARRAY ALPHA

    OPEN_P  shift, and go to state 31
    ARRAY   shift, and go to state 81

    $default  reduce using rule 85 (assignment)


State 62

   19 call: ALPHA OPEN_P args . CLOSE_P

    CLOSE_P  shift, and go to state 112


State 63

   17 args: call .

    $default  reduce using rule 17 (args)


State 64

   15 args: assignment .
   16     | assignment . COMMA args

    COMMA  shift, and go to state 113

    $default  reduce using rule 15 (args)


State 65

   92 var_init: DIGIT .

    $default  reduce using rule 92 (var_init)


State 66

   19 call: ALPHA . OPEN_P args CLOSE_P
   61 var: ALPHA ASSIGN ALPHA .
   66    | ALPHA ASSIGN ALPHA . ARRAY DIGIT
   67    | ALPHA ASSIGN ALPHA . ARRAY ALPHA
   91 var_init: ALPHA .

    OPEN_P  shift, and go to state 31
    ARRAY   shift, and go to state 114

    END       reduce using rule 61 (var)
    END       [reduce using rule 91 (var_init)]
    $default  reduce using rule 91 (var_init)


State 67

   64 var: ALPHA ASSIGN STRING_VALUE .

    $default  reduce using rule 64 (var)


State 68

   62 var: ALPHA ASSIGN ESCAPE . ALPHA
   63    | ALPHA ASSIGN ESCAPE . DIGIT

    DIGIT  shift, and go to state 115
    ALPHA  shift, and go to state 116


State 69

   68 var: ALPHA ASSIGN CONVERT . OPEN_P ALPHA CLOSE_P

    OPEN_P  shift, and go to state 117


State 70

   69 var: ALPHA ASSIGN LENGTH . OPEN_P ALPHA CLOSE_P

    OPEN_P  shift, and go to state 118


State 71

   73 var: ALPHA ASSIGN call .

    $default  reduce using rule 73 (var)


State 72

   65 var: ALPHA ASSIGN var_init . operation

    PLUS   shift, and go to state 84
    MINUS  shift, and go to state 85
    TIMES  shift, and go to state 86
    DIV    shift, and go to state 87
    MOD    shift, and go to state 88

    $default  reduce using rule 84 (operation)

    operation  go to state 119
    op         go to state 120


State 73

   74 var: ALPHA ARRAY DIGIT . ASSIGN DIGIT
   75    | ALPHA ARRAY DIGIT . ASSIGN ESCAPE ALPHA
   76    | ALPHA ARRAY DIGIT . ASSIGN ESCAPE DIGIT
   77    | ALPHA ARRAY DIGIT . ASSIGN STRING_VALUE

    ASSIGN  shift, and go to state 121


State 74

   78 var: ALPHA ARRAY ALPHA . ASSIGN ALPHA
   79    | ALPHA ARRAY ALPHA . ASSIGN ALPHA ARRAY ALPHA
   80    | ALPHA ARRAY ALPHA . ASSIGN ESCAPE ALPHA
   81    | ALPHA ARRAY ALPHA . ASSIGN ESCAPE DIGIT

    ASSIGN  shift, and go to state 122


State 75

   35 var: INT ALPHA ASSIGN . DIGIT operation
   36    | INT ALPHA ASSIGN . ALPHA operation
   44    | INT ALPHA ASSIGN . CONVERT OPEN_P ALPHA CLOSE_P
   45    | INT ALPHA ASSIGN . LENGTH OPEN_P ALPHA CLOSE_P
   46    | INT ALPHA ASSIGN . ALPHA ARRAY DIGIT
   48    | INT ALPHA ASSIGN . ALPHA ARRAY ALPHA
   70    | INT ALPHA ASSIGN . call

    DIGIT    shift, and go to state 123
    ALPHA    shift, and go to state 124
    CONVERT  shift, and go to state 125
    LENGTH   shift, and go to state 126

    call  go to state 127


State 76

   41 var: INT ALPHA ARRAY . DIGIT ASSIGN digit_array
   56    | INT ALPHA ARRAY . DIGIT
   57    | INT ALPHA ARRAY . ALPHA

    DIGIT  shift, and go to state 128
    ALPHA  shift, and go to state 129


State 77

   37 var: STRING ALPHA ASSIGN . STRING_VALUE
   38    | STRING ALPHA ASSIGN . ALPHA
   47    | STRING ALPHA ASSIGN . ALPHA ARRAY DIGIT
   49    | STRING ALPHA ASSIGN . ALPHA ARRAY ALPHA
   71    | STRING ALPHA ASSIGN . call

    ALPHA         shift, and go to state 130
    STRING_VALUE  shift, and go to state 131

    call  go to state 132


State 78

   42 var: STRING ALPHA ARRAY . DIGIT ASSIGN alpha_array
   58    | STRING ALPHA ARRAY . DIGIT

    DIGIT  shift, and go to state 133


State 79

   39 var: CHAR ALPHA ASSIGN . ESCAPE ALPHA
   40    | CHAR ALPHA ASSIGN . ESCAPE DIGIT
   50    | CHAR ALPHA ASSIGN . ALPHA
   51    | CHAR ALPHA ASSIGN . ALPHA ARRAY DIGIT
   52    | CHAR ALPHA ASSIGN . ALPHA ARRAY ALPHA
   72    | CHAR ALPHA ASSIGN . call

    ALPHA   shift, and go to state 134
    ESCAPE  shift, and go to state 135

    call  go to state 136


State 80

   43 var: CHAR ALPHA ARRAY . DIGIT ASSIGN char_array
   59    | CHAR ALPHA ARRAY . DIGIT
   60    | CHAR ALPHA ARRAY . ALPHA

    DIGIT  shift, and go to state 137
    ALPHA  shift, and go to state 138


State 81

   89 assignment: ALPHA ARRAY . DIGIT
   90           | ALPHA ARRAY . ALPHA

    DIGIT  shift, and go to state 139
    ALPHA  shift, and go to state 140


State 82

  101 rule: OPEN_P rule . operator rule CLOSE_P

    PLUS   shift, and go to state 84
    MINUS  shift, and go to state 85
    TIMES  shift, and go to state 86
    DIV    shift, and go to state 87
    MOD    shift, and go to state 88
    L      shift, and go to state 89
    G      shift, and go to state 90
    LE     shift, and go to state 91
    GE     shift, and go to state 92
    EQ     shift, and go to state 93
    NE     shift, and go to state 94
    OR     shift, and go to state 95
    AND    shift, and go to state 96

    operator  go to state 141
    op        go to state 98


State 83

   88 assignment: ESCAPE ALPHA .

    $default  reduce using rule 88 (assignment)


State 84

  112 op: PLUS .

    $default  reduce using rule 112 (op)


State 85

  113 op: MINUS .

    $default  reduce using rule 113 (op)


State 86

  115 op: TIMES .

    $default  reduce using rule 115 (op)


State 87

  114 op: DIV .

    $default  reduce using rule 114 (op)


State 88

  116 op: MOD .

    $default  reduce using rule 116 (op)


State 89

  104 operator: L .

    $default  reduce using rule 104 (operator)


State 90

  105 operator: G .

    $default  reduce using rule 105 (operator)


State 91

  106 operator: LE .

    $default  reduce using rule 106 (operator)


State 92

  107 operator: GE .

    $default  reduce using rule 107 (operator)


State 93

  108 operator: EQ .

    $default  reduce using rule 108 (operator)


State 94

  109 operator: NE .

    $default  reduce using rule 109 (operator)


State 95

  110 operator: OR .

    $default  reduce using rule 110 (operator)


State 96

  111 operator: AND .

    $default  reduce using rule 111 (operator)


State 97

   25 program: OPEN_P rule operator . rule CLOSE_P CONDITIONAL WHILE EXEC program END_EXEC program
   26        | OPEN_P rule operator . rule CLOSE_P CONDITIONAL IF EXEC program END_EXEC program
   27        | OPEN_P rule operator . rule CLOSE_P CONDITIONAL IF EXEC program END_EXEC ELSE EXEC program END_EXEC program

    DIGIT         shift, and go to state 37
    ALPHA         shift, and go to state 38
    STRING_VALUE  shift, and go to state 39
    OPEN_P        shift, and go to state 40
    ESCAPE        shift, and go to state 41

    assignment  go to state 42
    rule        go to state 142


State 98

  103 operator: op .

    $default  reduce using rule 103 (operator)


State 99

   22 program: RETURN assignment END .

    $default  reduce using rule 22 (program)


State 100

   29 get: STDIN OPEN_P ALPHA . COMMA DIGIT CLOSE_P END

    COMMA  shift, and go to state 143


State 101

   33 out: ALPHA out .

    $default  reduce using rule 33 (out)


State 102

   30 out: SPACE_ALPHA out .

    $default  reduce using rule 30 (out)


State 103

   34 out: ESCAPE ALPHA . ESCAPE out

    ESCAPE  shift, and go to state 144


State 104

   31 out: ESCAPE SPACE_ALPHA . ESCAPE out

    ESCAPE  shift, and go to state 145


State 105

   24 program: STDOUT out END . program

    ALPHA   shift, and go to state 16
    INT     shift, and go to state 17
    STRING  shift, and go to state 18
    CHAR    shift, and go to state 19
    OPEN_P  shift, and go to state 20
    RETURN  shift, and go to state 21
    STDIN   shift, and go to state 22
    STDOUT  shift, and go to state 23

    $default  reduce using rule 28 (program)

    call     go to state 24
    program  go to state 146
    get      go to state 26
    var      go to state 27


State 106

   21 program: call END program .

    $default  reduce using rule 21 (program)


State 107

   20 program: var END program .

    $default  reduce using rule 20 (program)


State 108

   12 params: type ALPHA .
   13       | type ALPHA . COMMA params

    COMMA  shift, and go to state 147

    $default  reduce using rule 12 (params)


State 109

    3 function: INT FUNCTION ALPHA OPEN_P params CLOSE_P . EXEC program END_EXEC
    6         | INT FUNCTION ALPHA OPEN_P params CLOSE_P . END

    END   shift, and go to state 148
    EXEC  shift, and go to state 149


State 110

    4 function: STRING FUNCTION ALPHA OPEN_P params CLOSE_P . EXEC program END_EXEC
    7         | STRING FUNCTION ALPHA OPEN_P params CLOSE_P . END

    END   shift, and go to state 150
    EXEC  shift, and go to state 151


State 111

    5 function: CHAR FUNCTION ALPHA OPEN_P params CLOSE_P . EXEC program END_EXEC
    8         | CHAR FUNCTION ALPHA OPEN_P params CLOSE_P . END

    END   shift, and go to state 152
    EXEC  shift, and go to state 153


State 112

   19 call: ALPHA OPEN_P args CLOSE_P .

    $default  reduce using rule 19 (call)


State 113

   16 args: assignment COMMA . args

    DIGIT         shift, and go to state 37
    ALPHA         shift, and go to state 61
    STRING_VALUE  shift, and go to state 39
    ESCAPE        shift, and go to state 41

    $default  reduce using rule 18 (args)

    args        go to state 154
    call        go to state 63
    assignment  go to state 64


State 114

   66 var: ALPHA ASSIGN ALPHA ARRAY . DIGIT
   67    | ALPHA ASSIGN ALPHA ARRAY . ALPHA

    DIGIT  shift, and go to state 155
    ALPHA  shift, and go to state 156


State 115

   63 var: ALPHA ASSIGN ESCAPE DIGIT .

    $default  reduce using rule 63 (var)


State 116

   62 var: ALPHA ASSIGN ESCAPE ALPHA .

    $default  reduce using rule 62 (var)


State 117

   68 var: ALPHA ASSIGN CONVERT OPEN_P . ALPHA CLOSE_P

    ALPHA  shift, and go to state 157


State 118

   69 var: ALPHA ASSIGN LENGTH OPEN_P . ALPHA CLOSE_P

    ALPHA  shift, and go to state 158


State 119

   65 var: ALPHA ASSIGN var_init operation .

    $default  reduce using rule 65 (var)


State 120

   82 operation: op . DIGIT operation
   83          | op . ALPHA operation

    DIGIT  shift, and go to state 159
    ALPHA  shift, and go to state 160


State 121

   74 var: ALPHA ARRAY DIGIT ASSIGN . DIGIT
   75    | ALPHA ARRAY DIGIT ASSIGN . ESCAPE ALPHA
   76    | ALPHA ARRAY DIGIT ASSIGN . ESCAPE DIGIT
   77    | ALPHA ARRAY DIGIT ASSIGN . STRING_VALUE

    DIGIT         shift, and go to state 161
    STRING_VALUE  shift, and go to state 162
    ESCAPE        shift, and go to state 163


State 122

   78 var: ALPHA ARRAY ALPHA ASSIGN . ALPHA
   79    | ALPHA ARRAY ALPHA ASSIGN . ALPHA ARRAY ALPHA
   80    | ALPHA ARRAY ALPHA ASSIGN . ESCAPE ALPHA
   81    | ALPHA ARRAY ALPHA ASSIGN . ESCAPE DIGIT

    ALPHA   shift, and go to state 164
    ESCAPE  shift, and go to state 165


State 123

   35 var: INT ALPHA ASSIGN DIGIT . operation

    PLUS   shift, and go to state 84
    MINUS  shift, and go to state 85
    TIMES  shift, and go to state 86
    DIV    shift, and go to state 87
    MOD    shift, and go to state 88

    $default  reduce using rule 84 (operation)

    operation  go to state 166
    op         go to state 120


State 124

   19 call: ALPHA . OPEN_P args CLOSE_P
   36 var: INT ALPHA ASSIGN ALPHA . operation
   46    | INT ALPHA ASSIGN ALPHA . ARRAY DIGIT
   48    | INT ALPHA ASSIGN ALPHA . ARRAY ALPHA

    PLUS    shift, and go to state 84
    MINUS   shift, and go to state 85
    TIMES   shift, and go to state 86
    DIV     shift, and go to state 87
    MOD     shift, and go to state 88
    OPEN_P  shift, and go to state 31
    ARRAY   shift, and go to state 167

    $default  reduce using rule 84 (operation)

    operation  go to state 168
    op         go to state 120


State 125

   44 var: INT ALPHA ASSIGN CONVERT . OPEN_P ALPHA CLOSE_P

    OPEN_P  shift, and go to state 169


State 126

   45 var: INT ALPHA ASSIGN LENGTH . OPEN_P ALPHA CLOSE_P

    OPEN_P  shift, and go to state 170


State 127

   70 var: INT ALPHA ASSIGN call .

    $default  reduce using rule 70 (var)


State 128

   41 var: INT ALPHA ARRAY DIGIT . ASSIGN digit_array
   56    | INT ALPHA ARRAY DIGIT .

    ASSIGN  shift, and go to state 171

    $default  reduce using rule 56 (var)


State 129

   57 var: INT ALPHA ARRAY ALPHA .

    $default  reduce using rule 57 (var)


State 130

   19 call: ALPHA . OPEN_P args CLOSE_P
   38 var: STRING ALPHA ASSIGN ALPHA .
   47    | STRING ALPHA ASSIGN ALPHA . ARRAY DIGIT
   49    | STRING ALPHA ASSIGN ALPHA . ARRAY ALPHA

    OPEN_P  shift, and go to state 31
    ARRAY   shift, and go to state 172

    $default  reduce using rule 38 (var)


State 131

   37 var: STRING ALPHA ASSIGN STRING_VALUE .

    $default  reduce using rule 37 (var)


State 132

   71 var: STRING ALPHA ASSIGN call .

    $default  reduce using rule 71 (var)


State 133

   42 var: STRING ALPHA ARRAY DIGIT . ASSIGN alpha_array
   58    | STRING ALPHA ARRAY DIGIT .

    ASSIGN  shift, and go to state 173

    $default  reduce using rule 58 (var)


State 134

   19 call: ALPHA . OPEN_P args CLOSE_P
   50 var: CHAR ALPHA ASSIGN ALPHA .
   51    | CHAR ALPHA ASSIGN ALPHA . ARRAY DIGIT
   52    | CHAR ALPHA ASSIGN ALPHA . ARRAY ALPHA

    OPEN_P  shift, and go to state 31
    ARRAY   shift, and go to state 174

    $default  reduce using rule 50 (var)


State 135

   39 var: CHAR ALPHA ASSIGN ESCAPE . ALPHA
   40    | CHAR ALPHA ASSIGN ESCAPE . DIGIT

    DIGIT  shift, and go to state 175
    ALPHA  shift, and go to state 176


State 136

   72 var: CHAR ALPHA ASSIGN call .

    $default  reduce using rule 72 (var)


State 137

   43 var: CHAR ALPHA ARRAY DIGIT . ASSIGN char_array
   59    | CHAR ALPHA ARRAY DIGIT .

    ASSIGN  shift, and go to state 177

    $default  reduce using rule 59 (var)


State 138

   60 var: CHAR ALPHA ARRAY ALPHA .

    $default  reduce using rule 60 (var)


State 139

   89 assignment: ALPHA ARRAY DIGIT .

    $default  reduce using rule 89 (assignment)


State 140

   90 assignment: ALPHA ARRAY ALPHA .

    $default  reduce using rule 90 (assignment)


State 141

  101 rule: OPEN_P rule operator . rule CLOSE_P

    DIGIT         shift, and go to state 37
    ALPHA         shift, and go to state 38
    STRING_VALUE  shift, and go to state 39
    OPEN_P        shift, and go to state 40
    ESCAPE        shift, and go to state 41

    assignment  go to state 42
    rule        go to state 178


State 142

   25 program: OPEN_P rule operator rule . CLOSE_P CONDITIONAL WHILE EXEC program END_EXEC program
   26        | OPEN_P rule operator rule . CLOSE_P CONDITIONAL IF EXEC program END_EXEC program
   27        | OPEN_P rule operator rule . CLOSE_P CONDITIONAL IF EXEC program END_EXEC ELSE EXEC program END_EXEC program

    CLOSE_P  shift, and go to state 179


State 143

   29 get: STDIN OPEN_P ALPHA COMMA . DIGIT CLOSE_P END

    DIGIT  shift, and go to state 180


State 144

   34 out: ESCAPE ALPHA ESCAPE . out

    ALPHA        shift, and go to state 46
    SPACE_ALPHA  shift, and go to state 47
    ESCAPE       shift, and go to state 48

    $default  reduce using rule 32 (out)

    out  go to state 181


State 145

   31 out: ESCAPE SPACE_ALPHA ESCAPE . out

    ALPHA        shift, and go to state 46
    SPACE_ALPHA  shift, and go to state 47
    ESCAPE       shift, and go to state 48

    $default  reduce using rule 32 (out)

    out  go to state 182


State 146

   24 program: STDOUT out END program .

    $default  reduce using rule 24 (program)


State 147

   13 params: type ALPHA COMMA . params

    INT     shift, and go to state 54
    STRING  shift, and go to state 55
    CHAR    shift, and go to state 56

    $default  reduce using rule 14 (params)

    type    go to state 57
    params  go to state 183


State 148

    6 function: INT FUNCTION ALPHA OPEN_P params CLOSE_P END .

    $default  reduce using rule 6 (function)


State 149

    3 function: INT FUNCTION ALPHA OPEN_P params CLOSE_P EXEC . program END_EXEC

    ALPHA   shift, and go to state 16
    INT     shift, and go to state 17
    STRING  shift, and go to state 18
    CHAR    shift, and go to state 19
    OPEN_P  shift, and go to state 20
    RETURN  shift, and go to state 21
    STDIN   shift, and go to state 22
    STDOUT  shift, and go to state 23

    $default  reduce using rule 28 (program)

    call     go to state 24
    program  go to state 184
    get      go to state 26
    var      go to state 27


State 150

    7 function: STRING FUNCTION ALPHA OPEN_P params CLOSE_P END .

    $default  reduce using rule 7 (function)


State 151

    4 function: STRING FUNCTION ALPHA OPEN_P params CLOSE_P EXEC . program END_EXEC

    ALPHA   shift, and go to state 16
    INT     shift, and go to state 17
    STRING  shift, and go to state 18
    CHAR    shift, and go to state 19
    OPEN_P  shift, and go to state 20
    RETURN  shift, and go to state 21
    STDIN   shift, and go to state 22
    STDOUT  shift, and go to state 23

    $default  reduce using rule 28 (program)

    call     go to state 24
    program  go to state 185
    get      go to state 26
    var      go to state 27


State 152

    8 function: CHAR FUNCTION ALPHA OPEN_P params CLOSE_P END .

    $default  reduce using rule 8 (function)


State 153

    5 function: CHAR FUNCTION ALPHA OPEN_P params CLOSE_P EXEC . program END_EXEC

    ALPHA   shift, and go to state 16
    INT     shift, and go to state 17
    STRING  shift, and go to state 18
    CHAR    shift, and go to state 19
    OPEN_P  shift, and go to state 20
    RETURN  shift, and go to state 21
    STDIN   shift, and go to state 22
    STDOUT  shift, and go to state 23

    $default  reduce using rule 28 (program)

    call     go to state 24
    program  go to state 186
    get      go to state 26
    var      go to state 27


State 154

   16 args: assignment COMMA args .

    $default  reduce using rule 16 (args)


State 155

   66 var: ALPHA ASSIGN ALPHA ARRAY DIGIT .

    $default  reduce using rule 66 (var)


State 156

   67 var: ALPHA ASSIGN ALPHA ARRAY ALPHA .

    $default  reduce using rule 67 (var)


State 157

   68 var: ALPHA ASSIGN CONVERT OPEN_P ALPHA . CLOSE_P

    CLOSE_P  shift, and go to state 187


State 158

   69 var: ALPHA ASSIGN LENGTH OPEN_P ALPHA . CLOSE_P

    CLOSE_P  shift, and go to state 188


State 159

   82 operation: op DIGIT . operation

    PLUS   shift, and go to state 84
    MINUS  shift, and go to state 85
    TIMES  shift, and go to state 86
    DIV    shift, and go to state 87
    MOD    shift, and go to state 88

    $default  reduce using rule 84 (operation)

    operation  go to state 189
    op         go to state 120


State 160

   83 operation: op ALPHA . operation

    PLUS   shift, and go to state 84
    MINUS  shift, and go to state 85
    TIMES  shift, and go to state 86
    DIV    shift, and go to state 87
    MOD    shift, and go to state 88

    $default  reduce using rule 84 (operation)

    operation  go to state 190
    op         go to state 120


State 161

   74 var: ALPHA ARRAY DIGIT ASSIGN DIGIT .

    $default  reduce using rule 74 (var)


State 162

   77 var: ALPHA ARRAY DIGIT ASSIGN STRING_VALUE .

    $default  reduce using rule 77 (var)


State 163

   75 var: ALPHA ARRAY DIGIT ASSIGN ESCAPE . ALPHA
   76    | ALPHA ARRAY DIGIT ASSIGN ESCAPE . DIGIT

    DIGIT  shift, and go to state 191
    ALPHA  shift, and go to state 192


State 164

   78 var: ALPHA ARRAY ALPHA ASSIGN ALPHA .
   79    | ALPHA ARRAY ALPHA ASSIGN ALPHA . ARRAY ALPHA

    ARRAY  shift, and go to state 193

    $default  reduce using rule 78 (var)


State 165

   80 var: ALPHA ARRAY ALPHA ASSIGN ESCAPE . ALPHA
   81    | ALPHA ARRAY ALPHA ASSIGN ESCAPE . DIGIT

    DIGIT  shift, and go to state 194
    ALPHA  shift, and go to state 195


State 166

   35 var: INT ALPHA ASSIGN DIGIT operation .

    $default  reduce using rule 35 (var)


State 167

   46 var: INT ALPHA ASSIGN ALPHA ARRAY . DIGIT
   48    | INT ALPHA ASSIGN ALPHA ARRAY . ALPHA

    DIGIT  shift, and go to state 196
    ALPHA  shift, and go to state 197


State 168

   36 var: INT ALPHA ASSIGN ALPHA operation .

    $default  reduce using rule 36 (var)


State 169

   44 var: INT ALPHA ASSIGN CONVERT OPEN_P . ALPHA CLOSE_P

    ALPHA  shift, and go to state 198


State 170

   45 var: INT ALPHA ASSIGN LENGTH OPEN_P . ALPHA CLOSE_P

    ALPHA  shift, and go to state 199


State 171

   41 var: INT ALPHA ARRAY DIGIT ASSIGN . digit_array

    DIGIT  shift, and go to state 200

    digit_array  go to state 201


State 172

   47 var: STRING ALPHA ASSIGN ALPHA ARRAY . DIGIT
   49    | STRING ALPHA ASSIGN ALPHA ARRAY . ALPHA

    DIGIT  shift, and go to state 202
    ALPHA  shift, and go to state 203


State 173

   42 var: STRING ALPHA ARRAY DIGIT ASSIGN . alpha_array

    STRING_VALUE  shift, and go to state 204

    alpha_array  go to state 205


State 174

   51 var: CHAR ALPHA ASSIGN ALPHA ARRAY . DIGIT
   52    | CHAR ALPHA ASSIGN ALPHA ARRAY . ALPHA

    DIGIT  shift, and go to state 206
    ALPHA  shift, and go to state 207


State 175

   40 var: CHAR ALPHA ASSIGN ESCAPE DIGIT .

    $default  reduce using rule 40 (var)


State 176

   39 var: CHAR ALPHA ASSIGN ESCAPE ALPHA .

    $default  reduce using rule 39 (var)


State 177

   43 var: CHAR ALPHA ARRAY DIGIT ASSIGN . char_array

    ESCAPE  shift, and go to state 208

    char_array  go to state 209


State 178

  101 rule: OPEN_P rule operator rule . CLOSE_P

    CLOSE_P  shift, and go to state 210


State 179

   25 program: OPEN_P rule operator rule CLOSE_P . CONDITIONAL WHILE EXEC program END_EXEC program
   26        | OPEN_P rule operator rule CLOSE_P . CONDITIONAL IF EXEC program END_EXEC program
   27        | OPEN_P rule operator rule CLOSE_P . CONDITIONAL IF EXEC program END_EXEC ELSE EXEC program END_EXEC program

    CONDITIONAL  shift, and go to state 211


State 180

   29 get: STDIN OPEN_P ALPHA COMMA DIGIT . CLOSE_P END

    CLOSE_P  shift, and go to state 212


State 181

   34 out: ESCAPE ALPHA ESCAPE out .

    $default  reduce using rule 34 (out)


State 182

   31 out: ESCAPE SPACE_ALPHA ESCAPE out .

    $default  reduce using rule 31 (out)


State 183

   13 params: type ALPHA COMMA params .

    $default  reduce using rule 13 (params)


State 184

    3 function: INT FUNCTION ALPHA OPEN_P params CLOSE_P EXEC program . END_EXEC

    END_EXEC  shift, and go to state 213


State 185

    4 function: STRING FUNCTION ALPHA OPEN_P params CLOSE_P EXEC program . END_EXEC

    END_EXEC  shift, and go to state 214


State 186

    5 function: CHAR FUNCTION ALPHA OPEN_P params CLOSE_P EXEC program . END_EXEC

    END_EXEC  shift, and go to state 215


State 187

   68 var: ALPHA ASSIGN CONVERT OPEN_P ALPHA CLOSE_P .

    $default  reduce using rule 68 (var)


State 188

   69 var: ALPHA ASSIGN LENGTH OPEN_P ALPHA CLOSE_P .

    $default  reduce using rule 69 (var)


State 189

   82 operation: op DIGIT operation .

    $default  reduce using rule 82 (operation)


State 190

   83 operation: op ALPHA operation .

    $default  reduce using rule 83 (operation)


State 191

   76 var: ALPHA ARRAY DIGIT ASSIGN ESCAPE DIGIT .

    $default  reduce using rule 76 (var)


State 192

   75 var: ALPHA ARRAY DIGIT ASSIGN ESCAPE ALPHA .

    $default  reduce using rule 75 (var)


State 193

   79 var: ALPHA ARRAY ALPHA ASSIGN ALPHA ARRAY . ALPHA

    ALPHA  shift, and go to state 216


State 194

   81 var: ALPHA ARRAY ALPHA ASSIGN ESCAPE DIGIT .

    $default  reduce using rule 81 (var)


State 195

   80 var: ALPHA ARRAY ALPHA ASSIGN ESCAPE ALPHA .

    $default  reduce using rule 80 (var)


State 196

   46 var: INT ALPHA ASSIGN ALPHA ARRAY DIGIT .

    $default  reduce using rule 46 (var)


State 197

   48 var: INT ALPHA ASSIGN ALPHA ARRAY ALPHA .

    $default  reduce using rule 48 (var)


State 198

   44 var: INT ALPHA ASSIGN CONVERT OPEN_P ALPHA . CLOSE_P

    CLOSE_P  shift, and go to state 217


State 199

   45 var: INT ALPHA ASSIGN LENGTH OPEN_P ALPHA . CLOSE_P

    CLOSE_P  shift, and go to state 218


State 200

   95 digit_array: DIGIT . COMMA digit_array
   96            | DIGIT .

    COMMA  shift, and go to state 219

    $default  reduce using rule 96 (digit_array)


State 201

   41 var: INT ALPHA ARRAY DIGIT ASSIGN digit_array .

    $default  reduce using rule 41 (var)


State 202

   47 var: STRING ALPHA ASSIGN ALPHA ARRAY DIGIT .

    $default  reduce using rule 47 (var)


State 203

   49 var: STRING ALPHA ASSIGN ALPHA ARRAY ALPHA .

    $default  reduce using rule 49 (var)


State 204

   93 alpha_array: STRING_VALUE . COMMA alpha_array
   94            | STRING_VALUE .

    COMMA  shift, and go to state 220

    $default  reduce using rule 94 (alpha_array)


State 205

   42 var: STRING ALPHA ARRAY DIGIT ASSIGN alpha_array .

    $default  reduce using rule 42 (var)


State 206

   51 var: CHAR ALPHA ASSIGN ALPHA ARRAY DIGIT .

    $default  reduce using rule 51 (var)


State 207

   52 var: CHAR ALPHA ASSIGN ALPHA ARRAY ALPHA .

    $default  reduce using rule 52 (var)


State 208

   97 char_array: ESCAPE . ALPHA COMMA char_array
   98           | ESCAPE . ALPHA
   99           | ESCAPE . DIGIT COMMA char_array
  100           | ESCAPE . DIGIT

    DIGIT  shift, and go to state 221
    ALPHA  shift, and go to state 222


State 209

   43 var: CHAR ALPHA ARRAY DIGIT ASSIGN char_array .

    $default  reduce using rule 43 (var)


State 210

  101 rule: OPEN_P rule operator rule CLOSE_P .

    $default  reduce using rule 101 (rule)


State 211

   25 program: OPEN_P rule operator rule CLOSE_P CONDITIONAL . WHILE EXEC program END_EXEC program
   26        | OPEN_P rule operator rule CLOSE_P CONDITIONAL . IF EXEC program END_EXEC program
   27        | OPEN_P rule operator rule CLOSE_P CONDITIONAL . IF EXEC program END_EXEC ELSE EXEC program END_EXEC program

    IF     shift, and go to state 223
    WHILE  shift, and go to state 224


State 212

   29 get: STDIN OPEN_P ALPHA COMMA DIGIT CLOSE_P . END

    END  shift, and go to state 225


State 213

    3 function: INT FUNCTION ALPHA OPEN_P params CLOSE_P EXEC program END_EXEC .

    $default  reduce using rule 3 (function)


State 214

    4 function: STRING FUNCTION ALPHA OPEN_P params CLOSE_P EXEC program END_EXEC .

    $default  reduce using rule 4 (function)


State 215

    5 function: CHAR FUNCTION ALPHA OPEN_P params CLOSE_P EXEC program END_EXEC .

    $default  reduce using rule 5 (function)


State 216

   79 var: ALPHA ARRAY ALPHA ASSIGN ALPHA ARRAY ALPHA .

    $default  reduce using rule 79 (var)


State 217

   44 var: INT ALPHA ASSIGN CONVERT OPEN_P ALPHA CLOSE_P .

    $default  reduce using rule 44 (var)


State 218

   45 var: INT ALPHA ASSIGN LENGTH OPEN_P ALPHA CLOSE_P .

    $default  reduce using rule 45 (var)


State 219

   95 digit_array: DIGIT COMMA . digit_array

    DIGIT  shift, and go to state 200

    digit_array  go to state 226


State 220

   93 alpha_array: STRING_VALUE COMMA . alpha_array

    STRING_VALUE  shift, and go to state 204

    alpha_array  go to state 227


State 221

   99 char_array: ESCAPE DIGIT . COMMA char_array
  100           | ESCAPE DIGIT .

    COMMA  shift, and go to state 228

    $default  reduce using rule 100 (char_array)


State 222

   97 char_array: ESCAPE ALPHA . COMMA char_array
   98           | ESCAPE ALPHA .

    COMMA  shift, and go to state 229

    $default  reduce using rule 98 (char_array)


State 223

   26 program: OPEN_P rule operator rule CLOSE_P CONDITIONAL IF . EXEC program END_EXEC program
   27        | OPEN_P rule operator rule CLOSE_P CONDITIONAL IF . EXEC program END_EXEC ELSE EXEC program END_EXEC program

    EXEC  shift, and go to state 230


State 224

   25 program: OPEN_P rule operator rule CLOSE_P CONDITIONAL WHILE . EXEC program END_EXEC program

    EXEC  shift, and go to state 231


State 225

   29 get: STDIN OPEN_P ALPHA COMMA DIGIT CLOSE_P END .

    $default  reduce using rule 29 (get)


State 226

   95 digit_array: DIGIT COMMA digit_array .

    $default  reduce using rule 95 (digit_array)


State 227

   93 alpha_array: STRING_VALUE COMMA alpha_array .

    $default  reduce using rule 93 (alpha_array)


State 228

   99 char_array: ESCAPE DIGIT COMMA . char_array

    ESCAPE  shift, and go to state 208

    char_array  go to state 232


State 229

   97 char_array: ESCAPE ALPHA COMMA . char_array

    ESCAPE  shift, and go to state 208

    char_array  go to state 233


State 230

   26 program: OPEN_P rule operator rule CLOSE_P CONDITIONAL IF EXEC . program END_EXEC program
   27        | OPEN_P rule operator rule CLOSE_P CONDITIONAL IF EXEC . program END_EXEC ELSE EXEC program END_EXEC program

    ALPHA   shift, and go to state 16
    INT     shift, and go to state 17
    STRING  shift, and go to state 18
    CHAR    shift, and go to state 19
    OPEN_P  shift, and go to state 20
    RETURN  shift, and go to state 21
    STDIN   shift, and go to state 22
    STDOUT  shift, and go to state 23

    $default  reduce using rule 28 (program)

    call     go to state 24
    program  go to state 234
    get      go to state 26
    var      go to state 27


State 231

   25 program: OPEN_P rule operator rule CLOSE_P CONDITIONAL WHILE EXEC . program END_EXEC program

    ALPHA   shift, and go to state 16
    INT     shift, and go to state 17
    STRING  shift, and go to state 18
    CHAR    shift, and go to state 19
    OPEN_P  shift, and go to state 20
    RETURN  shift, and go to state 21
    STDIN   shift, and go to state 22
    STDOUT  shift, and go to state 23

    $default  reduce using rule 28 (program)

    call     go to state 24
    program  go to state 235
    get      go to state 26
    var      go to state 27


State 232

   99 char_array: ESCAPE DIGIT COMMA char_array .

    $default  reduce using rule 99 (char_array)


State 233

   97 char_array: ESCAPE ALPHA COMMA char_array .

    $default  reduce using rule 97 (char_array)


State 234

   26 program: OPEN_P rule operator rule CLOSE_P CONDITIONAL IF EXEC program . END_EXEC program
   27        | OPEN_P rule operator rule CLOSE_P CONDITIONAL IF EXEC program . END_EXEC ELSE EXEC program END_EXEC program

    END_EXEC  shift, and go to state 236


State 235

   25 program: OPEN_P rule operator rule CLOSE_P CONDITIONAL WHILE EXEC program . END_EXEC program

    END_EXEC  shift, and go to state 237


State 236

   26 program: OPEN_P rule operator rule CLOSE_P CONDITIONAL IF EXEC program END_EXEC . program
   27        | OPEN_P rule operator rule CLOSE_P CONDITIONAL IF EXEC program END_EXEC . ELSE EXEC program END_EXEC program

    ALPHA   shift, and go to state 16
    INT     shift, and go to state 17
    STRING  shift, and go to state 18
    CHAR    shift, and go to state 19
    OPEN_P  shift, and go to state 20
    ELSE    shift, and go to state 238
    RETURN  shift, and go to state 21
    STDIN   shift, and go to state 22
    STDOUT  shift, and go to state 23

    $default  reduce using rule 28 (program)

    call     go to state 24
    program  go to state 239
    get      go to state 26
    var      go to state 27


State 237

   25 program: OPEN_P rule operator rule CLOSE_P CONDITIONAL WHILE EXEC program END_EXEC . program

    ALPHA   shift, and go to state 16
    INT     shift, and go to state 17
    STRING  shift, and go to state 18
    CHAR    shift, and go to state 19
    OPEN_P  shift, and go to state 20
    RETURN  shift, and go to state 21
    STDIN   shift, and go to state 22
    STDOUT  shift, and go to state 23

    $default  reduce using rule 28 (program)

    call     go to state 24
    program  go to state 240
    get      go to state 26
    var      go to state 27


State 238

   27 program: OPEN_P rule operator rule CLOSE_P CONDITIONAL IF EXEC program END_EXEC ELSE . EXEC program END_EXEC program

    EXEC  shift, and go to state 241


State 239

   26 program: OPEN_P rule operator rule CLOSE_P CONDITIONAL IF EXEC program END_EXEC program .

    $default  reduce using rule 26 (program)


State 240

   25 program: OPEN_P rule operator rule CLOSE_P CONDITIONAL WHILE EXEC program END_EXEC program .

    $default  reduce using rule 25 (program)


State 241

   27 program: OPEN_P rule operator rule CLOSE_P CONDITIONAL IF EXEC program END_EXEC ELSE EXEC . program END_EXEC program

    ALPHA   shift, and go to state 16
    INT     shift, and go to state 17
    STRING  shift, and go to state 18
    CHAR    shift, and go to state 19
    OPEN_P  shift, and go to state 20
    RETURN  shift, and go to state 21
    STDIN   shift, and go to state 22
    STDOUT  shift, and go to state 23

    $default  reduce using rule 28 (program)

    call     go to state 24
    program  go to state 242
    get      go to state 26
    var      go to state 27


State 242

   27 program: OPEN_P rule operator rule CLOSE_P CONDITIONAL IF EXEC program END_EXEC ELSE EXEC program . END_EXEC program

    END_EXEC  shift, and go to state 243


State 243

   27 program: OPEN_P rule operator rule CLOSE_P CONDITIONAL IF EXEC program END_EXEC ELSE EXEC program END_EXEC . program

    ALPHA   shift, and go to state 16
    INT     shift, and go to state 17
    STRING  shift, and go to state 18
    CHAR    shift, and go to state 19
    OPEN_P  shift, and go to state 20
    RETURN  shift, and go to state 21
    STDIN   shift, and go to state 22
    STDOUT  shift, and go to state 23

    $default  reduce using rule 28 (program)

    call     go to state 24
    program  go to state 244
    get      go to state 26
    var      go to state 27


State 244

   27 program: OPEN_P rule operator rule CLOSE_P CONDITIONAL IF EXEC program END_EXEC ELSE EXEC program END_EXEC program .

    $default  reduce using rule 27 (program)
