State 78 conflicts: 1 reduce/reduce


Grammar

    0 $accept: start $end

    1 start: MAIN EXEC program END_EXEC
    2      | function start
    3      | constant start

    4 constant: INT_DEFINE ALPHA DIGIT
    5         | CHAR_DEFINE ALPHA ESCAPE ALPHA
    6         | STRING_DEFINE ALPHA STRING_VALUE

    7 function: INT FUNCTION ALPHA OPEN_P params CLOSE_P EXEC program END_EXEC
    8         | STRING FUNCTION ALPHA OPEN_P params CLOSE_P EXEC program END_EXEC
    9         | CHAR FUNCTION ALPHA OPEN_P params CLOSE_P EXEC program END_EXEC
   10         | INT FUNCTION ALPHA OPEN_P params CLOSE_P END
   11         | STRING FUNCTION ALPHA OPEN_P params CLOSE_P END
   12         | CHAR FUNCTION ALPHA OPEN_P params CLOSE_P END

   13 type: INT
   14     | STRING
   15     | CHAR

   16 params: type ALPHA
   17       | type ALPHA COMMA params
   18       | %empty

   19 args: assignment
   20     | assignment COMMA args
   21     | call
   22     | %empty

   23 call: ALPHA OPEN_P args CLOSE_P

   24 program: var END program
   25        | call END program
   26        | RETURN assignment END
   27        | get program
   28        | STDOUT out END program
   29        | OPEN_P rule operator rule CLOSE_P CONDITIONAL WHILE EXEC program END_EXEC program
   30        | OPEN_P rule operator rule CLOSE_P CONDITIONAL IF EXEC program END_EXEC program
   31        | OPEN_P rule operator rule CLOSE_P CONDITIONAL IF EXEC program END_EXEC ELSE EXEC program END_EXEC program
   32        | %empty

   33 get: STDIN OPEN_P ALPHA COMMA DIGIT CLOSE_P END

   34 out: SPACE_ALPHA out
   35    | ESCAPE SPACE_ALPHA ESCAPE out
   36    | %empty
   37    | ALPHA out
   38    | ESCAPE ALPHA ESCAPE out

   39 var: INT ALPHA ASSIGN DIGIT operation
   40    | INT ALPHA ASSIGN ALPHA operation
   41    | STRING ALPHA ASSIGN STRING_VALUE
   42    | STRING ALPHA ASSIGN ALPHA
   43    | CHAR ALPHA ASSIGN ESCAPE ALPHA
   44    | CHAR ALPHA ASSIGN ESCAPE DIGIT
   45    | INT ALPHA ARRAY DIGIT ASSIGN digit_array
   46    | STRING ALPHA ARRAY DIGIT ASSIGN alpha_array
   47    | CHAR ALPHA ARRAY DIGIT ASSIGN char_array
   48    | INT ALPHA ASSIGN CONVERT OPEN_P ALPHA CLOSE_P
   49    | INT ALPHA ASSIGN LENGTH OPEN_P ALPHA CLOSE_P
   50    | INT ALPHA ASSIGN ALPHA ARRAY DIGIT
   51    | STRING ALPHA ASSIGN ALPHA ARRAY DIGIT
   52    | INT ALPHA ASSIGN ALPHA ARRAY ALPHA
   53    | STRING ALPHA ASSIGN ALPHA ARRAY ALPHA
   54    | CHAR ALPHA ASSIGN ALPHA
   55    | CHAR ALPHA ASSIGN ALPHA ARRAY DIGIT
   56    | CHAR ALPHA ASSIGN ALPHA ARRAY ALPHA
   57    | INT ALPHA
   58    | CHAR ALPHA
   59    | STRING ALPHA
   60    | INT ALPHA ARRAY DIGIT
   61    | INT ALPHA ARRAY ALPHA
   62    | STRING ALPHA ARRAY DIGIT
   63    | CHAR ALPHA ARRAY DIGIT
   64    | CHAR ALPHA ARRAY ALPHA
   65    | ALPHA ASSIGN ALPHA
   66    | ALPHA ASSIGN ESCAPE ALPHA
   67    | ALPHA ASSIGN ESCAPE DIGIT
   68    | ALPHA ASSIGN STRING_VALUE
   69    | ALPHA ASSIGN var_init operation
   70    | ALPHA ASSIGN ALPHA ARRAY DIGIT
   71    | ALPHA ASSIGN ALPHA ARRAY ALPHA
   72    | ALPHA ASSIGN CONVERT OPEN_P ALPHA CLOSE_P
   73    | ALPHA ASSIGN LENGTH OPEN_P ALPHA CLOSE_P
   74    | INT ALPHA ASSIGN call
   75    | STRING ALPHA ASSIGN call
   76    | CHAR ALPHA ASSIGN call
   77    | ALPHA ASSIGN call
   78    | ALPHA ARRAY DIGIT ASSIGN DIGIT
   79    | ALPHA ARRAY DIGIT ASSIGN ESCAPE ALPHA
   80    | ALPHA ARRAY DIGIT ASSIGN ESCAPE DIGIT
   81    | ALPHA ARRAY DIGIT ASSIGN STRING_VALUE
   82    | ALPHA ARRAY ALPHA ASSIGN ALPHA
   83    | ALPHA ARRAY ALPHA ASSIGN ALPHA ARRAY ALPHA
   84    | ALPHA ARRAY ALPHA ASSIGN ESCAPE ALPHA
   85    | ALPHA ARRAY ALPHA ASSIGN ESCAPE DIGIT

   86 operation: op DIGIT operation
   87          | op ALPHA operation
   88          | %empty

   89 assignment: ALPHA
   90           | DIGIT
   91           | STRING_VALUE
   92           | ESCAPE ALPHA
   93           | ALPHA ARRAY DIGIT
   94           | ALPHA ARRAY ALPHA

   95 var_init: ALPHA
   96         | DIGIT

   97 alpha_array: STRING_VALUE COMMA alpha_array
   98            | STRING_VALUE

   99 digit_array: DIGIT COMMA digit_array
  100            | DIGIT

  101 char_array: ESCAPE ALPHA COMMA char_array
  102           | ESCAPE ALPHA
  103           | ESCAPE DIGIT COMMA char_array
  104           | ESCAPE DIGIT

  105 rule: OPEN_P rule operator rule CLOSE_P
  106     | assignment

  107 operator: op
  108         | L
  109         | G
  110         | LE
  111         | GE
  112         | EQ
  113         | NE
  114         | OR
  115         | AND

  116 op: PLUS
  117   | MINUS
  118   | DIV
  119   | TIMES
  120   | MOD


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    DIGIT <stringValue> (258) 4 33 39 44 45 46 47 50 51 55 60 62 63 67 70 78 79 80 81 85 86 90 93 96 99 100 103 104
    ALPHA <stringValue> (259) 4 5 6 7 8 9 10 11 12 16 17 23 33 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 87 89 92 93 94 95 101 102
    SPACE_ALPHA <stringValue> (260) 34 35
    STRING_VALUE <stringValue> (261) 6 41 68 81 91 97 98
    INT <stringValue> (262) 7 10 13 39 40 45 48 49 50 52 57 60 61 74
    STRING <stringValue> (263) 8 11 14 41 42 46 51 53 59 62 75
    CHAR <stringValue> (264) 9 12 15 43 44 47 54 55 56 58 63 64 76
    PLUS <stringValue> (265) 116
    MINUS <stringValue> (266) 117
    TIMES <stringValue> (267) 119
    DIV <stringValue> (268) 118
    MOD <stringValue> (269) 120
    END (270) 10 11 12 24 25 26 28 33
    OPEN_P (271) 7 8 9 10 11 12 23 29 30 31 33 48 49 72 73 105
    CLOSE_P (272) 7 8 9 10 11 12 23 29 30 31 33 48 49 72 73 105
    CONDITIONAL (273) 29 30 31
    EXEC (274) 1 7 8 9 29 30 31
    END_EXEC (275) 1 7 8 9 29 30 31
    IF (276) 30 31
    ELSE (277) 31
    ESCAPE (278) 5 35 38 43 44 66 67 79 80 84 85 92 101 102 103 104
    WHILE (279) 29
    L (280) 108
    G (281) 109
    LE (282) 110
    GE (283) 111
    EQ (284) 112
    NE (285) 113
    OR (286) 114
    AND (287) 115
    ASSIGN (288) 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85
    RETURN (289) 26
    MAIN (290) 1
    STDIN (291) 33
    STDOUT (292) 28
    CONVERT (293) 48 72
    LENGTH (294) 49 73
    FUNCTION (295) 7 8 9 10 11 12
    COMMA (296) 17 20 33 97 99 101 103
    ARRAY (297) 45 46 47 50 51 52 53 55 56 60 61 62 63 64 70 71 78 79 80 81 82 83 84 85 93 94
    INT_DEFINE (298) 4
    STRING_DEFINE (299) 6
    CHAR_DEFINE (300) 5


Nonterminals, with rules where they appear

    $accept (46)
        on left: 0
    start <stringValue> (47)
        on left: 1 2 3
        on right: 0 2 3
    constant <stringValue> (48)
        on left: 4 5 6
        on right: 3
    function <stringValue> (49)
        on left: 7 8 9 10 11 12
        on right: 2
    type <stringValue> (50)
        on left: 13 14 15
        on right: 16 17
    params <stringValue> (51)
        on left: 16 17 18
        on right: 7 8 9 10 11 12 17
    args <stringValue> (52)
        on left: 19 20 21 22
        on right: 20 23
    call <stringValue> (53)
        on left: 23
        on right: 21 25 74 75 76 77
    program <stringValue> (54)
        on left: 24 25 26 27 28 29 30 31 32
        on right: 1 7 8 9 24 25 27 28 29 30 31
    get <stringValue> (55)
        on left: 33
        on right: 27
    out <stringValue> (56)
        on left: 34 35 36 37 38
        on right: 28 34 35 37 38
    var <stringValue> (57)
        on left: 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85
        on right: 24
    operation <stringValue> (58)
        on left: 86 87 88
        on right: 39 40 69 86 87
    assignment <stringValue> (59)
        on left: 89 90 91 92 93 94
        on right: 19 20 26 106
    var_init <stringValue> (60)
        on left: 95 96
        on right: 69
    alpha_array <stringValue> (61)
        on left: 97 98
        on right: 46 97
    digit_array <stringValue> (62)
        on left: 99 100
        on right: 45 99
    char_array <stringValue> (63)
        on left: 101 102 103 104
        on right: 47 101 103
    rule <stringValue> (64)
        on left: 105 106
        on right: 29 30 31 105
    operator <stringValue> (65)
        on left: 107 108 109 110 111 112 113 114 115
        on right: 29 30 31 105
    op <stringValue> (66)
        on left: 116 117 118 119 120
        on right: 86 87 107


State 0

    0 $accept: . start $end

    INT            shift, and go to state 1
    STRING         shift, and go to state 2
    CHAR           shift, and go to state 3
    MAIN           shift, and go to state 4
    INT_DEFINE     shift, and go to state 5
    STRING_DEFINE  shift, and go to state 6
    CHAR_DEFINE    shift, and go to state 7

    start     go to state 8
    constant  go to state 9
    function  go to state 10


State 1

    7 function: INT . FUNCTION ALPHA OPEN_P params CLOSE_P EXEC program END_EXEC
   10         | INT . FUNCTION ALPHA OPEN_P params CLOSE_P END

    FUNCTION  shift, and go to state 11


State 2

    8 function: STRING . FUNCTION ALPHA OPEN_P params CLOSE_P EXEC program END_EXEC
   11         | STRING . FUNCTION ALPHA OPEN_P params CLOSE_P END

    FUNCTION  shift, and go to state 12


State 3

    9 function: CHAR . FUNCTION ALPHA OPEN_P params CLOSE_P EXEC program END_EXEC
   12         | CHAR . FUNCTION ALPHA OPEN_P params CLOSE_P END

    FUNCTION  shift, and go to state 13


State 4

    1 start: MAIN . EXEC program END_EXEC

    EXEC  shift, and go to state 14


State 5

    4 constant: INT_DEFINE . ALPHA DIGIT

    ALPHA  shift, and go to state 15


State 6

    6 constant: STRING_DEFINE . ALPHA STRING_VALUE

    ALPHA  shift, and go to state 16


State 7

    5 constant: CHAR_DEFINE . ALPHA ESCAPE ALPHA

    ALPHA  shift, and go to state 17


State 8

    0 $accept: start . $end

    $end  shift, and go to state 18


State 9

    3 start: constant . start

    INT            shift, and go to state 1
    STRING         shift, and go to state 2
    CHAR           shift, and go to state 3
    MAIN           shift, and go to state 4
    INT_DEFINE     shift, and go to state 5
    STRING_DEFINE  shift, and go to state 6
    CHAR_DEFINE    shift, and go to state 7

    start     go to state 19
    constant  go to state 9
    function  go to state 10


State 10

    2 start: function . start

    INT            shift, and go to state 1
    STRING         shift, and go to state 2
    CHAR           shift, and go to state 3
    MAIN           shift, and go to state 4
    INT_DEFINE     shift, and go to state 5
    STRING_DEFINE  shift, and go to state 6
    CHAR_DEFINE    shift, and go to state 7

    start     go to state 20
    constant  go to state 9
    function  go to state 10


State 11

    7 function: INT FUNCTION . ALPHA OPEN_P params CLOSE_P EXEC program END_EXEC
   10         | INT FUNCTION . ALPHA OPEN_P params CLOSE_P END

    ALPHA  shift, and go to state 21


State 12

    8 function: STRING FUNCTION . ALPHA OPEN_P params CLOSE_P EXEC program END_EXEC
   11         | STRING FUNCTION . ALPHA OPEN_P params CLOSE_P END

    ALPHA  shift, and go to state 22


State 13

    9 function: CHAR FUNCTION . ALPHA OPEN_P params CLOSE_P EXEC program END_EXEC
   12         | CHAR FUNCTION . ALPHA OPEN_P params CLOSE_P END

    ALPHA  shift, and go to state 23


State 14

    1 start: MAIN EXEC . program END_EXEC

    ALPHA   shift, and go to state 24
    INT     shift, and go to state 25
    STRING  shift, and go to state 26
    CHAR    shift, and go to state 27
    OPEN_P  shift, and go to state 28
    RETURN  shift, and go to state 29
    STDIN   shift, and go to state 30
    STDOUT  shift, and go to state 31

    $default  reduce using rule 32 (program)

    call     go to state 32
    program  go to state 33
    get      go to state 34
    var      go to state 35


State 15

    4 constant: INT_DEFINE ALPHA . DIGIT

    DIGIT  shift, and go to state 36


State 16

    6 constant: STRING_DEFINE ALPHA . STRING_VALUE

    STRING_VALUE  shift, and go to state 37


State 17

    5 constant: CHAR_DEFINE ALPHA . ESCAPE ALPHA

    ESCAPE  shift, and go to state 38


State 18

    0 $accept: start $end .

    $default  accept


State 19

    3 start: constant start .

    $default  reduce using rule 3 (start)


State 20

    2 start: function start .

    $default  reduce using rule 2 (start)


State 21

    7 function: INT FUNCTION ALPHA . OPEN_P params CLOSE_P EXEC program END_EXEC
   10         | INT FUNCTION ALPHA . OPEN_P params CLOSE_P END

    OPEN_P  shift, and go to state 39


State 22

    8 function: STRING FUNCTION ALPHA . OPEN_P params CLOSE_P EXEC program END_EXEC
   11         | STRING FUNCTION ALPHA . OPEN_P params CLOSE_P END

    OPEN_P  shift, and go to state 40


State 23

    9 function: CHAR FUNCTION ALPHA . OPEN_P params CLOSE_P EXEC program END_EXEC
   12         | CHAR FUNCTION ALPHA . OPEN_P params CLOSE_P END

    OPEN_P  shift, and go to state 41


State 24

   23 call: ALPHA . OPEN_P args CLOSE_P
   65 var: ALPHA . ASSIGN ALPHA
   66    | ALPHA . ASSIGN ESCAPE ALPHA
   67    | ALPHA . ASSIGN ESCAPE DIGIT
   68    | ALPHA . ASSIGN STRING_VALUE
   69    | ALPHA . ASSIGN var_init operation
   70    | ALPHA . ASSIGN ALPHA ARRAY DIGIT
   71    | ALPHA . ASSIGN ALPHA ARRAY ALPHA
   72    | ALPHA . ASSIGN CONVERT OPEN_P ALPHA CLOSE_P
   73    | ALPHA . ASSIGN LENGTH OPEN_P ALPHA CLOSE_P
   77    | ALPHA . ASSIGN call
   78    | ALPHA . ARRAY DIGIT ASSIGN DIGIT
   79    | ALPHA . ARRAY DIGIT ASSIGN ESCAPE ALPHA
   80    | ALPHA . ARRAY DIGIT ASSIGN ESCAPE DIGIT
   81    | ALPHA . ARRAY DIGIT ASSIGN STRING_VALUE
   82    | ALPHA . ARRAY ALPHA ASSIGN ALPHA
   83    | ALPHA . ARRAY ALPHA ASSIGN ALPHA ARRAY ALPHA
   84    | ALPHA . ARRAY ALPHA ASSIGN ESCAPE ALPHA
   85    | ALPHA . ARRAY ALPHA ASSIGN ESCAPE DIGIT

    OPEN_P  shift, and go to state 42
    ASSIGN  shift, and go to state 43
    ARRAY   shift, and go to state 44


State 25

   39 var: INT . ALPHA ASSIGN DIGIT operation
   40    | INT . ALPHA ASSIGN ALPHA operation
   45    | INT . ALPHA ARRAY DIGIT ASSIGN digit_array
   48    | INT . ALPHA ASSIGN CONVERT OPEN_P ALPHA CLOSE_P
   49    | INT . ALPHA ASSIGN LENGTH OPEN_P ALPHA CLOSE_P
   50    | INT . ALPHA ASSIGN ALPHA ARRAY DIGIT
   52    | INT . ALPHA ASSIGN ALPHA ARRAY ALPHA
   57    | INT . ALPHA
   60    | INT . ALPHA ARRAY DIGIT
   61    | INT . ALPHA ARRAY ALPHA
   74    | INT . ALPHA ASSIGN call

    ALPHA  shift, and go to state 45


State 26

   41 var: STRING . ALPHA ASSIGN STRING_VALUE
   42    | STRING . ALPHA ASSIGN ALPHA
   46    | STRING . ALPHA ARRAY DIGIT ASSIGN alpha_array
   51    | STRING . ALPHA ASSIGN ALPHA ARRAY DIGIT
   53    | STRING . ALPHA ASSIGN ALPHA ARRAY ALPHA
   59    | STRING . ALPHA
   62    | STRING . ALPHA ARRAY DIGIT
   75    | STRING . ALPHA ASSIGN call

    ALPHA  shift, and go to state 46


State 27

   43 var: CHAR . ALPHA ASSIGN ESCAPE ALPHA
   44    | CHAR . ALPHA ASSIGN ESCAPE DIGIT
   47    | CHAR . ALPHA ARRAY DIGIT ASSIGN char_array
   54    | CHAR . ALPHA ASSIGN ALPHA
   55    | CHAR . ALPHA ASSIGN ALPHA ARRAY DIGIT
   56    | CHAR . ALPHA ASSIGN ALPHA ARRAY ALPHA
   58    | CHAR . ALPHA
   63    | CHAR . ALPHA ARRAY DIGIT
   64    | CHAR . ALPHA ARRAY ALPHA
   76    | CHAR . ALPHA ASSIGN call

    ALPHA  shift, and go to state 47


State 28

   29 program: OPEN_P . rule operator rule CLOSE_P CONDITIONAL WHILE EXEC program END_EXEC program
   30        | OPEN_P . rule operator rule CLOSE_P CONDITIONAL IF EXEC program END_EXEC program
   31        | OPEN_P . rule operator rule CLOSE_P CONDITIONAL IF EXEC program END_EXEC ELSE EXEC program END_EXEC program

    DIGIT         shift, and go to state 48
    ALPHA         shift, and go to state 49
    STRING_VALUE  shift, and go to state 50
    OPEN_P        shift, and go to state 51
    ESCAPE        shift, and go to state 52

    assignment  go to state 53
    rule        go to state 54


State 29

   26 program: RETURN . assignment END

    DIGIT         shift, and go to state 48
    ALPHA         shift, and go to state 49
    STRING_VALUE  shift, and go to state 50
    ESCAPE        shift, and go to state 52

    assignment  go to state 55


State 30

   33 get: STDIN . OPEN_P ALPHA COMMA DIGIT CLOSE_P END

    OPEN_P  shift, and go to state 56


State 31

   28 program: STDOUT . out END program

    ALPHA        shift, and go to state 57
    SPACE_ALPHA  shift, and go to state 58
    ESCAPE       shift, and go to state 59

    $default  reduce using rule 36 (out)

    out  go to state 60


State 32

   25 program: call . END program

    END  shift, and go to state 61


State 33

    1 start: MAIN EXEC program . END_EXEC

    END_EXEC  shift, and go to state 62


State 34

   27 program: get . program

    ALPHA   shift, and go to state 24
    INT     shift, and go to state 25
    STRING  shift, and go to state 26
    CHAR    shift, and go to state 27
    OPEN_P  shift, and go to state 28
    RETURN  shift, and go to state 29
    STDIN   shift, and go to state 30
    STDOUT  shift, and go to state 31

    $default  reduce using rule 32 (program)

    call     go to state 32
    program  go to state 63
    get      go to state 34
    var      go to state 35


State 35

   24 program: var . END program

    END  shift, and go to state 64


State 36

    4 constant: INT_DEFINE ALPHA DIGIT .

    $default  reduce using rule 4 (constant)


State 37

    6 constant: STRING_DEFINE ALPHA STRING_VALUE .

    $default  reduce using rule 6 (constant)


State 38

    5 constant: CHAR_DEFINE ALPHA ESCAPE . ALPHA

    ALPHA  shift, and go to state 65


State 39

    7 function: INT FUNCTION ALPHA OPEN_P . params CLOSE_P EXEC program END_EXEC
   10         | INT FUNCTION ALPHA OPEN_P . params CLOSE_P END

    INT     shift, and go to state 66
    STRING  shift, and go to state 67
    CHAR    shift, and go to state 68

    $default  reduce using rule 18 (params)

    type    go to state 69
    params  go to state 70


State 40

    8 function: STRING FUNCTION ALPHA OPEN_P . params CLOSE_P EXEC program END_EXEC
   11         | STRING FUNCTION ALPHA OPEN_P . params CLOSE_P END

    INT     shift, and go to state 66
    STRING  shift, and go to state 67
    CHAR    shift, and go to state 68

    $default  reduce using rule 18 (params)

    type    go to state 69
    params  go to state 71


State 41

    9 function: CHAR FUNCTION ALPHA OPEN_P . params CLOSE_P EXEC program END_EXEC
   12         | CHAR FUNCTION ALPHA OPEN_P . params CLOSE_P END

    INT     shift, and go to state 66
    STRING  shift, and go to state 67
    CHAR    shift, and go to state 68

    $default  reduce using rule 18 (params)

    type    go to state 69
    params  go to state 72


State 42

   23 call: ALPHA OPEN_P . args CLOSE_P

    DIGIT         shift, and go to state 48
    ALPHA         shift, and go to state 73
    STRING_VALUE  shift, and go to state 50
    ESCAPE        shift, and go to state 52

    $default  reduce using rule 22 (args)

    args        go to state 74
    call        go to state 75
    assignment  go to state 76


State 43

   65 var: ALPHA ASSIGN . ALPHA
   66    | ALPHA ASSIGN . ESCAPE ALPHA
   67    | ALPHA ASSIGN . ESCAPE DIGIT
   68    | ALPHA ASSIGN . STRING_VALUE
   69    | ALPHA ASSIGN . var_init operation
   70    | ALPHA ASSIGN . ALPHA ARRAY DIGIT
   71    | ALPHA ASSIGN . ALPHA ARRAY ALPHA
   72    | ALPHA ASSIGN . CONVERT OPEN_P ALPHA CLOSE_P
   73    | ALPHA ASSIGN . LENGTH OPEN_P ALPHA CLOSE_P
   77    | ALPHA ASSIGN . call

    DIGIT         shift, and go to state 77
    ALPHA         shift, and go to state 78
    STRING_VALUE  shift, and go to state 79
    ESCAPE        shift, and go to state 80
    CONVERT       shift, and go to state 81
    LENGTH        shift, and go to state 82

    call      go to state 83
    var_init  go to state 84


State 44

   78 var: ALPHA ARRAY . DIGIT ASSIGN DIGIT
   79    | ALPHA ARRAY . DIGIT ASSIGN ESCAPE ALPHA
   80    | ALPHA ARRAY . DIGIT ASSIGN ESCAPE DIGIT
   81    | ALPHA ARRAY . DIGIT ASSIGN STRING_VALUE
   82    | ALPHA ARRAY . ALPHA ASSIGN ALPHA
   83    | ALPHA ARRAY . ALPHA ASSIGN ALPHA ARRAY ALPHA
   84    | ALPHA ARRAY . ALPHA ASSIGN ESCAPE ALPHA
   85    | ALPHA ARRAY . ALPHA ASSIGN ESCAPE DIGIT

    DIGIT  shift, and go to state 85
    ALPHA  shift, and go to state 86


State 45

   39 var: INT ALPHA . ASSIGN DIGIT operation
   40    | INT ALPHA . ASSIGN ALPHA operation
   45    | INT ALPHA . ARRAY DIGIT ASSIGN digit_array
   48    | INT ALPHA . ASSIGN CONVERT OPEN_P ALPHA CLOSE_P
   49    | INT ALPHA . ASSIGN LENGTH OPEN_P ALPHA CLOSE_P
   50    | INT ALPHA . ASSIGN ALPHA ARRAY DIGIT
   52    | INT ALPHA . ASSIGN ALPHA ARRAY ALPHA
   57    | INT ALPHA .
   60    | INT ALPHA . ARRAY DIGIT
   61    | INT ALPHA . ARRAY ALPHA
   74    | INT ALPHA . ASSIGN call

    ASSIGN  shift, and go to state 87
    ARRAY   shift, and go to state 88

    $default  reduce using rule 57 (var)


State 46

   41 var: STRING ALPHA . ASSIGN STRING_VALUE
   42    | STRING ALPHA . ASSIGN ALPHA
   46    | STRING ALPHA . ARRAY DIGIT ASSIGN alpha_array
   51    | STRING ALPHA . ASSIGN ALPHA ARRAY DIGIT
   53    | STRING ALPHA . ASSIGN ALPHA ARRAY ALPHA
   59    | STRING ALPHA .
   62    | STRING ALPHA . ARRAY DIGIT
   75    | STRING ALPHA . ASSIGN call

    ASSIGN  shift, and go to state 89
    ARRAY   shift, and go to state 90

    $default  reduce using rule 59 (var)


State 47

   43 var: CHAR ALPHA . ASSIGN ESCAPE ALPHA
   44    | CHAR ALPHA . ASSIGN ESCAPE DIGIT
   47    | CHAR ALPHA . ARRAY DIGIT ASSIGN char_array
   54    | CHAR ALPHA . ASSIGN ALPHA
   55    | CHAR ALPHA . ASSIGN ALPHA ARRAY DIGIT
   56    | CHAR ALPHA . ASSIGN ALPHA ARRAY ALPHA
   58    | CHAR ALPHA .
   63    | CHAR ALPHA . ARRAY DIGIT
   64    | CHAR ALPHA . ARRAY ALPHA
   76    | CHAR ALPHA . ASSIGN call

    ASSIGN  shift, and go to state 91
    ARRAY   shift, and go to state 92

    $default  reduce using rule 58 (var)


State 48

   90 assignment: DIGIT .

    $default  reduce using rule 90 (assignment)


State 49

   89 assignment: ALPHA .
   93           | ALPHA . ARRAY DIGIT
   94           | ALPHA . ARRAY ALPHA

    ARRAY  shift, and go to state 93

    $default  reduce using rule 89 (assignment)


State 50

   91 assignment: STRING_VALUE .

    $default  reduce using rule 91 (assignment)


State 51

  105 rule: OPEN_P . rule operator rule CLOSE_P

    DIGIT         shift, and go to state 48
    ALPHA         shift, and go to state 49
    STRING_VALUE  shift, and go to state 50
    OPEN_P        shift, and go to state 51
    ESCAPE        shift, and go to state 52

    assignment  go to state 53
    rule        go to state 94


State 52

   92 assignment: ESCAPE . ALPHA

    ALPHA  shift, and go to state 95


State 53

  106 rule: assignment .

    $default  reduce using rule 106 (rule)


State 54

   29 program: OPEN_P rule . operator rule CLOSE_P CONDITIONAL WHILE EXEC program END_EXEC program
   30        | OPEN_P rule . operator rule CLOSE_P CONDITIONAL IF EXEC program END_EXEC program
   31        | OPEN_P rule . operator rule CLOSE_P CONDITIONAL IF EXEC program END_EXEC ELSE EXEC program END_EXEC program

    PLUS   shift, and go to state 96
    MINUS  shift, and go to state 97
    TIMES  shift, and go to state 98
    DIV    shift, and go to state 99
    MOD    shift, and go to state 100
    L      shift, and go to state 101
    G      shift, and go to state 102
    LE     shift, and go to state 103
    GE     shift, and go to state 104
    EQ     shift, and go to state 105
    NE     shift, and go to state 106
    OR     shift, and go to state 107
    AND    shift, and go to state 108

    operator  go to state 109
    op        go to state 110


State 55

   26 program: RETURN assignment . END

    END  shift, and go to state 111


State 56

   33 get: STDIN OPEN_P . ALPHA COMMA DIGIT CLOSE_P END

    ALPHA  shift, and go to state 112


State 57

   37 out: ALPHA . out

    ALPHA        shift, and go to state 57
    SPACE_ALPHA  shift, and go to state 58
    ESCAPE       shift, and go to state 59

    $default  reduce using rule 36 (out)

    out  go to state 113


State 58

   34 out: SPACE_ALPHA . out

    ALPHA        shift, and go to state 57
    SPACE_ALPHA  shift, and go to state 58
    ESCAPE       shift, and go to state 59

    $default  reduce using rule 36 (out)

    out  go to state 114


State 59

   35 out: ESCAPE . SPACE_ALPHA ESCAPE out
   38    | ESCAPE . ALPHA ESCAPE out

    ALPHA        shift, and go to state 115
    SPACE_ALPHA  shift, and go to state 116


State 60

   28 program: STDOUT out . END program

    END  shift, and go to state 117


State 61

   25 program: call END . program

    ALPHA   shift, and go to state 24
    INT     shift, and go to state 25
    STRING  shift, and go to state 26
    CHAR    shift, and go to state 27
    OPEN_P  shift, and go to state 28
    RETURN  shift, and go to state 29
    STDIN   shift, and go to state 30
    STDOUT  shift, and go to state 31

    $default  reduce using rule 32 (program)

    call     go to state 32
    program  go to state 118
    get      go to state 34
    var      go to state 35


State 62

    1 start: MAIN EXEC program END_EXEC .

    $default  reduce using rule 1 (start)


State 63

   27 program: get program .

    $default  reduce using rule 27 (program)


State 64

   24 program: var END . program

    ALPHA   shift, and go to state 24
    INT     shift, and go to state 25
    STRING  shift, and go to state 26
    CHAR    shift, and go to state 27
    OPEN_P  shift, and go to state 28
    RETURN  shift, and go to state 29
    STDIN   shift, and go to state 30
    STDOUT  shift, and go to state 31

    $default  reduce using rule 32 (program)

    call     go to state 32
    program  go to state 119
    get      go to state 34
    var      go to state 35


State 65

    5 constant: CHAR_DEFINE ALPHA ESCAPE ALPHA .

    $default  reduce using rule 5 (constant)


State 66

   13 type: INT .

    $default  reduce using rule 13 (type)


State 67

   14 type: STRING .

    $default  reduce using rule 14 (type)


State 68

   15 type: CHAR .

    $default  reduce using rule 15 (type)


State 69

   16 params: type . ALPHA
   17       | type . ALPHA COMMA params

    ALPHA  shift, and go to state 120


State 70

    7 function: INT FUNCTION ALPHA OPEN_P params . CLOSE_P EXEC program END_EXEC
   10         | INT FUNCTION ALPHA OPEN_P params . CLOSE_P END

    CLOSE_P  shift, and go to state 121


State 71

    8 function: STRING FUNCTION ALPHA OPEN_P params . CLOSE_P EXEC program END_EXEC
   11         | STRING FUNCTION ALPHA OPEN_P params . CLOSE_P END

    CLOSE_P  shift, and go to state 122


State 72

    9 function: CHAR FUNCTION ALPHA OPEN_P params . CLOSE_P EXEC program END_EXEC
   12         | CHAR FUNCTION ALPHA OPEN_P params . CLOSE_P END

    CLOSE_P  shift, and go to state 123


State 73

   23 call: ALPHA . OPEN_P args CLOSE_P
   89 assignment: ALPHA .
   93           | ALPHA . ARRAY DIGIT
   94           | ALPHA . ARRAY ALPHA

    OPEN_P  shift, and go to state 42
    ARRAY   shift, and go to state 93

    $default  reduce using rule 89 (assignment)


State 74

   23 call: ALPHA OPEN_P args . CLOSE_P

    CLOSE_P  shift, and go to state 124


State 75

   21 args: call .

    $default  reduce using rule 21 (args)


State 76

   19 args: assignment .
   20     | assignment . COMMA args

    COMMA  shift, and go to state 125

    $default  reduce using rule 19 (args)


State 77

   96 var_init: DIGIT .

    $default  reduce using rule 96 (var_init)


State 78

   23 call: ALPHA . OPEN_P args CLOSE_P
   65 var: ALPHA ASSIGN ALPHA .
   70    | ALPHA ASSIGN ALPHA . ARRAY DIGIT
   71    | ALPHA ASSIGN ALPHA . ARRAY ALPHA
   95 var_init: ALPHA .

    OPEN_P  shift, and go to state 42
    ARRAY   shift, and go to state 126

    END       reduce using rule 65 (var)
    END       [reduce using rule 95 (var_init)]
    $default  reduce using rule 95 (var_init)


State 79

   68 var: ALPHA ASSIGN STRING_VALUE .

    $default  reduce using rule 68 (var)


State 80

   66 var: ALPHA ASSIGN ESCAPE . ALPHA
   67    | ALPHA ASSIGN ESCAPE . DIGIT

    DIGIT  shift, and go to state 127
    ALPHA  shift, and go to state 128


State 81

   72 var: ALPHA ASSIGN CONVERT . OPEN_P ALPHA CLOSE_P

    OPEN_P  shift, and go to state 129


State 82

   73 var: ALPHA ASSIGN LENGTH . OPEN_P ALPHA CLOSE_P

    OPEN_P  shift, and go to state 130


State 83

   77 var: ALPHA ASSIGN call .

    $default  reduce using rule 77 (var)


State 84

   69 var: ALPHA ASSIGN var_init . operation

    PLUS   shift, and go to state 96
    MINUS  shift, and go to state 97
    TIMES  shift, and go to state 98
    DIV    shift, and go to state 99
    MOD    shift, and go to state 100

    $default  reduce using rule 88 (operation)

    operation  go to state 131
    op         go to state 132


State 85

   78 var: ALPHA ARRAY DIGIT . ASSIGN DIGIT
   79    | ALPHA ARRAY DIGIT . ASSIGN ESCAPE ALPHA
   80    | ALPHA ARRAY DIGIT . ASSIGN ESCAPE DIGIT
   81    | ALPHA ARRAY DIGIT . ASSIGN STRING_VALUE

    ASSIGN  shift, and go to state 133


State 86

   82 var: ALPHA ARRAY ALPHA . ASSIGN ALPHA
   83    | ALPHA ARRAY ALPHA . ASSIGN ALPHA ARRAY ALPHA
   84    | ALPHA ARRAY ALPHA . ASSIGN ESCAPE ALPHA
   85    | ALPHA ARRAY ALPHA . ASSIGN ESCAPE DIGIT

    ASSIGN  shift, and go to state 134


State 87

   39 var: INT ALPHA ASSIGN . DIGIT operation
   40    | INT ALPHA ASSIGN . ALPHA operation
   48    | INT ALPHA ASSIGN . CONVERT OPEN_P ALPHA CLOSE_P
   49    | INT ALPHA ASSIGN . LENGTH OPEN_P ALPHA CLOSE_P
   50    | INT ALPHA ASSIGN . ALPHA ARRAY DIGIT
   52    | INT ALPHA ASSIGN . ALPHA ARRAY ALPHA
   74    | INT ALPHA ASSIGN . call

    DIGIT    shift, and go to state 135
    ALPHA    shift, and go to state 136
    CONVERT  shift, and go to state 137
    LENGTH   shift, and go to state 138

    call  go to state 139


State 88

   45 var: INT ALPHA ARRAY . DIGIT ASSIGN digit_array
   60    | INT ALPHA ARRAY . DIGIT
   61    | INT ALPHA ARRAY . ALPHA

    DIGIT  shift, and go to state 140
    ALPHA  shift, and go to state 141


State 89

   41 var: STRING ALPHA ASSIGN . STRING_VALUE
   42    | STRING ALPHA ASSIGN . ALPHA
   51    | STRING ALPHA ASSIGN . ALPHA ARRAY DIGIT
   53    | STRING ALPHA ASSIGN . ALPHA ARRAY ALPHA
   75    | STRING ALPHA ASSIGN . call

    ALPHA         shift, and go to state 142
    STRING_VALUE  shift, and go to state 143

    call  go to state 144


State 90

   46 var: STRING ALPHA ARRAY . DIGIT ASSIGN alpha_array
   62    | STRING ALPHA ARRAY . DIGIT

    DIGIT  shift, and go to state 145


State 91

   43 var: CHAR ALPHA ASSIGN . ESCAPE ALPHA
   44    | CHAR ALPHA ASSIGN . ESCAPE DIGIT
   54    | CHAR ALPHA ASSIGN . ALPHA
   55    | CHAR ALPHA ASSIGN . ALPHA ARRAY DIGIT
   56    | CHAR ALPHA ASSIGN . ALPHA ARRAY ALPHA
   76    | CHAR ALPHA ASSIGN . call

    ALPHA   shift, and go to state 146
    ESCAPE  shift, and go to state 147

    call  go to state 148


State 92

   47 var: CHAR ALPHA ARRAY . DIGIT ASSIGN char_array
   63    | CHAR ALPHA ARRAY . DIGIT
   64    | CHAR ALPHA ARRAY . ALPHA

    DIGIT  shift, and go to state 149
    ALPHA  shift, and go to state 150


State 93

   93 assignment: ALPHA ARRAY . DIGIT
   94           | ALPHA ARRAY . ALPHA

    DIGIT  shift, and go to state 151
    ALPHA  shift, and go to state 152


State 94

  105 rule: OPEN_P rule . operator rule CLOSE_P

    PLUS   shift, and go to state 96
    MINUS  shift, and go to state 97
    TIMES  shift, and go to state 98
    DIV    shift, and go to state 99
    MOD    shift, and go to state 100
    L      shift, and go to state 101
    G      shift, and go to state 102
    LE     shift, and go to state 103
    GE     shift, and go to state 104
    EQ     shift, and go to state 105
    NE     shift, and go to state 106
    OR     shift, and go to state 107
    AND    shift, and go to state 108

    operator  go to state 153
    op        go to state 110


State 95

   92 assignment: ESCAPE ALPHA .

    $default  reduce using rule 92 (assignment)


State 96

  116 op: PLUS .

    $default  reduce using rule 116 (op)


State 97

  117 op: MINUS .

    $default  reduce using rule 117 (op)


State 98

  119 op: TIMES .

    $default  reduce using rule 119 (op)


State 99

  118 op: DIV .

    $default  reduce using rule 118 (op)


State 100

  120 op: MOD .

    $default  reduce using rule 120 (op)


State 101

  108 operator: L .

    $default  reduce using rule 108 (operator)


State 102

  109 operator: G .

    $default  reduce using rule 109 (operator)


State 103

  110 operator: LE .

    $default  reduce using rule 110 (operator)


State 104

  111 operator: GE .

    $default  reduce using rule 111 (operator)


State 105

  112 operator: EQ .

    $default  reduce using rule 112 (operator)


State 106

  113 operator: NE .

    $default  reduce using rule 113 (operator)


State 107

  114 operator: OR .

    $default  reduce using rule 114 (operator)


State 108

  115 operator: AND .

    $default  reduce using rule 115 (operator)


State 109

   29 program: OPEN_P rule operator . rule CLOSE_P CONDITIONAL WHILE EXEC program END_EXEC program
   30        | OPEN_P rule operator . rule CLOSE_P CONDITIONAL IF EXEC program END_EXEC program
   31        | OPEN_P rule operator . rule CLOSE_P CONDITIONAL IF EXEC program END_EXEC ELSE EXEC program END_EXEC program

    DIGIT         shift, and go to state 48
    ALPHA         shift, and go to state 49
    STRING_VALUE  shift, and go to state 50
    OPEN_P        shift, and go to state 51
    ESCAPE        shift, and go to state 52

    assignment  go to state 53
    rule        go to state 154


State 110

  107 operator: op .

    $default  reduce using rule 107 (operator)


State 111

   26 program: RETURN assignment END .

    $default  reduce using rule 26 (program)


State 112

   33 get: STDIN OPEN_P ALPHA . COMMA DIGIT CLOSE_P END

    COMMA  shift, and go to state 155


State 113

   37 out: ALPHA out .

    $default  reduce using rule 37 (out)


State 114

   34 out: SPACE_ALPHA out .

    $default  reduce using rule 34 (out)


State 115

   38 out: ESCAPE ALPHA . ESCAPE out

    ESCAPE  shift, and go to state 156


State 116

   35 out: ESCAPE SPACE_ALPHA . ESCAPE out

    ESCAPE  shift, and go to state 157


State 117

   28 program: STDOUT out END . program

    ALPHA   shift, and go to state 24
    INT     shift, and go to state 25
    STRING  shift, and go to state 26
    CHAR    shift, and go to state 27
    OPEN_P  shift, and go to state 28
    RETURN  shift, and go to state 29
    STDIN   shift, and go to state 30
    STDOUT  shift, and go to state 31

    $default  reduce using rule 32 (program)

    call     go to state 32
    program  go to state 158
    get      go to state 34
    var      go to state 35


State 118

   25 program: call END program .

    $default  reduce using rule 25 (program)


State 119

   24 program: var END program .

    $default  reduce using rule 24 (program)


State 120

   16 params: type ALPHA .
   17       | type ALPHA . COMMA params

    COMMA  shift, and go to state 159

    $default  reduce using rule 16 (params)


State 121

    7 function: INT FUNCTION ALPHA OPEN_P params CLOSE_P . EXEC program END_EXEC
   10         | INT FUNCTION ALPHA OPEN_P params CLOSE_P . END

    END   shift, and go to state 160
    EXEC  shift, and go to state 161


State 122

    8 function: STRING FUNCTION ALPHA OPEN_P params CLOSE_P . EXEC program END_EXEC
   11         | STRING FUNCTION ALPHA OPEN_P params CLOSE_P . END

    END   shift, and go to state 162
    EXEC  shift, and go to state 163


State 123

    9 function: CHAR FUNCTION ALPHA OPEN_P params CLOSE_P . EXEC program END_EXEC
   12         | CHAR FUNCTION ALPHA OPEN_P params CLOSE_P . END

    END   shift, and go to state 164
    EXEC  shift, and go to state 165


State 124

   23 call: ALPHA OPEN_P args CLOSE_P .

    $default  reduce using rule 23 (call)


State 125

   20 args: assignment COMMA . args

    DIGIT         shift, and go to state 48
    ALPHA         shift, and go to state 73
    STRING_VALUE  shift, and go to state 50
    ESCAPE        shift, and go to state 52

    $default  reduce using rule 22 (args)

    args        go to state 166
    call        go to state 75
    assignment  go to state 76


State 126

   70 var: ALPHA ASSIGN ALPHA ARRAY . DIGIT
   71    | ALPHA ASSIGN ALPHA ARRAY . ALPHA

    DIGIT  shift, and go to state 167
    ALPHA  shift, and go to state 168


State 127

   67 var: ALPHA ASSIGN ESCAPE DIGIT .

    $default  reduce using rule 67 (var)


State 128

   66 var: ALPHA ASSIGN ESCAPE ALPHA .

    $default  reduce using rule 66 (var)


State 129

   72 var: ALPHA ASSIGN CONVERT OPEN_P . ALPHA CLOSE_P

    ALPHA  shift, and go to state 169


State 130

   73 var: ALPHA ASSIGN LENGTH OPEN_P . ALPHA CLOSE_P

    ALPHA  shift, and go to state 170


State 131

   69 var: ALPHA ASSIGN var_init operation .

    $default  reduce using rule 69 (var)


State 132

   86 operation: op . DIGIT operation
   87          | op . ALPHA operation

    DIGIT  shift, and go to state 171
    ALPHA  shift, and go to state 172


State 133

   78 var: ALPHA ARRAY DIGIT ASSIGN . DIGIT
   79    | ALPHA ARRAY DIGIT ASSIGN . ESCAPE ALPHA
   80    | ALPHA ARRAY DIGIT ASSIGN . ESCAPE DIGIT
   81    | ALPHA ARRAY DIGIT ASSIGN . STRING_VALUE

    DIGIT         shift, and go to state 173
    STRING_VALUE  shift, and go to state 174
    ESCAPE        shift, and go to state 175


State 134

   82 var: ALPHA ARRAY ALPHA ASSIGN . ALPHA
   83    | ALPHA ARRAY ALPHA ASSIGN . ALPHA ARRAY ALPHA
   84    | ALPHA ARRAY ALPHA ASSIGN . ESCAPE ALPHA
   85    | ALPHA ARRAY ALPHA ASSIGN . ESCAPE DIGIT

    ALPHA   shift, and go to state 176
    ESCAPE  shift, and go to state 177


State 135

   39 var: INT ALPHA ASSIGN DIGIT . operation

    PLUS   shift, and go to state 96
    MINUS  shift, and go to state 97
    TIMES  shift, and go to state 98
    DIV    shift, and go to state 99
    MOD    shift, and go to state 100

    $default  reduce using rule 88 (operation)

    operation  go to state 178
    op         go to state 132


State 136

   23 call: ALPHA . OPEN_P args CLOSE_P
   40 var: INT ALPHA ASSIGN ALPHA . operation
   50    | INT ALPHA ASSIGN ALPHA . ARRAY DIGIT
   52    | INT ALPHA ASSIGN ALPHA . ARRAY ALPHA

    PLUS    shift, and go to state 96
    MINUS   shift, and go to state 97
    TIMES   shift, and go to state 98
    DIV     shift, and go to state 99
    MOD     shift, and go to state 100
    OPEN_P  shift, and go to state 42
    ARRAY   shift, and go to state 179

    $default  reduce using rule 88 (operation)

    operation  go to state 180
    op         go to state 132


State 137

   48 var: INT ALPHA ASSIGN CONVERT . OPEN_P ALPHA CLOSE_P

    OPEN_P  shift, and go to state 181


State 138

   49 var: INT ALPHA ASSIGN LENGTH . OPEN_P ALPHA CLOSE_P

    OPEN_P  shift, and go to state 182


State 139

   74 var: INT ALPHA ASSIGN call .

    $default  reduce using rule 74 (var)


State 140

   45 var: INT ALPHA ARRAY DIGIT . ASSIGN digit_array
   60    | INT ALPHA ARRAY DIGIT .

    ASSIGN  shift, and go to state 183

    $default  reduce using rule 60 (var)


State 141

   61 var: INT ALPHA ARRAY ALPHA .

    $default  reduce using rule 61 (var)


State 142

   23 call: ALPHA . OPEN_P args CLOSE_P
   42 var: STRING ALPHA ASSIGN ALPHA .
   51    | STRING ALPHA ASSIGN ALPHA . ARRAY DIGIT
   53    | STRING ALPHA ASSIGN ALPHA . ARRAY ALPHA

    OPEN_P  shift, and go to state 42
    ARRAY   shift, and go to state 184

    $default  reduce using rule 42 (var)


State 143

   41 var: STRING ALPHA ASSIGN STRING_VALUE .

    $default  reduce using rule 41 (var)


State 144

   75 var: STRING ALPHA ASSIGN call .

    $default  reduce using rule 75 (var)


State 145

   46 var: STRING ALPHA ARRAY DIGIT . ASSIGN alpha_array
   62    | STRING ALPHA ARRAY DIGIT .

    ASSIGN  shift, and go to state 185

    $default  reduce using rule 62 (var)


State 146

   23 call: ALPHA . OPEN_P args CLOSE_P
   54 var: CHAR ALPHA ASSIGN ALPHA .
   55    | CHAR ALPHA ASSIGN ALPHA . ARRAY DIGIT
   56    | CHAR ALPHA ASSIGN ALPHA . ARRAY ALPHA

    OPEN_P  shift, and go to state 42
    ARRAY   shift, and go to state 186

    $default  reduce using rule 54 (var)


State 147

   43 var: CHAR ALPHA ASSIGN ESCAPE . ALPHA
   44    | CHAR ALPHA ASSIGN ESCAPE . DIGIT

    DIGIT  shift, and go to state 187
    ALPHA  shift, and go to state 188


State 148

   76 var: CHAR ALPHA ASSIGN call .

    $default  reduce using rule 76 (var)


State 149

   47 var: CHAR ALPHA ARRAY DIGIT . ASSIGN char_array
   63    | CHAR ALPHA ARRAY DIGIT .

    ASSIGN  shift, and go to state 189

    $default  reduce using rule 63 (var)


State 150

   64 var: CHAR ALPHA ARRAY ALPHA .

    $default  reduce using rule 64 (var)


State 151

   93 assignment: ALPHA ARRAY DIGIT .

    $default  reduce using rule 93 (assignment)


State 152

   94 assignment: ALPHA ARRAY ALPHA .

    $default  reduce using rule 94 (assignment)


State 153

  105 rule: OPEN_P rule operator . rule CLOSE_P

    DIGIT         shift, and go to state 48
    ALPHA         shift, and go to state 49
    STRING_VALUE  shift, and go to state 50
    OPEN_P        shift, and go to state 51
    ESCAPE        shift, and go to state 52

    assignment  go to state 53
    rule        go to state 190


State 154

   29 program: OPEN_P rule operator rule . CLOSE_P CONDITIONAL WHILE EXEC program END_EXEC program
   30        | OPEN_P rule operator rule . CLOSE_P CONDITIONAL IF EXEC program END_EXEC program
   31        | OPEN_P rule operator rule . CLOSE_P CONDITIONAL IF EXEC program END_EXEC ELSE EXEC program END_EXEC program

    CLOSE_P  shift, and go to state 191


State 155

   33 get: STDIN OPEN_P ALPHA COMMA . DIGIT CLOSE_P END

    DIGIT  shift, and go to state 192


State 156

   38 out: ESCAPE ALPHA ESCAPE . out

    ALPHA        shift, and go to state 57
    SPACE_ALPHA  shift, and go to state 58
    ESCAPE       shift, and go to state 59

    $default  reduce using rule 36 (out)

    out  go to state 193


State 157

   35 out: ESCAPE SPACE_ALPHA ESCAPE . out

    ALPHA        shift, and go to state 57
    SPACE_ALPHA  shift, and go to state 58
    ESCAPE       shift, and go to state 59

    $default  reduce using rule 36 (out)

    out  go to state 194


State 158

   28 program: STDOUT out END program .

    $default  reduce using rule 28 (program)


State 159

   17 params: type ALPHA COMMA . params

    INT     shift, and go to state 66
    STRING  shift, and go to state 67
    CHAR    shift, and go to state 68

    $default  reduce using rule 18 (params)

    type    go to state 69
    params  go to state 195


State 160

   10 function: INT FUNCTION ALPHA OPEN_P params CLOSE_P END .

    $default  reduce using rule 10 (function)


State 161

    7 function: INT FUNCTION ALPHA OPEN_P params CLOSE_P EXEC . program END_EXEC

    ALPHA   shift, and go to state 24
    INT     shift, and go to state 25
    STRING  shift, and go to state 26
    CHAR    shift, and go to state 27
    OPEN_P  shift, and go to state 28
    RETURN  shift, and go to state 29
    STDIN   shift, and go to state 30
    STDOUT  shift, and go to state 31

    $default  reduce using rule 32 (program)

    call     go to state 32
    program  go to state 196
    get      go to state 34
    var      go to state 35


State 162

   11 function: STRING FUNCTION ALPHA OPEN_P params CLOSE_P END .

    $default  reduce using rule 11 (function)


State 163

    8 function: STRING FUNCTION ALPHA OPEN_P params CLOSE_P EXEC . program END_EXEC

    ALPHA   shift, and go to state 24
    INT     shift, and go to state 25
    STRING  shift, and go to state 26
    CHAR    shift, and go to state 27
    OPEN_P  shift, and go to state 28
    RETURN  shift, and go to state 29
    STDIN   shift, and go to state 30
    STDOUT  shift, and go to state 31

    $default  reduce using rule 32 (program)

    call     go to state 32
    program  go to state 197
    get      go to state 34
    var      go to state 35


State 164

   12 function: CHAR FUNCTION ALPHA OPEN_P params CLOSE_P END .

    $default  reduce using rule 12 (function)


State 165

    9 function: CHAR FUNCTION ALPHA OPEN_P params CLOSE_P EXEC . program END_EXEC

    ALPHA   shift, and go to state 24
    INT     shift, and go to state 25
    STRING  shift, and go to state 26
    CHAR    shift, and go to state 27
    OPEN_P  shift, and go to state 28
    RETURN  shift, and go to state 29
    STDIN   shift, and go to state 30
    STDOUT  shift, and go to state 31

    $default  reduce using rule 32 (program)

    call     go to state 32
    program  go to state 198
    get      go to state 34
    var      go to state 35


State 166

   20 args: assignment COMMA args .

    $default  reduce using rule 20 (args)


State 167

   70 var: ALPHA ASSIGN ALPHA ARRAY DIGIT .

    $default  reduce using rule 70 (var)


State 168

   71 var: ALPHA ASSIGN ALPHA ARRAY ALPHA .

    $default  reduce using rule 71 (var)


State 169

   72 var: ALPHA ASSIGN CONVERT OPEN_P ALPHA . CLOSE_P

    CLOSE_P  shift, and go to state 199


State 170

   73 var: ALPHA ASSIGN LENGTH OPEN_P ALPHA . CLOSE_P

    CLOSE_P  shift, and go to state 200


State 171

   86 operation: op DIGIT . operation

    PLUS   shift, and go to state 96
    MINUS  shift, and go to state 97
    TIMES  shift, and go to state 98
    DIV    shift, and go to state 99
    MOD    shift, and go to state 100

    $default  reduce using rule 88 (operation)

    operation  go to state 201
    op         go to state 132


State 172

   87 operation: op ALPHA . operation

    PLUS   shift, and go to state 96
    MINUS  shift, and go to state 97
    TIMES  shift, and go to state 98
    DIV    shift, and go to state 99
    MOD    shift, and go to state 100

    $default  reduce using rule 88 (operation)

    operation  go to state 202
    op         go to state 132


State 173

   78 var: ALPHA ARRAY DIGIT ASSIGN DIGIT .

    $default  reduce using rule 78 (var)


State 174

   81 var: ALPHA ARRAY DIGIT ASSIGN STRING_VALUE .

    $default  reduce using rule 81 (var)


State 175

   79 var: ALPHA ARRAY DIGIT ASSIGN ESCAPE . ALPHA
   80    | ALPHA ARRAY DIGIT ASSIGN ESCAPE . DIGIT

    DIGIT  shift, and go to state 203
    ALPHA  shift, and go to state 204


State 176

   82 var: ALPHA ARRAY ALPHA ASSIGN ALPHA .
   83    | ALPHA ARRAY ALPHA ASSIGN ALPHA . ARRAY ALPHA

    ARRAY  shift, and go to state 205

    $default  reduce using rule 82 (var)


State 177

   84 var: ALPHA ARRAY ALPHA ASSIGN ESCAPE . ALPHA
   85    | ALPHA ARRAY ALPHA ASSIGN ESCAPE . DIGIT

    DIGIT  shift, and go to state 206
    ALPHA  shift, and go to state 207


State 178

   39 var: INT ALPHA ASSIGN DIGIT operation .

    $default  reduce using rule 39 (var)


State 179

   50 var: INT ALPHA ASSIGN ALPHA ARRAY . DIGIT
   52    | INT ALPHA ASSIGN ALPHA ARRAY . ALPHA

    DIGIT  shift, and go to state 208
    ALPHA  shift, and go to state 209


State 180

   40 var: INT ALPHA ASSIGN ALPHA operation .

    $default  reduce using rule 40 (var)


State 181

   48 var: INT ALPHA ASSIGN CONVERT OPEN_P . ALPHA CLOSE_P

    ALPHA  shift, and go to state 210


State 182

   49 var: INT ALPHA ASSIGN LENGTH OPEN_P . ALPHA CLOSE_P

    ALPHA  shift, and go to state 211


State 183

   45 var: INT ALPHA ARRAY DIGIT ASSIGN . digit_array

    DIGIT  shift, and go to state 212

    digit_array  go to state 213


State 184

   51 var: STRING ALPHA ASSIGN ALPHA ARRAY . DIGIT
   53    | STRING ALPHA ASSIGN ALPHA ARRAY . ALPHA

    DIGIT  shift, and go to state 214
    ALPHA  shift, and go to state 215


State 185

   46 var: STRING ALPHA ARRAY DIGIT ASSIGN . alpha_array

    STRING_VALUE  shift, and go to state 216

    alpha_array  go to state 217


State 186

   55 var: CHAR ALPHA ASSIGN ALPHA ARRAY . DIGIT
   56    | CHAR ALPHA ASSIGN ALPHA ARRAY . ALPHA

    DIGIT  shift, and go to state 218
    ALPHA  shift, and go to state 219


State 187

   44 var: CHAR ALPHA ASSIGN ESCAPE DIGIT .

    $default  reduce using rule 44 (var)


State 188

   43 var: CHAR ALPHA ASSIGN ESCAPE ALPHA .

    $default  reduce using rule 43 (var)


State 189

   47 var: CHAR ALPHA ARRAY DIGIT ASSIGN . char_array

    ESCAPE  shift, and go to state 220

    char_array  go to state 221


State 190

  105 rule: OPEN_P rule operator rule . CLOSE_P

    CLOSE_P  shift, and go to state 222


State 191

   29 program: OPEN_P rule operator rule CLOSE_P . CONDITIONAL WHILE EXEC program END_EXEC program
   30        | OPEN_P rule operator rule CLOSE_P . CONDITIONAL IF EXEC program END_EXEC program
   31        | OPEN_P rule operator rule CLOSE_P . CONDITIONAL IF EXEC program END_EXEC ELSE EXEC program END_EXEC program

    CONDITIONAL  shift, and go to state 223


State 192

   33 get: STDIN OPEN_P ALPHA COMMA DIGIT . CLOSE_P END

    CLOSE_P  shift, and go to state 224


State 193

   38 out: ESCAPE ALPHA ESCAPE out .

    $default  reduce using rule 38 (out)


State 194

   35 out: ESCAPE SPACE_ALPHA ESCAPE out .

    $default  reduce using rule 35 (out)


State 195

   17 params: type ALPHA COMMA params .

    $default  reduce using rule 17 (params)


State 196

    7 function: INT FUNCTION ALPHA OPEN_P params CLOSE_P EXEC program . END_EXEC

    END_EXEC  shift, and go to state 225


State 197

    8 function: STRING FUNCTION ALPHA OPEN_P params CLOSE_P EXEC program . END_EXEC

    END_EXEC  shift, and go to state 226


State 198

    9 function: CHAR FUNCTION ALPHA OPEN_P params CLOSE_P EXEC program . END_EXEC

    END_EXEC  shift, and go to state 227


State 199

   72 var: ALPHA ASSIGN CONVERT OPEN_P ALPHA CLOSE_P .

    $default  reduce using rule 72 (var)


State 200

   73 var: ALPHA ASSIGN LENGTH OPEN_P ALPHA CLOSE_P .

    $default  reduce using rule 73 (var)


State 201

   86 operation: op DIGIT operation .

    $default  reduce using rule 86 (operation)


State 202

   87 operation: op ALPHA operation .

    $default  reduce using rule 87 (operation)


State 203

   80 var: ALPHA ARRAY DIGIT ASSIGN ESCAPE DIGIT .

    $default  reduce using rule 80 (var)


State 204

   79 var: ALPHA ARRAY DIGIT ASSIGN ESCAPE ALPHA .

    $default  reduce using rule 79 (var)


State 205

   83 var: ALPHA ARRAY ALPHA ASSIGN ALPHA ARRAY . ALPHA

    ALPHA  shift, and go to state 228


State 206

   85 var: ALPHA ARRAY ALPHA ASSIGN ESCAPE DIGIT .

    $default  reduce using rule 85 (var)


State 207

   84 var: ALPHA ARRAY ALPHA ASSIGN ESCAPE ALPHA .

    $default  reduce using rule 84 (var)


State 208

   50 var: INT ALPHA ASSIGN ALPHA ARRAY DIGIT .

    $default  reduce using rule 50 (var)


State 209

   52 var: INT ALPHA ASSIGN ALPHA ARRAY ALPHA .

    $default  reduce using rule 52 (var)


State 210

   48 var: INT ALPHA ASSIGN CONVERT OPEN_P ALPHA . CLOSE_P

    CLOSE_P  shift, and go to state 229


State 211

   49 var: INT ALPHA ASSIGN LENGTH OPEN_P ALPHA . CLOSE_P

    CLOSE_P  shift, and go to state 230


State 212

   99 digit_array: DIGIT . COMMA digit_array
  100            | DIGIT .

    COMMA  shift, and go to state 231

    $default  reduce using rule 100 (digit_array)


State 213

   45 var: INT ALPHA ARRAY DIGIT ASSIGN digit_array .

    $default  reduce using rule 45 (var)


State 214

   51 var: STRING ALPHA ASSIGN ALPHA ARRAY DIGIT .

    $default  reduce using rule 51 (var)


State 215

   53 var: STRING ALPHA ASSIGN ALPHA ARRAY ALPHA .

    $default  reduce using rule 53 (var)


State 216

   97 alpha_array: STRING_VALUE . COMMA alpha_array
   98            | STRING_VALUE .

    COMMA  shift, and go to state 232

    $default  reduce using rule 98 (alpha_array)


State 217

   46 var: STRING ALPHA ARRAY DIGIT ASSIGN alpha_array .

    $default  reduce using rule 46 (var)


State 218

   55 var: CHAR ALPHA ASSIGN ALPHA ARRAY DIGIT .

    $default  reduce using rule 55 (var)


State 219

   56 var: CHAR ALPHA ASSIGN ALPHA ARRAY ALPHA .

    $default  reduce using rule 56 (var)


State 220

  101 char_array: ESCAPE . ALPHA COMMA char_array
  102           | ESCAPE . ALPHA
  103           | ESCAPE . DIGIT COMMA char_array
  104           | ESCAPE . DIGIT

    DIGIT  shift, and go to state 233
    ALPHA  shift, and go to state 234


State 221

   47 var: CHAR ALPHA ARRAY DIGIT ASSIGN char_array .

    $default  reduce using rule 47 (var)


State 222

  105 rule: OPEN_P rule operator rule CLOSE_P .

    $default  reduce using rule 105 (rule)


State 223

   29 program: OPEN_P rule operator rule CLOSE_P CONDITIONAL . WHILE EXEC program END_EXEC program
   30        | OPEN_P rule operator rule CLOSE_P CONDITIONAL . IF EXEC program END_EXEC program
   31        | OPEN_P rule operator rule CLOSE_P CONDITIONAL . IF EXEC program END_EXEC ELSE EXEC program END_EXEC program

    IF     shift, and go to state 235
    WHILE  shift, and go to state 236


State 224

   33 get: STDIN OPEN_P ALPHA COMMA DIGIT CLOSE_P . END

    END  shift, and go to state 237


State 225

    7 function: INT FUNCTION ALPHA OPEN_P params CLOSE_P EXEC program END_EXEC .

    $default  reduce using rule 7 (function)


State 226

    8 function: STRING FUNCTION ALPHA OPEN_P params CLOSE_P EXEC program END_EXEC .

    $default  reduce using rule 8 (function)


State 227

    9 function: CHAR FUNCTION ALPHA OPEN_P params CLOSE_P EXEC program END_EXEC .

    $default  reduce using rule 9 (function)


State 228

   83 var: ALPHA ARRAY ALPHA ASSIGN ALPHA ARRAY ALPHA .

    $default  reduce using rule 83 (var)


State 229

   48 var: INT ALPHA ASSIGN CONVERT OPEN_P ALPHA CLOSE_P .

    $default  reduce using rule 48 (var)


State 230

   49 var: INT ALPHA ASSIGN LENGTH OPEN_P ALPHA CLOSE_P .

    $default  reduce using rule 49 (var)


State 231

   99 digit_array: DIGIT COMMA . digit_array

    DIGIT  shift, and go to state 212

    digit_array  go to state 238


State 232

   97 alpha_array: STRING_VALUE COMMA . alpha_array

    STRING_VALUE  shift, and go to state 216

    alpha_array  go to state 239


State 233

  103 char_array: ESCAPE DIGIT . COMMA char_array
  104           | ESCAPE DIGIT .

    COMMA  shift, and go to state 240

    $default  reduce using rule 104 (char_array)


State 234

  101 char_array: ESCAPE ALPHA . COMMA char_array
  102           | ESCAPE ALPHA .

    COMMA  shift, and go to state 241

    $default  reduce using rule 102 (char_array)


State 235

   30 program: OPEN_P rule operator rule CLOSE_P CONDITIONAL IF . EXEC program END_EXEC program
   31        | OPEN_P rule operator rule CLOSE_P CONDITIONAL IF . EXEC program END_EXEC ELSE EXEC program END_EXEC program

    EXEC  shift, and go to state 242


State 236

   29 program: OPEN_P rule operator rule CLOSE_P CONDITIONAL WHILE . EXEC program END_EXEC program

    EXEC  shift, and go to state 243


State 237

   33 get: STDIN OPEN_P ALPHA COMMA DIGIT CLOSE_P END .

    $default  reduce using rule 33 (get)


State 238

   99 digit_array: DIGIT COMMA digit_array .

    $default  reduce using rule 99 (digit_array)


State 239

   97 alpha_array: STRING_VALUE COMMA alpha_array .

    $default  reduce using rule 97 (alpha_array)


State 240

  103 char_array: ESCAPE DIGIT COMMA . char_array

    ESCAPE  shift, and go to state 220

    char_array  go to state 244


State 241

  101 char_array: ESCAPE ALPHA COMMA . char_array

    ESCAPE  shift, and go to state 220

    char_array  go to state 245


State 242

   30 program: OPEN_P rule operator rule CLOSE_P CONDITIONAL IF EXEC . program END_EXEC program
   31        | OPEN_P rule operator rule CLOSE_P CONDITIONAL IF EXEC . program END_EXEC ELSE EXEC program END_EXEC program

    ALPHA   shift, and go to state 24
    INT     shift, and go to state 25
    STRING  shift, and go to state 26
    CHAR    shift, and go to state 27
    OPEN_P  shift, and go to state 28
    RETURN  shift, and go to state 29
    STDIN   shift, and go to state 30
    STDOUT  shift, and go to state 31

    $default  reduce using rule 32 (program)

    call     go to state 32
    program  go to state 246
    get      go to state 34
    var      go to state 35


State 243

   29 program: OPEN_P rule operator rule CLOSE_P CONDITIONAL WHILE EXEC . program END_EXEC program

    ALPHA   shift, and go to state 24
    INT     shift, and go to state 25
    STRING  shift, and go to state 26
    CHAR    shift, and go to state 27
    OPEN_P  shift, and go to state 28
    RETURN  shift, and go to state 29
    STDIN   shift, and go to state 30
    STDOUT  shift, and go to state 31

    $default  reduce using rule 32 (program)

    call     go to state 32
    program  go to state 247
    get      go to state 34
    var      go to state 35


State 244

  103 char_array: ESCAPE DIGIT COMMA char_array .

    $default  reduce using rule 103 (char_array)


State 245

  101 char_array: ESCAPE ALPHA COMMA char_array .

    $default  reduce using rule 101 (char_array)


State 246

   30 program: OPEN_P rule operator rule CLOSE_P CONDITIONAL IF EXEC program . END_EXEC program
   31        | OPEN_P rule operator rule CLOSE_P CONDITIONAL IF EXEC program . END_EXEC ELSE EXEC program END_EXEC program

    END_EXEC  shift, and go to state 248


State 247

   29 program: OPEN_P rule operator rule CLOSE_P CONDITIONAL WHILE EXEC program . END_EXEC program

    END_EXEC  shift, and go to state 249


State 248

   30 program: OPEN_P rule operator rule CLOSE_P CONDITIONAL IF EXEC program END_EXEC . program
   31        | OPEN_P rule operator rule CLOSE_P CONDITIONAL IF EXEC program END_EXEC . ELSE EXEC program END_EXEC program

    ALPHA   shift, and go to state 24
    INT     shift, and go to state 25
    STRING  shift, and go to state 26
    CHAR    shift, and go to state 27
    OPEN_P  shift, and go to state 28
    ELSE    shift, and go to state 250
    RETURN  shift, and go to state 29
    STDIN   shift, and go to state 30
    STDOUT  shift, and go to state 31

    $default  reduce using rule 32 (program)

    call     go to state 32
    program  go to state 251
    get      go to state 34
    var      go to state 35


State 249

   29 program: OPEN_P rule operator rule CLOSE_P CONDITIONAL WHILE EXEC program END_EXEC . program

    ALPHA   shift, and go to state 24
    INT     shift, and go to state 25
    STRING  shift, and go to state 26
    CHAR    shift, and go to state 27
    OPEN_P  shift, and go to state 28
    RETURN  shift, and go to state 29
    STDIN   shift, and go to state 30
    STDOUT  shift, and go to state 31

    $default  reduce using rule 32 (program)

    call     go to state 32
    program  go to state 252
    get      go to state 34
    var      go to state 35


State 250

   31 program: OPEN_P rule operator rule CLOSE_P CONDITIONAL IF EXEC program END_EXEC ELSE . EXEC program END_EXEC program

    EXEC  shift, and go to state 253


State 251

   30 program: OPEN_P rule operator rule CLOSE_P CONDITIONAL IF EXEC program END_EXEC program .

    $default  reduce using rule 30 (program)


State 252

   29 program: OPEN_P rule operator rule CLOSE_P CONDITIONAL WHILE EXEC program END_EXEC program .

    $default  reduce using rule 29 (program)


State 253

   31 program: OPEN_P rule operator rule CLOSE_P CONDITIONAL IF EXEC program END_EXEC ELSE EXEC . program END_EXEC program

    ALPHA   shift, and go to state 24
    INT     shift, and go to state 25
    STRING  shift, and go to state 26
    CHAR    shift, and go to state 27
    OPEN_P  shift, and go to state 28
    RETURN  shift, and go to state 29
    STDIN   shift, and go to state 30
    STDOUT  shift, and go to state 31

    $default  reduce using rule 32 (program)

    call     go to state 32
    program  go to state 254
    get      go to state 34
    var      go to state 35


State 254

   31 program: OPEN_P rule operator rule CLOSE_P CONDITIONAL IF EXEC program END_EXEC ELSE EXEC program . END_EXEC program

    END_EXEC  shift, and go to state 255


State 255

   31 program: OPEN_P rule operator rule CLOSE_P CONDITIONAL IF EXEC program END_EXEC ELSE EXEC program END_EXEC . program

    ALPHA   shift, and go to state 24
    INT     shift, and go to state 25
    STRING  shift, and go to state 26
    CHAR    shift, and go to state 27
    OPEN_P  shift, and go to state 28
    RETURN  shift, and go to state 29
    STDIN   shift, and go to state 30
    STDOUT  shift, and go to state 31

    $default  reduce using rule 32 (program)

    call     go to state 32
    program  go to state 256
    get      go to state 34
    var      go to state 35


State 256

   31 program: OPEN_P rule operator rule CLOSE_P CONDITIONAL IF EXEC program END_EXEC ELSE EXEC program END_EXEC program .

    $default  reduce using rule 31 (program)
