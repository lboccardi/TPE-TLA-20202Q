Nonterminals useless in grammar

    arrow


Rules useless in grammar

   93 arrow: WHILE
   94      | IF


State 65 conflicts: 1 reduce/reduce
State 66 conflicts: 1 reduce/reduce
State 67 conflicts: 1 reduce/reduce
State 112 conflicts: 1 reduce/reduce


Grammar

    0 $accept: start $end

    1 start: MAIN EXEC program END_EXEC
    2      | function start

    3 function: INT FUNCTION ALPHA OPEN_P params CLOSE_P EXEC program END_EXEC
    4         | STRING FUNCTION ALPHA OPEN_P params CLOSE_P EXEC program END_EXEC
    5         | CHAR FUNCTION ALPHA OPEN_P params CLOSE_P EXEC program END_EXEC

    6 type: INT
    7     | STRING
    8     | CHAR

    9 params: type ALPHA
   10       | type ALPHA COMMA params
   11       | %empty

   12 args: assignment
   13     | assignment COMMA args
   14     | call
   15     | %empty

   16 call: ALPHA OPEN_P args CLOSE_P

   17 program: var END program
   18        | call END program
   19        | RETURN assignment END
   20        | get program
   21        | STDOUT out END program
   22        | OPEN_P rule operator rule CLOSE_P CONDITIONAL WHILE EXEC program END_EXEC program
   23        | OPEN_P rule operator rule CLOSE_P CONDITIONAL IF EXEC program END_EXEC program
   24        | OPEN_P rule operator rule CLOSE_P CONDITIONAL IF EXEC program END_EXEC ELSE EXEC program END_EXEC program
   25        | %empty

   26 get: STDIN OPEN_P ALPHA COMMA DIGIT CLOSE_P END

   27 out: SPACE_ALPHA out
   28    | ESCAPE SPACE_ALPHA ESCAPE out
   29    | %empty
   30    | ALPHA out
   31    | ESCAPE ALPHA ESCAPE out

   32 var: INT ALPHA ASSIGN DIGIT operation
   33    | INT ALPHA ASSIGN ALPHA operation
   34    | STRING ALPHA ASSIGN STRING_VALUE
   35    | STRING ALPHA ASSIGN ALPHA
   36    | CHAR ALPHA ASSIGN ESCAPE ALPHA
   37    | INT ALPHA ARRAY DIGIT ASSIGN digit_array
   38    | STRING ALPHA ARRAY DIGIT ASSIGN alpha_array
   39    | INT ALPHA ASSIGN CONVERT OPEN_P ALPHA CLOSE_P
   40    | INT ALPHA ASSIGN LENGTH OPEN_P ALPHA CLOSE_P
   41    | INT ALPHA ASSIGN ALPHA ARRAY DIGIT
   42    | STRING ALPHA ASSIGN ALPHA ARRAY DIGIT
   43    | INT ALPHA ASSIGN ALPHA ARRAY ALPHA
   44    | STRING ALPHA ASSIGN ALPHA ARRAY ALPHA
   45    | CHAR ALPHA ASSIGN ALPHA
   46    | INT ALPHA
   47    | CHAR ALPHA
   48    | STRING ALPHA
   49    | INT ALPHA ARRAY DIGIT
   50    | STRING ALPHA ARRAY DIGIT
   51    | ALPHA ASSIGN ALPHA
   52    | ALPHA ASSIGN ESCAPE ALPHA
   53    | ALPHA ASSIGN DIGIT
   54    | ALPHA ASSIGN STRING_VALUE
   55    | ALPHA ASSIGN assignment operation
   56    | ALPHA ASSIGN ALPHA ARRAY DIGIT
   57    | ALPHA ASSIGN ALPHA ARRAY ALPHA
   58    | ALPHA ASSIGN CONVERT OPEN_P ALPHA CLOSE_P
   59    | ALPHA ASSIGN LENGTH OPEN_P ALPHA CLOSE_P
   60    | INT ALPHA ASSIGN call
   61    | STRING ALPHA ASSIGN call
   62    | CHAR ALPHA ASSIGN call
   63    | ALPHA ASSIGN call
   64    | ALPHA ARRAY DIGIT ASSIGN DIGIT
   65    | ALPHA ARRAY DIGIT ASSIGN STRING_VALUE

   66 operation: op DIGIT operation
   67          | op ALPHA operation
   68          | %empty

   69 assignment: ALPHA
   70           | DIGIT
   71           | STRING_VALUE
   72           | ESCAPE ALPHA

   73 alpha_array: STRING_VALUE COMMA alpha_array
   74            | STRING_VALUE

   75 digit_array: DIGIT COMMA digit_array
   76            | DIGIT

   77 rule: OPEN_P rule operator rule CLOSE_P
   78     | assignment

   79 operator: op
   80         | L
   81         | G
   82         | LE
   83         | GE
   84         | EQ
   85         | NE
   86         | OR
   87         | AND

   88 op: PLUS
   89   | MINUS
   90   | DIV
   91   | TIMES
   92   | MOD


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    DIGIT <stringValue> (258) 26 32 37 38 41 42 49 50 53 56 64 65 66 70 75 76
    ALPHA <stringValue> (259) 3 4 5 9 10 16 26 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 67 69 72
    SPACE_ALPHA <stringValue> (260) 27 28
    STRING_VALUE <stringValue> (261) 34 54 65 71 73 74
    INT <stringValue> (262) 3 6 32 33 37 39 40 41 43 46 49 60
    STRING <stringValue> (263) 4 7 34 35 38 42 44 48 50 61
    CHAR <stringValue> (264) 5 8 36 45 47 62
    PLUS <stringValue> (265) 88
    MINUS <stringValue> (266) 89
    TIMES <stringValue> (267) 91
    DIV <stringValue> (268) 90
    MOD <stringValue> (269) 92
    END (270) 17 18 19 21 26
    OPEN_P (271) 3 4 5 16 22 23 24 26 39 40 58 59 77
    CLOSE_P (272) 3 4 5 16 22 23 24 26 39 40 58 59 77
    CONDITIONAL (273) 22 23 24
    EXEC (274) 1 3 4 5 22 23 24
    END_EXEC (275) 1 3 4 5 22 23 24
    IF (276) 23 24
    ELSE (277) 24
    ESCAPE (278) 28 31 36 52 72
    WHILE (279) 22
    L (280) 80
    G (281) 81
    LE (282) 82
    GE (283) 83
    EQ (284) 84
    NE (285) 85
    OR (286) 86
    AND (287) 87
    ASSIGN (288) 32 33 34 35 36 37 38 39 40 41 42 43 44 45 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65
    RETURN (289) 19
    MAIN (290) 1
    STDIN (291) 26
    STDOUT (292) 21
    CONVERT (293) 39 58
    LENGTH (294) 40 59
    FUNCTION (295) 3 4 5
    COMMA (296) 10 13 26 73 75
    ARRAY (297) 37 38 41 42 43 44 49 50 56 57 64 65


Nonterminals, with rules where they appear

    $accept (43)
        on left: 0
    start <stringValue> (44)
        on left: 1 2
        on right: 0 2
    function <stringValue> (45)
        on left: 3 4 5
        on right: 2
    type <stringValue> (46)
        on left: 6 7 8
        on right: 9 10
    params <stringValue> (47)
        on left: 9 10 11
        on right: 3 4 5 10
    args <stringValue> (48)
        on left: 12 13 14 15
        on right: 13 16
    call <stringValue> (49)
        on left: 16
        on right: 14 18 60 61 62 63
    program <stringValue> (50)
        on left: 17 18 19 20 21 22 23 24 25
        on right: 1 3 4 5 17 18 20 21 22 23 24
    get <stringValue> (51)
        on left: 26
        on right: 20
    out <stringValue> (52)
        on left: 27 28 29 30 31
        on right: 21 27 28 30 31
    var <stringValue> (53)
        on left: 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65
        on right: 17
    operation <stringValue> (54)
        on left: 66 67 68
        on right: 32 33 55 66 67
    assignment <stringValue> (55)
        on left: 69 70 71 72
        on right: 12 13 19 55 78
    alpha_array <stringValue> (56)
        on left: 73 74
        on right: 38 73
    digit_array <stringValue> (57)
        on left: 75 76
        on right: 37 75
    rule <stringValue> (58)
        on left: 77 78
        on right: 22 23 24 77
    operator <stringValue> (59)
        on left: 79 80 81 82 83 84 85 86 87
        on right: 22 23 24 77
    op <stringValue> (60)
        on left: 88 89 90 91 92
        on right: 66 67 79


State 0

    0 $accept: . start $end

    INT     shift, and go to state 1
    STRING  shift, and go to state 2
    CHAR    shift, and go to state 3
    MAIN    shift, and go to state 4

    start     go to state 5
    function  go to state 6


State 1

    3 function: INT . FUNCTION ALPHA OPEN_P params CLOSE_P EXEC program END_EXEC

    FUNCTION  shift, and go to state 7


State 2

    4 function: STRING . FUNCTION ALPHA OPEN_P params CLOSE_P EXEC program END_EXEC

    FUNCTION  shift, and go to state 8


State 3

    5 function: CHAR . FUNCTION ALPHA OPEN_P params CLOSE_P EXEC program END_EXEC

    FUNCTION  shift, and go to state 9


State 4

    1 start: MAIN . EXEC program END_EXEC

    EXEC  shift, and go to state 10


State 5

    0 $accept: start . $end

    $end  shift, and go to state 11


State 6

    2 start: function . start

    INT     shift, and go to state 1
    STRING  shift, and go to state 2
    CHAR    shift, and go to state 3
    MAIN    shift, and go to state 4

    start     go to state 12
    function  go to state 6


State 7

    3 function: INT FUNCTION . ALPHA OPEN_P params CLOSE_P EXEC program END_EXEC

    ALPHA  shift, and go to state 13


State 8

    4 function: STRING FUNCTION . ALPHA OPEN_P params CLOSE_P EXEC program END_EXEC

    ALPHA  shift, and go to state 14


State 9

    5 function: CHAR FUNCTION . ALPHA OPEN_P params CLOSE_P EXEC program END_EXEC

    ALPHA  shift, and go to state 15


State 10

    1 start: MAIN EXEC . program END_EXEC

    ALPHA   shift, and go to state 16
    INT     shift, and go to state 17
    STRING  shift, and go to state 18
    CHAR    shift, and go to state 19
    OPEN_P  shift, and go to state 20
    RETURN  shift, and go to state 21
    STDIN   shift, and go to state 22
    STDOUT  shift, and go to state 23

    $default  reduce using rule 25 (program)

    call     go to state 24
    program  go to state 25
    get      go to state 26
    var      go to state 27


State 11

    0 $accept: start $end .

    $default  accept


State 12

    2 start: function start .

    $default  reduce using rule 2 (start)


State 13

    3 function: INT FUNCTION ALPHA . OPEN_P params CLOSE_P EXEC program END_EXEC

    OPEN_P  shift, and go to state 28


State 14

    4 function: STRING FUNCTION ALPHA . OPEN_P params CLOSE_P EXEC program END_EXEC

    OPEN_P  shift, and go to state 29


State 15

    5 function: CHAR FUNCTION ALPHA . OPEN_P params CLOSE_P EXEC program END_EXEC

    OPEN_P  shift, and go to state 30


State 16

   16 call: ALPHA . OPEN_P args CLOSE_P
   51 var: ALPHA . ASSIGN ALPHA
   52    | ALPHA . ASSIGN ESCAPE ALPHA
   53    | ALPHA . ASSIGN DIGIT
   54    | ALPHA . ASSIGN STRING_VALUE
   55    | ALPHA . ASSIGN assignment operation
   56    | ALPHA . ASSIGN ALPHA ARRAY DIGIT
   57    | ALPHA . ASSIGN ALPHA ARRAY ALPHA
   58    | ALPHA . ASSIGN CONVERT OPEN_P ALPHA CLOSE_P
   59    | ALPHA . ASSIGN LENGTH OPEN_P ALPHA CLOSE_P
   63    | ALPHA . ASSIGN call
   64    | ALPHA . ARRAY DIGIT ASSIGN DIGIT
   65    | ALPHA . ARRAY DIGIT ASSIGN STRING_VALUE

    OPEN_P  shift, and go to state 31
    ASSIGN  shift, and go to state 32
    ARRAY   shift, and go to state 33


State 17

   32 var: INT . ALPHA ASSIGN DIGIT operation
   33    | INT . ALPHA ASSIGN ALPHA operation
   37    | INT . ALPHA ARRAY DIGIT ASSIGN digit_array
   39    | INT . ALPHA ASSIGN CONVERT OPEN_P ALPHA CLOSE_P
   40    | INT . ALPHA ASSIGN LENGTH OPEN_P ALPHA CLOSE_P
   41    | INT . ALPHA ASSIGN ALPHA ARRAY DIGIT
   43    | INT . ALPHA ASSIGN ALPHA ARRAY ALPHA
   46    | INT . ALPHA
   49    | INT . ALPHA ARRAY DIGIT
   60    | INT . ALPHA ASSIGN call

    ALPHA  shift, and go to state 34


State 18

   34 var: STRING . ALPHA ASSIGN STRING_VALUE
   35    | STRING . ALPHA ASSIGN ALPHA
   38    | STRING . ALPHA ARRAY DIGIT ASSIGN alpha_array
   42    | STRING . ALPHA ASSIGN ALPHA ARRAY DIGIT
   44    | STRING . ALPHA ASSIGN ALPHA ARRAY ALPHA
   48    | STRING . ALPHA
   50    | STRING . ALPHA ARRAY DIGIT
   61    | STRING . ALPHA ASSIGN call

    ALPHA  shift, and go to state 35


State 19

   36 var: CHAR . ALPHA ASSIGN ESCAPE ALPHA
   45    | CHAR . ALPHA ASSIGN ALPHA
   47    | CHAR . ALPHA
   62    | CHAR . ALPHA ASSIGN call

    ALPHA  shift, and go to state 36


State 20

   22 program: OPEN_P . rule operator rule CLOSE_P CONDITIONAL WHILE EXEC program END_EXEC program
   23        | OPEN_P . rule operator rule CLOSE_P CONDITIONAL IF EXEC program END_EXEC program
   24        | OPEN_P . rule operator rule CLOSE_P CONDITIONAL IF EXEC program END_EXEC ELSE EXEC program END_EXEC program

    DIGIT         shift, and go to state 37
    ALPHA         shift, and go to state 38
    STRING_VALUE  shift, and go to state 39
    OPEN_P        shift, and go to state 40
    ESCAPE        shift, and go to state 41

    assignment  go to state 42
    rule        go to state 43


State 21

   19 program: RETURN . assignment END

    DIGIT         shift, and go to state 37
    ALPHA         shift, and go to state 38
    STRING_VALUE  shift, and go to state 39
    ESCAPE        shift, and go to state 41

    assignment  go to state 44


State 22

   26 get: STDIN . OPEN_P ALPHA COMMA DIGIT CLOSE_P END

    OPEN_P  shift, and go to state 45


State 23

   21 program: STDOUT . out END program

    ALPHA        shift, and go to state 46
    SPACE_ALPHA  shift, and go to state 47
    ESCAPE       shift, and go to state 48

    $default  reduce using rule 29 (out)

    out  go to state 49


State 24

   18 program: call . END program

    END  shift, and go to state 50


State 25

    1 start: MAIN EXEC program . END_EXEC

    END_EXEC  shift, and go to state 51


State 26

   20 program: get . program

    ALPHA   shift, and go to state 16
    INT     shift, and go to state 17
    STRING  shift, and go to state 18
    CHAR    shift, and go to state 19
    OPEN_P  shift, and go to state 20
    RETURN  shift, and go to state 21
    STDIN   shift, and go to state 22
    STDOUT  shift, and go to state 23

    $default  reduce using rule 25 (program)

    call     go to state 24
    program  go to state 52
    get      go to state 26
    var      go to state 27


State 27

   17 program: var . END program

    END  shift, and go to state 53


State 28

    3 function: INT FUNCTION ALPHA OPEN_P . params CLOSE_P EXEC program END_EXEC

    INT     shift, and go to state 54
    STRING  shift, and go to state 55
    CHAR    shift, and go to state 56

    $default  reduce using rule 11 (params)

    type    go to state 57
    params  go to state 58


State 29

    4 function: STRING FUNCTION ALPHA OPEN_P . params CLOSE_P EXEC program END_EXEC

    INT     shift, and go to state 54
    STRING  shift, and go to state 55
    CHAR    shift, and go to state 56

    $default  reduce using rule 11 (params)

    type    go to state 57
    params  go to state 59


State 30

    5 function: CHAR FUNCTION ALPHA OPEN_P . params CLOSE_P EXEC program END_EXEC

    INT     shift, and go to state 54
    STRING  shift, and go to state 55
    CHAR    shift, and go to state 56

    $default  reduce using rule 11 (params)

    type    go to state 57
    params  go to state 60


State 31

   16 call: ALPHA OPEN_P . args CLOSE_P

    DIGIT         shift, and go to state 37
    ALPHA         shift, and go to state 61
    STRING_VALUE  shift, and go to state 39
    ESCAPE        shift, and go to state 41

    $default  reduce using rule 15 (args)

    args        go to state 62
    call        go to state 63
    assignment  go to state 64


State 32

   51 var: ALPHA ASSIGN . ALPHA
   52    | ALPHA ASSIGN . ESCAPE ALPHA
   53    | ALPHA ASSIGN . DIGIT
   54    | ALPHA ASSIGN . STRING_VALUE
   55    | ALPHA ASSIGN . assignment operation
   56    | ALPHA ASSIGN . ALPHA ARRAY DIGIT
   57    | ALPHA ASSIGN . ALPHA ARRAY ALPHA
   58    | ALPHA ASSIGN . CONVERT OPEN_P ALPHA CLOSE_P
   59    | ALPHA ASSIGN . LENGTH OPEN_P ALPHA CLOSE_P
   63    | ALPHA ASSIGN . call

    DIGIT         shift, and go to state 65
    ALPHA         shift, and go to state 66
    STRING_VALUE  shift, and go to state 67
    ESCAPE        shift, and go to state 68
    CONVERT       shift, and go to state 69
    LENGTH        shift, and go to state 70

    call        go to state 71
    assignment  go to state 72


State 33

   64 var: ALPHA ARRAY . DIGIT ASSIGN DIGIT
   65    | ALPHA ARRAY . DIGIT ASSIGN STRING_VALUE

    DIGIT  shift, and go to state 73


State 34

   32 var: INT ALPHA . ASSIGN DIGIT operation
   33    | INT ALPHA . ASSIGN ALPHA operation
   37    | INT ALPHA . ARRAY DIGIT ASSIGN digit_array
   39    | INT ALPHA . ASSIGN CONVERT OPEN_P ALPHA CLOSE_P
   40    | INT ALPHA . ASSIGN LENGTH OPEN_P ALPHA CLOSE_P
   41    | INT ALPHA . ASSIGN ALPHA ARRAY DIGIT
   43    | INT ALPHA . ASSIGN ALPHA ARRAY ALPHA
   46    | INT ALPHA .
   49    | INT ALPHA . ARRAY DIGIT
   60    | INT ALPHA . ASSIGN call

    ASSIGN  shift, and go to state 74
    ARRAY   shift, and go to state 75

    $default  reduce using rule 46 (var)


State 35

   34 var: STRING ALPHA . ASSIGN STRING_VALUE
   35    | STRING ALPHA . ASSIGN ALPHA
   38    | STRING ALPHA . ARRAY DIGIT ASSIGN alpha_array
   42    | STRING ALPHA . ASSIGN ALPHA ARRAY DIGIT
   44    | STRING ALPHA . ASSIGN ALPHA ARRAY ALPHA
   48    | STRING ALPHA .
   50    | STRING ALPHA . ARRAY DIGIT
   61    | STRING ALPHA . ASSIGN call

    ASSIGN  shift, and go to state 76
    ARRAY   shift, and go to state 77

    $default  reduce using rule 48 (var)


State 36

   36 var: CHAR ALPHA . ASSIGN ESCAPE ALPHA
   45    | CHAR ALPHA . ASSIGN ALPHA
   47    | CHAR ALPHA .
   62    | CHAR ALPHA . ASSIGN call

    ASSIGN  shift, and go to state 78

    $default  reduce using rule 47 (var)


State 37

   70 assignment: DIGIT .

    $default  reduce using rule 70 (assignment)


State 38

   69 assignment: ALPHA .

    $default  reduce using rule 69 (assignment)


State 39

   71 assignment: STRING_VALUE .

    $default  reduce using rule 71 (assignment)


State 40

   77 rule: OPEN_P . rule operator rule CLOSE_P

    DIGIT         shift, and go to state 37
    ALPHA         shift, and go to state 38
    STRING_VALUE  shift, and go to state 39
    OPEN_P        shift, and go to state 40
    ESCAPE        shift, and go to state 41

    assignment  go to state 42
    rule        go to state 79


State 41

   72 assignment: ESCAPE . ALPHA

    ALPHA  shift, and go to state 80


State 42

   78 rule: assignment .

    $default  reduce using rule 78 (rule)


State 43

   22 program: OPEN_P rule . operator rule CLOSE_P CONDITIONAL WHILE EXEC program END_EXEC program
   23        | OPEN_P rule . operator rule CLOSE_P CONDITIONAL IF EXEC program END_EXEC program
   24        | OPEN_P rule . operator rule CLOSE_P CONDITIONAL IF EXEC program END_EXEC ELSE EXEC program END_EXEC program

    PLUS   shift, and go to state 81
    MINUS  shift, and go to state 82
    TIMES  shift, and go to state 83
    DIV    shift, and go to state 84
    MOD    shift, and go to state 85
    L      shift, and go to state 86
    G      shift, and go to state 87
    LE     shift, and go to state 88
    GE     shift, and go to state 89
    EQ     shift, and go to state 90
    NE     shift, and go to state 91
    OR     shift, and go to state 92
    AND    shift, and go to state 93

    operator  go to state 94
    op        go to state 95


State 44

   19 program: RETURN assignment . END

    END  shift, and go to state 96


State 45

   26 get: STDIN OPEN_P . ALPHA COMMA DIGIT CLOSE_P END

    ALPHA  shift, and go to state 97


State 46

   30 out: ALPHA . out

    ALPHA        shift, and go to state 46
    SPACE_ALPHA  shift, and go to state 47
    ESCAPE       shift, and go to state 48

    $default  reduce using rule 29 (out)

    out  go to state 98


State 47

   27 out: SPACE_ALPHA . out

    ALPHA        shift, and go to state 46
    SPACE_ALPHA  shift, and go to state 47
    ESCAPE       shift, and go to state 48

    $default  reduce using rule 29 (out)

    out  go to state 99


State 48

   28 out: ESCAPE . SPACE_ALPHA ESCAPE out
   31    | ESCAPE . ALPHA ESCAPE out

    ALPHA        shift, and go to state 100
    SPACE_ALPHA  shift, and go to state 101


State 49

   21 program: STDOUT out . END program

    END  shift, and go to state 102


State 50

   18 program: call END . program

    ALPHA   shift, and go to state 16
    INT     shift, and go to state 17
    STRING  shift, and go to state 18
    CHAR    shift, and go to state 19
    OPEN_P  shift, and go to state 20
    RETURN  shift, and go to state 21
    STDIN   shift, and go to state 22
    STDOUT  shift, and go to state 23

    $default  reduce using rule 25 (program)

    call     go to state 24
    program  go to state 103
    get      go to state 26
    var      go to state 27


State 51

    1 start: MAIN EXEC program END_EXEC .

    $default  reduce using rule 1 (start)


State 52

   20 program: get program .

    $default  reduce using rule 20 (program)


State 53

   17 program: var END . program

    ALPHA   shift, and go to state 16
    INT     shift, and go to state 17
    STRING  shift, and go to state 18
    CHAR    shift, and go to state 19
    OPEN_P  shift, and go to state 20
    RETURN  shift, and go to state 21
    STDIN   shift, and go to state 22
    STDOUT  shift, and go to state 23

    $default  reduce using rule 25 (program)

    call     go to state 24
    program  go to state 104
    get      go to state 26
    var      go to state 27


State 54

    6 type: INT .

    $default  reduce using rule 6 (type)


State 55

    7 type: STRING .

    $default  reduce using rule 7 (type)


State 56

    8 type: CHAR .

    $default  reduce using rule 8 (type)


State 57

    9 params: type . ALPHA
   10       | type . ALPHA COMMA params

    ALPHA  shift, and go to state 105


State 58

    3 function: INT FUNCTION ALPHA OPEN_P params . CLOSE_P EXEC program END_EXEC

    CLOSE_P  shift, and go to state 106


State 59

    4 function: STRING FUNCTION ALPHA OPEN_P params . CLOSE_P EXEC program END_EXEC

    CLOSE_P  shift, and go to state 107


State 60

    5 function: CHAR FUNCTION ALPHA OPEN_P params . CLOSE_P EXEC program END_EXEC

    CLOSE_P  shift, and go to state 108


State 61

   16 call: ALPHA . OPEN_P args CLOSE_P
   69 assignment: ALPHA .

    OPEN_P  shift, and go to state 31

    $default  reduce using rule 69 (assignment)


State 62

   16 call: ALPHA OPEN_P args . CLOSE_P

    CLOSE_P  shift, and go to state 109


State 63

   14 args: call .

    $default  reduce using rule 14 (args)


State 64

   12 args: assignment .
   13     | assignment . COMMA args

    COMMA  shift, and go to state 110

    $default  reduce using rule 12 (args)


State 65

   53 var: ALPHA ASSIGN DIGIT .
   70 assignment: DIGIT .

    END       reduce using rule 53 (var)
    END       [reduce using rule 70 (assignment)]
    $default  reduce using rule 70 (assignment)


State 66

   16 call: ALPHA . OPEN_P args CLOSE_P
   51 var: ALPHA ASSIGN ALPHA .
   56    | ALPHA ASSIGN ALPHA . ARRAY DIGIT
   57    | ALPHA ASSIGN ALPHA . ARRAY ALPHA
   69 assignment: ALPHA .

    OPEN_P  shift, and go to state 31
    ARRAY   shift, and go to state 111

    END       reduce using rule 51 (var)
    END       [reduce using rule 69 (assignment)]
    $default  reduce using rule 69 (assignment)


State 67

   54 var: ALPHA ASSIGN STRING_VALUE .
   71 assignment: STRING_VALUE .

    END       reduce using rule 54 (var)
    END       [reduce using rule 71 (assignment)]
    $default  reduce using rule 71 (assignment)


State 68

   52 var: ALPHA ASSIGN ESCAPE . ALPHA
   72 assignment: ESCAPE . ALPHA

    ALPHA  shift, and go to state 112


State 69

   58 var: ALPHA ASSIGN CONVERT . OPEN_P ALPHA CLOSE_P

    OPEN_P  shift, and go to state 113


State 70

   59 var: ALPHA ASSIGN LENGTH . OPEN_P ALPHA CLOSE_P

    OPEN_P  shift, and go to state 114


State 71

   63 var: ALPHA ASSIGN call .

    $default  reduce using rule 63 (var)


State 72

   55 var: ALPHA ASSIGN assignment . operation

    PLUS   shift, and go to state 81
    MINUS  shift, and go to state 82
    TIMES  shift, and go to state 83
    DIV    shift, and go to state 84
    MOD    shift, and go to state 85

    $default  reduce using rule 68 (operation)

    operation  go to state 115
    op         go to state 116


State 73

   64 var: ALPHA ARRAY DIGIT . ASSIGN DIGIT
   65    | ALPHA ARRAY DIGIT . ASSIGN STRING_VALUE

    ASSIGN  shift, and go to state 117


State 74

   32 var: INT ALPHA ASSIGN . DIGIT operation
   33    | INT ALPHA ASSIGN . ALPHA operation
   39    | INT ALPHA ASSIGN . CONVERT OPEN_P ALPHA CLOSE_P
   40    | INT ALPHA ASSIGN . LENGTH OPEN_P ALPHA CLOSE_P
   41    | INT ALPHA ASSIGN . ALPHA ARRAY DIGIT
   43    | INT ALPHA ASSIGN . ALPHA ARRAY ALPHA
   60    | INT ALPHA ASSIGN . call

    DIGIT    shift, and go to state 118
    ALPHA    shift, and go to state 119
    CONVERT  shift, and go to state 120
    LENGTH   shift, and go to state 121

    call  go to state 122


State 75

   37 var: INT ALPHA ARRAY . DIGIT ASSIGN digit_array
   49    | INT ALPHA ARRAY . DIGIT

    DIGIT  shift, and go to state 123


State 76

   34 var: STRING ALPHA ASSIGN . STRING_VALUE
   35    | STRING ALPHA ASSIGN . ALPHA
   42    | STRING ALPHA ASSIGN . ALPHA ARRAY DIGIT
   44    | STRING ALPHA ASSIGN . ALPHA ARRAY ALPHA
   61    | STRING ALPHA ASSIGN . call

    ALPHA         shift, and go to state 124
    STRING_VALUE  shift, and go to state 125

    call  go to state 126


State 77

   38 var: STRING ALPHA ARRAY . DIGIT ASSIGN alpha_array
   50    | STRING ALPHA ARRAY . DIGIT

    DIGIT  shift, and go to state 127


State 78

   36 var: CHAR ALPHA ASSIGN . ESCAPE ALPHA
   45    | CHAR ALPHA ASSIGN . ALPHA
   62    | CHAR ALPHA ASSIGN . call

    ALPHA   shift, and go to state 128
    ESCAPE  shift, and go to state 129

    call  go to state 130


State 79

   77 rule: OPEN_P rule . operator rule CLOSE_P

    PLUS   shift, and go to state 81
    MINUS  shift, and go to state 82
    TIMES  shift, and go to state 83
    DIV    shift, and go to state 84
    MOD    shift, and go to state 85
    L      shift, and go to state 86
    G      shift, and go to state 87
    LE     shift, and go to state 88
    GE     shift, and go to state 89
    EQ     shift, and go to state 90
    NE     shift, and go to state 91
    OR     shift, and go to state 92
    AND    shift, and go to state 93

    operator  go to state 131
    op        go to state 95


State 80

   72 assignment: ESCAPE ALPHA .

    $default  reduce using rule 72 (assignment)


State 81

   88 op: PLUS .

    $default  reduce using rule 88 (op)


State 82

   89 op: MINUS .

    $default  reduce using rule 89 (op)


State 83

   91 op: TIMES .

    $default  reduce using rule 91 (op)


State 84

   90 op: DIV .

    $default  reduce using rule 90 (op)


State 85

   92 op: MOD .

    $default  reduce using rule 92 (op)


State 86

   80 operator: L .

    $default  reduce using rule 80 (operator)


State 87

   81 operator: G .

    $default  reduce using rule 81 (operator)


State 88

   82 operator: LE .

    $default  reduce using rule 82 (operator)


State 89

   83 operator: GE .

    $default  reduce using rule 83 (operator)


State 90

   84 operator: EQ .

    $default  reduce using rule 84 (operator)


State 91

   85 operator: NE .

    $default  reduce using rule 85 (operator)


State 92

   86 operator: OR .

    $default  reduce using rule 86 (operator)


State 93

   87 operator: AND .

    $default  reduce using rule 87 (operator)


State 94

   22 program: OPEN_P rule operator . rule CLOSE_P CONDITIONAL WHILE EXEC program END_EXEC program
   23        | OPEN_P rule operator . rule CLOSE_P CONDITIONAL IF EXEC program END_EXEC program
   24        | OPEN_P rule operator . rule CLOSE_P CONDITIONAL IF EXEC program END_EXEC ELSE EXEC program END_EXEC program

    DIGIT         shift, and go to state 37
    ALPHA         shift, and go to state 38
    STRING_VALUE  shift, and go to state 39
    OPEN_P        shift, and go to state 40
    ESCAPE        shift, and go to state 41

    assignment  go to state 42
    rule        go to state 132


State 95

   79 operator: op .

    $default  reduce using rule 79 (operator)


State 96

   19 program: RETURN assignment END .

    $default  reduce using rule 19 (program)


State 97

   26 get: STDIN OPEN_P ALPHA . COMMA DIGIT CLOSE_P END

    COMMA  shift, and go to state 133


State 98

   30 out: ALPHA out .

    $default  reduce using rule 30 (out)


State 99

   27 out: SPACE_ALPHA out .

    $default  reduce using rule 27 (out)


State 100

   31 out: ESCAPE ALPHA . ESCAPE out

    ESCAPE  shift, and go to state 134


State 101

   28 out: ESCAPE SPACE_ALPHA . ESCAPE out

    ESCAPE  shift, and go to state 135


State 102

   21 program: STDOUT out END . program

    ALPHA   shift, and go to state 16
    INT     shift, and go to state 17
    STRING  shift, and go to state 18
    CHAR    shift, and go to state 19
    OPEN_P  shift, and go to state 20
    RETURN  shift, and go to state 21
    STDIN   shift, and go to state 22
    STDOUT  shift, and go to state 23

    $default  reduce using rule 25 (program)

    call     go to state 24
    program  go to state 136
    get      go to state 26
    var      go to state 27


State 103

   18 program: call END program .

    $default  reduce using rule 18 (program)


State 104

   17 program: var END program .

    $default  reduce using rule 17 (program)


State 105

    9 params: type ALPHA .
   10       | type ALPHA . COMMA params

    COMMA  shift, and go to state 137

    $default  reduce using rule 9 (params)


State 106

    3 function: INT FUNCTION ALPHA OPEN_P params CLOSE_P . EXEC program END_EXEC

    EXEC  shift, and go to state 138


State 107

    4 function: STRING FUNCTION ALPHA OPEN_P params CLOSE_P . EXEC program END_EXEC

    EXEC  shift, and go to state 139


State 108

    5 function: CHAR FUNCTION ALPHA OPEN_P params CLOSE_P . EXEC program END_EXEC

    EXEC  shift, and go to state 140


State 109

   16 call: ALPHA OPEN_P args CLOSE_P .

    $default  reduce using rule 16 (call)


State 110

   13 args: assignment COMMA . args

    DIGIT         shift, and go to state 37
    ALPHA         shift, and go to state 61
    STRING_VALUE  shift, and go to state 39
    ESCAPE        shift, and go to state 41

    $default  reduce using rule 15 (args)

    args        go to state 141
    call        go to state 63
    assignment  go to state 64


State 111

   56 var: ALPHA ASSIGN ALPHA ARRAY . DIGIT
   57    | ALPHA ASSIGN ALPHA ARRAY . ALPHA

    DIGIT  shift, and go to state 142
    ALPHA  shift, and go to state 143


State 112

   52 var: ALPHA ASSIGN ESCAPE ALPHA .
   72 assignment: ESCAPE ALPHA .

    END       reduce using rule 52 (var)
    END       [reduce using rule 72 (assignment)]
    $default  reduce using rule 72 (assignment)


State 113

   58 var: ALPHA ASSIGN CONVERT OPEN_P . ALPHA CLOSE_P

    ALPHA  shift, and go to state 144


State 114

   59 var: ALPHA ASSIGN LENGTH OPEN_P . ALPHA CLOSE_P

    ALPHA  shift, and go to state 145


State 115

   55 var: ALPHA ASSIGN assignment operation .

    $default  reduce using rule 55 (var)


State 116

   66 operation: op . DIGIT operation
   67          | op . ALPHA operation

    DIGIT  shift, and go to state 146
    ALPHA  shift, and go to state 147


State 117

   64 var: ALPHA ARRAY DIGIT ASSIGN . DIGIT
   65    | ALPHA ARRAY DIGIT ASSIGN . STRING_VALUE

    DIGIT         shift, and go to state 148
    STRING_VALUE  shift, and go to state 149


State 118

   32 var: INT ALPHA ASSIGN DIGIT . operation

    PLUS   shift, and go to state 81
    MINUS  shift, and go to state 82
    TIMES  shift, and go to state 83
    DIV    shift, and go to state 84
    MOD    shift, and go to state 85

    $default  reduce using rule 68 (operation)

    operation  go to state 150
    op         go to state 116


State 119

   16 call: ALPHA . OPEN_P args CLOSE_P
   33 var: INT ALPHA ASSIGN ALPHA . operation
   41    | INT ALPHA ASSIGN ALPHA . ARRAY DIGIT
   43    | INT ALPHA ASSIGN ALPHA . ARRAY ALPHA

    PLUS    shift, and go to state 81
    MINUS   shift, and go to state 82
    TIMES   shift, and go to state 83
    DIV     shift, and go to state 84
    MOD     shift, and go to state 85
    OPEN_P  shift, and go to state 31
    ARRAY   shift, and go to state 151

    $default  reduce using rule 68 (operation)

    operation  go to state 152
    op         go to state 116


State 120

   39 var: INT ALPHA ASSIGN CONVERT . OPEN_P ALPHA CLOSE_P

    OPEN_P  shift, and go to state 153


State 121

   40 var: INT ALPHA ASSIGN LENGTH . OPEN_P ALPHA CLOSE_P

    OPEN_P  shift, and go to state 154


State 122

   60 var: INT ALPHA ASSIGN call .

    $default  reduce using rule 60 (var)


State 123

   37 var: INT ALPHA ARRAY DIGIT . ASSIGN digit_array
   49    | INT ALPHA ARRAY DIGIT .

    ASSIGN  shift, and go to state 155

    $default  reduce using rule 49 (var)


State 124

   16 call: ALPHA . OPEN_P args CLOSE_P
   35 var: STRING ALPHA ASSIGN ALPHA .
   42    | STRING ALPHA ASSIGN ALPHA . ARRAY DIGIT
   44    | STRING ALPHA ASSIGN ALPHA . ARRAY ALPHA

    OPEN_P  shift, and go to state 31
    ARRAY   shift, and go to state 156

    $default  reduce using rule 35 (var)


State 125

   34 var: STRING ALPHA ASSIGN STRING_VALUE .

    $default  reduce using rule 34 (var)


State 126

   61 var: STRING ALPHA ASSIGN call .

    $default  reduce using rule 61 (var)


State 127

   38 var: STRING ALPHA ARRAY DIGIT . ASSIGN alpha_array
   50    | STRING ALPHA ARRAY DIGIT .

    ASSIGN  shift, and go to state 157

    $default  reduce using rule 50 (var)


State 128

   16 call: ALPHA . OPEN_P args CLOSE_P
   45 var: CHAR ALPHA ASSIGN ALPHA .

    OPEN_P  shift, and go to state 31

    $default  reduce using rule 45 (var)


State 129

   36 var: CHAR ALPHA ASSIGN ESCAPE . ALPHA

    ALPHA  shift, and go to state 158


State 130

   62 var: CHAR ALPHA ASSIGN call .

    $default  reduce using rule 62 (var)


State 131

   77 rule: OPEN_P rule operator . rule CLOSE_P

    DIGIT         shift, and go to state 37
    ALPHA         shift, and go to state 38
    STRING_VALUE  shift, and go to state 39
    OPEN_P        shift, and go to state 40
    ESCAPE        shift, and go to state 41

    assignment  go to state 42
    rule        go to state 159


State 132

   22 program: OPEN_P rule operator rule . CLOSE_P CONDITIONAL WHILE EXEC program END_EXEC program
   23        | OPEN_P rule operator rule . CLOSE_P CONDITIONAL IF EXEC program END_EXEC program
   24        | OPEN_P rule operator rule . CLOSE_P CONDITIONAL IF EXEC program END_EXEC ELSE EXEC program END_EXEC program

    CLOSE_P  shift, and go to state 160


State 133

   26 get: STDIN OPEN_P ALPHA COMMA . DIGIT CLOSE_P END

    DIGIT  shift, and go to state 161


State 134

   31 out: ESCAPE ALPHA ESCAPE . out

    ALPHA        shift, and go to state 46
    SPACE_ALPHA  shift, and go to state 47
    ESCAPE       shift, and go to state 48

    $default  reduce using rule 29 (out)

    out  go to state 162


State 135

   28 out: ESCAPE SPACE_ALPHA ESCAPE . out

    ALPHA        shift, and go to state 46
    SPACE_ALPHA  shift, and go to state 47
    ESCAPE       shift, and go to state 48

    $default  reduce using rule 29 (out)

    out  go to state 163


State 136

   21 program: STDOUT out END program .

    $default  reduce using rule 21 (program)


State 137

   10 params: type ALPHA COMMA . params

    INT     shift, and go to state 54
    STRING  shift, and go to state 55
    CHAR    shift, and go to state 56

    $default  reduce using rule 11 (params)

    type    go to state 57
    params  go to state 164


State 138

    3 function: INT FUNCTION ALPHA OPEN_P params CLOSE_P EXEC . program END_EXEC

    ALPHA   shift, and go to state 16
    INT     shift, and go to state 17
    STRING  shift, and go to state 18
    CHAR    shift, and go to state 19
    OPEN_P  shift, and go to state 20
    RETURN  shift, and go to state 21
    STDIN   shift, and go to state 22
    STDOUT  shift, and go to state 23

    $default  reduce using rule 25 (program)

    call     go to state 24
    program  go to state 165
    get      go to state 26
    var      go to state 27


State 139

    4 function: STRING FUNCTION ALPHA OPEN_P params CLOSE_P EXEC . program END_EXEC

    ALPHA   shift, and go to state 16
    INT     shift, and go to state 17
    STRING  shift, and go to state 18
    CHAR    shift, and go to state 19
    OPEN_P  shift, and go to state 20
    RETURN  shift, and go to state 21
    STDIN   shift, and go to state 22
    STDOUT  shift, and go to state 23

    $default  reduce using rule 25 (program)

    call     go to state 24
    program  go to state 166
    get      go to state 26
    var      go to state 27


State 140

    5 function: CHAR FUNCTION ALPHA OPEN_P params CLOSE_P EXEC . program END_EXEC

    ALPHA   shift, and go to state 16
    INT     shift, and go to state 17
    STRING  shift, and go to state 18
    CHAR    shift, and go to state 19
    OPEN_P  shift, and go to state 20
    RETURN  shift, and go to state 21
    STDIN   shift, and go to state 22
    STDOUT  shift, and go to state 23

    $default  reduce using rule 25 (program)

    call     go to state 24
    program  go to state 167
    get      go to state 26
    var      go to state 27


State 141

   13 args: assignment COMMA args .

    $default  reduce using rule 13 (args)


State 142

   56 var: ALPHA ASSIGN ALPHA ARRAY DIGIT .

    $default  reduce using rule 56 (var)


State 143

   57 var: ALPHA ASSIGN ALPHA ARRAY ALPHA .

    $default  reduce using rule 57 (var)


State 144

   58 var: ALPHA ASSIGN CONVERT OPEN_P ALPHA . CLOSE_P

    CLOSE_P  shift, and go to state 168


State 145

   59 var: ALPHA ASSIGN LENGTH OPEN_P ALPHA . CLOSE_P

    CLOSE_P  shift, and go to state 169


State 146

   66 operation: op DIGIT . operation

    PLUS   shift, and go to state 81
    MINUS  shift, and go to state 82
    TIMES  shift, and go to state 83
    DIV    shift, and go to state 84
    MOD    shift, and go to state 85

    $default  reduce using rule 68 (operation)

    operation  go to state 170
    op         go to state 116


State 147

   67 operation: op ALPHA . operation

    PLUS   shift, and go to state 81
    MINUS  shift, and go to state 82
    TIMES  shift, and go to state 83
    DIV    shift, and go to state 84
    MOD    shift, and go to state 85

    $default  reduce using rule 68 (operation)

    operation  go to state 171
    op         go to state 116


State 148

   64 var: ALPHA ARRAY DIGIT ASSIGN DIGIT .

    $default  reduce using rule 64 (var)


State 149

   65 var: ALPHA ARRAY DIGIT ASSIGN STRING_VALUE .

    $default  reduce using rule 65 (var)


State 150

   32 var: INT ALPHA ASSIGN DIGIT operation .

    $default  reduce using rule 32 (var)


State 151

   41 var: INT ALPHA ASSIGN ALPHA ARRAY . DIGIT
   43    | INT ALPHA ASSIGN ALPHA ARRAY . ALPHA

    DIGIT  shift, and go to state 172
    ALPHA  shift, and go to state 173


State 152

   33 var: INT ALPHA ASSIGN ALPHA operation .

    $default  reduce using rule 33 (var)


State 153

   39 var: INT ALPHA ASSIGN CONVERT OPEN_P . ALPHA CLOSE_P

    ALPHA  shift, and go to state 174


State 154

   40 var: INT ALPHA ASSIGN LENGTH OPEN_P . ALPHA CLOSE_P

    ALPHA  shift, and go to state 175


State 155

   37 var: INT ALPHA ARRAY DIGIT ASSIGN . digit_array

    DIGIT  shift, and go to state 176

    digit_array  go to state 177


State 156

   42 var: STRING ALPHA ASSIGN ALPHA ARRAY . DIGIT
   44    | STRING ALPHA ASSIGN ALPHA ARRAY . ALPHA

    DIGIT  shift, and go to state 178
    ALPHA  shift, and go to state 179


State 157

   38 var: STRING ALPHA ARRAY DIGIT ASSIGN . alpha_array

    STRING_VALUE  shift, and go to state 180

    alpha_array  go to state 181


State 158

   36 var: CHAR ALPHA ASSIGN ESCAPE ALPHA .

    $default  reduce using rule 36 (var)


State 159

   77 rule: OPEN_P rule operator rule . CLOSE_P

    CLOSE_P  shift, and go to state 182


State 160

   22 program: OPEN_P rule operator rule CLOSE_P . CONDITIONAL WHILE EXEC program END_EXEC program
   23        | OPEN_P rule operator rule CLOSE_P . CONDITIONAL IF EXEC program END_EXEC program
   24        | OPEN_P rule operator rule CLOSE_P . CONDITIONAL IF EXEC program END_EXEC ELSE EXEC program END_EXEC program

    CONDITIONAL  shift, and go to state 183


State 161

   26 get: STDIN OPEN_P ALPHA COMMA DIGIT . CLOSE_P END

    CLOSE_P  shift, and go to state 184


State 162

   31 out: ESCAPE ALPHA ESCAPE out .

    $default  reduce using rule 31 (out)


State 163

   28 out: ESCAPE SPACE_ALPHA ESCAPE out .

    $default  reduce using rule 28 (out)


State 164

   10 params: type ALPHA COMMA params .

    $default  reduce using rule 10 (params)


State 165

    3 function: INT FUNCTION ALPHA OPEN_P params CLOSE_P EXEC program . END_EXEC

    END_EXEC  shift, and go to state 185


State 166

    4 function: STRING FUNCTION ALPHA OPEN_P params CLOSE_P EXEC program . END_EXEC

    END_EXEC  shift, and go to state 186


State 167

    5 function: CHAR FUNCTION ALPHA OPEN_P params CLOSE_P EXEC program . END_EXEC

    END_EXEC  shift, and go to state 187


State 168

   58 var: ALPHA ASSIGN CONVERT OPEN_P ALPHA CLOSE_P .

    $default  reduce using rule 58 (var)


State 169

   59 var: ALPHA ASSIGN LENGTH OPEN_P ALPHA CLOSE_P .

    $default  reduce using rule 59 (var)


State 170

   66 operation: op DIGIT operation .

    $default  reduce using rule 66 (operation)


State 171

   67 operation: op ALPHA operation .

    $default  reduce using rule 67 (operation)


State 172

   41 var: INT ALPHA ASSIGN ALPHA ARRAY DIGIT .

    $default  reduce using rule 41 (var)


State 173

   43 var: INT ALPHA ASSIGN ALPHA ARRAY ALPHA .

    $default  reduce using rule 43 (var)


State 174

   39 var: INT ALPHA ASSIGN CONVERT OPEN_P ALPHA . CLOSE_P

    CLOSE_P  shift, and go to state 188


State 175

   40 var: INT ALPHA ASSIGN LENGTH OPEN_P ALPHA . CLOSE_P

    CLOSE_P  shift, and go to state 189


State 176

   75 digit_array: DIGIT . COMMA digit_array
   76            | DIGIT .

    COMMA  shift, and go to state 190

    $default  reduce using rule 76 (digit_array)


State 177

   37 var: INT ALPHA ARRAY DIGIT ASSIGN digit_array .

    $default  reduce using rule 37 (var)


State 178

   42 var: STRING ALPHA ASSIGN ALPHA ARRAY DIGIT .

    $default  reduce using rule 42 (var)


State 179

   44 var: STRING ALPHA ASSIGN ALPHA ARRAY ALPHA .

    $default  reduce using rule 44 (var)


State 180

   73 alpha_array: STRING_VALUE . COMMA alpha_array
   74            | STRING_VALUE .

    COMMA  shift, and go to state 191

    $default  reduce using rule 74 (alpha_array)


State 181

   38 var: STRING ALPHA ARRAY DIGIT ASSIGN alpha_array .

    $default  reduce using rule 38 (var)


State 182

   77 rule: OPEN_P rule operator rule CLOSE_P .

    $default  reduce using rule 77 (rule)


State 183

   22 program: OPEN_P rule operator rule CLOSE_P CONDITIONAL . WHILE EXEC program END_EXEC program
   23        | OPEN_P rule operator rule CLOSE_P CONDITIONAL . IF EXEC program END_EXEC program
   24        | OPEN_P rule operator rule CLOSE_P CONDITIONAL . IF EXEC program END_EXEC ELSE EXEC program END_EXEC program

    IF     shift, and go to state 192
    WHILE  shift, and go to state 193


State 184

   26 get: STDIN OPEN_P ALPHA COMMA DIGIT CLOSE_P . END

    END  shift, and go to state 194


State 185

    3 function: INT FUNCTION ALPHA OPEN_P params CLOSE_P EXEC program END_EXEC .

    $default  reduce using rule 3 (function)


State 186

    4 function: STRING FUNCTION ALPHA OPEN_P params CLOSE_P EXEC program END_EXEC .

    $default  reduce using rule 4 (function)


State 187

    5 function: CHAR FUNCTION ALPHA OPEN_P params CLOSE_P EXEC program END_EXEC .

    $default  reduce using rule 5 (function)


State 188

   39 var: INT ALPHA ASSIGN CONVERT OPEN_P ALPHA CLOSE_P .

    $default  reduce using rule 39 (var)


State 189

   40 var: INT ALPHA ASSIGN LENGTH OPEN_P ALPHA CLOSE_P .

    $default  reduce using rule 40 (var)


State 190

   75 digit_array: DIGIT COMMA . digit_array

    DIGIT  shift, and go to state 176

    digit_array  go to state 195


State 191

   73 alpha_array: STRING_VALUE COMMA . alpha_array

    STRING_VALUE  shift, and go to state 180

    alpha_array  go to state 196


State 192

   23 program: OPEN_P rule operator rule CLOSE_P CONDITIONAL IF . EXEC program END_EXEC program
   24        | OPEN_P rule operator rule CLOSE_P CONDITIONAL IF . EXEC program END_EXEC ELSE EXEC program END_EXEC program

    EXEC  shift, and go to state 197


State 193

   22 program: OPEN_P rule operator rule CLOSE_P CONDITIONAL WHILE . EXEC program END_EXEC program

    EXEC  shift, and go to state 198


State 194

   26 get: STDIN OPEN_P ALPHA COMMA DIGIT CLOSE_P END .

    $default  reduce using rule 26 (get)


State 195

   75 digit_array: DIGIT COMMA digit_array .

    $default  reduce using rule 75 (digit_array)


State 196

   73 alpha_array: STRING_VALUE COMMA alpha_array .

    $default  reduce using rule 73 (alpha_array)


State 197

   23 program: OPEN_P rule operator rule CLOSE_P CONDITIONAL IF EXEC . program END_EXEC program
   24        | OPEN_P rule operator rule CLOSE_P CONDITIONAL IF EXEC . program END_EXEC ELSE EXEC program END_EXEC program

    ALPHA   shift, and go to state 16
    INT     shift, and go to state 17
    STRING  shift, and go to state 18
    CHAR    shift, and go to state 19
    OPEN_P  shift, and go to state 20
    RETURN  shift, and go to state 21
    STDIN   shift, and go to state 22
    STDOUT  shift, and go to state 23

    $default  reduce using rule 25 (program)

    call     go to state 24
    program  go to state 199
    get      go to state 26
    var      go to state 27


State 198

   22 program: OPEN_P rule operator rule CLOSE_P CONDITIONAL WHILE EXEC . program END_EXEC program

    ALPHA   shift, and go to state 16
    INT     shift, and go to state 17
    STRING  shift, and go to state 18
    CHAR    shift, and go to state 19
    OPEN_P  shift, and go to state 20
    RETURN  shift, and go to state 21
    STDIN   shift, and go to state 22
    STDOUT  shift, and go to state 23

    $default  reduce using rule 25 (program)

    call     go to state 24
    program  go to state 200
    get      go to state 26
    var      go to state 27


State 199

   23 program: OPEN_P rule operator rule CLOSE_P CONDITIONAL IF EXEC program . END_EXEC program
   24        | OPEN_P rule operator rule CLOSE_P CONDITIONAL IF EXEC program . END_EXEC ELSE EXEC program END_EXEC program

    END_EXEC  shift, and go to state 201


State 200

   22 program: OPEN_P rule operator rule CLOSE_P CONDITIONAL WHILE EXEC program . END_EXEC program

    END_EXEC  shift, and go to state 202


State 201

   23 program: OPEN_P rule operator rule CLOSE_P CONDITIONAL IF EXEC program END_EXEC . program
   24        | OPEN_P rule operator rule CLOSE_P CONDITIONAL IF EXEC program END_EXEC . ELSE EXEC program END_EXEC program

    ALPHA   shift, and go to state 16
    INT     shift, and go to state 17
    STRING  shift, and go to state 18
    CHAR    shift, and go to state 19
    OPEN_P  shift, and go to state 20
    ELSE    shift, and go to state 203
    RETURN  shift, and go to state 21
    STDIN   shift, and go to state 22
    STDOUT  shift, and go to state 23

    $default  reduce using rule 25 (program)

    call     go to state 24
    program  go to state 204
    get      go to state 26
    var      go to state 27


State 202

   22 program: OPEN_P rule operator rule CLOSE_P CONDITIONAL WHILE EXEC program END_EXEC . program

    ALPHA   shift, and go to state 16
    INT     shift, and go to state 17
    STRING  shift, and go to state 18
    CHAR    shift, and go to state 19
    OPEN_P  shift, and go to state 20
    RETURN  shift, and go to state 21
    STDIN   shift, and go to state 22
    STDOUT  shift, and go to state 23

    $default  reduce using rule 25 (program)

    call     go to state 24
    program  go to state 205
    get      go to state 26
    var      go to state 27


State 203

   24 program: OPEN_P rule operator rule CLOSE_P CONDITIONAL IF EXEC program END_EXEC ELSE . EXEC program END_EXEC program

    EXEC  shift, and go to state 206


State 204

   23 program: OPEN_P rule operator rule CLOSE_P CONDITIONAL IF EXEC program END_EXEC program .

    $default  reduce using rule 23 (program)


State 205

   22 program: OPEN_P rule operator rule CLOSE_P CONDITIONAL WHILE EXEC program END_EXEC program .

    $default  reduce using rule 22 (program)


State 206

   24 program: OPEN_P rule operator rule CLOSE_P CONDITIONAL IF EXEC program END_EXEC ELSE EXEC . program END_EXEC program

    ALPHA   shift, and go to state 16
    INT     shift, and go to state 17
    STRING  shift, and go to state 18
    CHAR    shift, and go to state 19
    OPEN_P  shift, and go to state 20
    RETURN  shift, and go to state 21
    STDIN   shift, and go to state 22
    STDOUT  shift, and go to state 23

    $default  reduce using rule 25 (program)

    call     go to state 24
    program  go to state 207
    get      go to state 26
    var      go to state 27


State 207

   24 program: OPEN_P rule operator rule CLOSE_P CONDITIONAL IF EXEC program END_EXEC ELSE EXEC program . END_EXEC program

    END_EXEC  shift, and go to state 208


State 208

   24 program: OPEN_P rule operator rule CLOSE_P CONDITIONAL IF EXEC program END_EXEC ELSE EXEC program END_EXEC . program

    ALPHA   shift, and go to state 16
    INT     shift, and go to state 17
    STRING  shift, and go to state 18
    CHAR    shift, and go to state 19
    OPEN_P  shift, and go to state 20
    RETURN  shift, and go to state 21
    STDIN   shift, and go to state 22
    STDOUT  shift, and go to state 23

    $default  reduce using rule 25 (program)

    call     go to state 24
    program  go to state 209
    get      go to state 26
    var      go to state 27


State 209

   24 program: OPEN_P rule operator rule CLOSE_P CONDITIONAL IF EXEC program END_EXEC ELSE EXEC program END_EXEC program .

    $default  reduce using rule 24 (program)
