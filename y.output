Terminals unused in grammar

    ELSE


State 54 conflicts: 1 reduce/reduce
State 55 conflicts: 1 reduce/reduce


Grammar

    0 $accept: start $end

    1 start: MAIN EXEC program END_EXEC
    2      | function start

    3 function: INT FUNCTION ALPHA OPEN_P params CLOSE_P EXEC program END_EXEC
    4         | STRING FUNCTION ALPHA OPEN_P params CLOSE_P EXEC program END_EXEC

    5 type: INT
    6     | STRING

    7 params: type ALPHA
    8       | type ALPHA COMMA params
    9       | %empty

   10 args: assignment
   11     | assignment COMMA args
   12     | call
   13     | %empty

   14 call: ALPHA OPEN_P args CLOSE_P

   15 program: var END program
   16        | call END program
   17        | OPEN_P rule operator rule CLOSE_P CONDITIONAL arrow EXEC program END_EXEC program
   18        | RETURN assignment END
   19        | STDIN OPEN_P ALPHA CLOSE_P END program
   20        | STDOUT out END program
   21        | %empty

   22 out: SPACE_ALPHA out
   23    | ESCAPE SPACE_ALPHA ESCAPE out
   24    | %empty
   25    | ALPHA out
   26    | ESCAPE ALPHA ESCAPE out

   27 var: INT ALPHA ASSIGN DIGIT operation
   28    | STRING ALPHA ASSIGN STRING_VALUE
   29    | INT ALPHA ARRAY DIGIT ASSIGN digit_array
   30    | STRING ALPHA ARRAY DIGIT ASSIGN alpha_array
   31    | INT ALPHA
   32    | STRING ALPHA
   33    | INT ALPHA ARRAY DIGIT
   34    | STRING ALPHA ARRAY DIGIT
   35    | ALPHA ASSIGN DIGIT
   36    | ALPHA ASSIGN STRING_VALUE
   37    | ALPHA ASSIGN assignment operation
   38    | INT ALPHA ASSIGN call
   39    | STRING ALPHA ASSIGN call
   40    | ALPHA ASSIGN call
   41    | ALPHA ARRAY DIGIT ASSIGN DIGIT
   42    | ALPHA ARRAY DIGIT ASSIGN STRING_VALUE

   43 operation: op DIGIT operation
   44          | %empty

   45 assignment: ALPHA
   46           | DIGIT
   47           | STRING_VALUE

   48 alpha_array: STRING_VALUE COMMA alpha_array
   49            | STRING_VALUE

   50 digit_array: DIGIT COMMA digit_array
   51            | DIGIT

   52 rule: OPEN_P rule operator rule CLOSE_P
   53     | assignment

   54 arrow: WHILE
   55      | IF

   56 operator: op
   57         | L
   58         | G
   59         | LE
   60         | GE
   61         | EQ
   62         | NE
   63         | NOT
   64         | OR
   65         | AND

   66 op: PLUS
   67   | MINUS
   68   | DIV
   69   | TIMES


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    DIGIT <stringValue> (258) 27 29 30 33 34 35 41 42 43 46 50 51
    ALPHA <stringValue> (259) 3 4 7 8 14 19 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 45
    SPACE_ALPHA <stringValue> (260) 22 23
    STRING_VALUE <stringValue> (261) 28 36 42 47 48 49
    INT <stringValue> (262) 3 5 27 29 31 33 38
    STRING <stringValue> (263) 4 6 28 30 32 34 39
    PLUS <stringValue> (264) 66
    MINUS <stringValue> (265) 67
    TIMES <stringValue> (266) 69
    DIV <stringValue> (267) 68
    END (268) 15 16 18 19 20
    OPEN_P (269) 3 4 14 17 19 52
    CLOSE_P (270) 3 4 14 17 19 52
    CONDITIONAL (271) 17
    EXEC (272) 1 3 4 17
    END_EXEC (273) 1 3 4 17
    IF (274) 55
    ELSE (275)
    ESCAPE (276) 23 26
    WHILE (277) 54
    L (278) 57
    G (279) 58
    LE (280) 59
    GE (281) 60
    EQ (282) 61
    NE (283) 62
    NOT (284) 63
    OR (285) 64
    AND (286) 65
    ASSIGN (287) 27 28 29 30 35 36 37 38 39 40 41 42
    RETURN (288) 18
    MAIN (289) 1
    STDIN (290) 19
    STDOUT (291) 20
    FUNCTION (292) 3 4
    COMMA (293) 8 11 48 50
    ARRAY (294) 29 30 33 34 41 42


Nonterminals, with rules where they appear

    $accept (40)
        on left: 0
    start <stringValue> (41)
        on left: 1 2
        on right: 0 2
    function <stringValue> (42)
        on left: 3 4
        on right: 2
    type <stringValue> (43)
        on left: 5 6
        on right: 7 8
    params <stringValue> (44)
        on left: 7 8 9
        on right: 3 4 8
    args <stringValue> (45)
        on left: 10 11 12 13
        on right: 11 14
    call <stringValue> (46)
        on left: 14
        on right: 12 16 38 39 40
    program <stringValue> (47)
        on left: 15 16 17 18 19 20 21
        on right: 1 3 4 15 16 17 19 20
    out <stringValue> (48)
        on left: 22 23 24 25 26
        on right: 20 22 23 25 26
    var <stringValue> (49)
        on left: 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42
        on right: 15
    operation <stringValue> (50)
        on left: 43 44
        on right: 27 37 43
    assignment <stringValue> (51)
        on left: 45 46 47
        on right: 10 11 18 37 53
    alpha_array <stringValue> (52)
        on left: 48 49
        on right: 30 48
    digit_array <stringValue> (53)
        on left: 50 51
        on right: 29 50
    rule <stringValue> (54)
        on left: 52 53
        on right: 17 52
    arrow <stringValue> (55)
        on left: 54 55
        on right: 17
    operator <stringValue> (56)
        on left: 56 57 58 59 60 61 62 63 64 65
        on right: 17 52
    op <stringValue> (57)
        on left: 66 67 68 69
        on right: 43 56


State 0

    0 $accept: . start $end

    INT     shift, and go to state 1
    STRING  shift, and go to state 2
    MAIN    shift, and go to state 3

    start     go to state 4
    function  go to state 5


State 1

    3 function: INT . FUNCTION ALPHA OPEN_P params CLOSE_P EXEC program END_EXEC

    FUNCTION  shift, and go to state 6


State 2

    4 function: STRING . FUNCTION ALPHA OPEN_P params CLOSE_P EXEC program END_EXEC

    FUNCTION  shift, and go to state 7


State 3

    1 start: MAIN . EXEC program END_EXEC

    EXEC  shift, and go to state 8


State 4

    0 $accept: start . $end

    $end  shift, and go to state 9


State 5

    2 start: function . start

    INT     shift, and go to state 1
    STRING  shift, and go to state 2
    MAIN    shift, and go to state 3

    start     go to state 10
    function  go to state 5


State 6

    3 function: INT FUNCTION . ALPHA OPEN_P params CLOSE_P EXEC program END_EXEC

    ALPHA  shift, and go to state 11


State 7

    4 function: STRING FUNCTION . ALPHA OPEN_P params CLOSE_P EXEC program END_EXEC

    ALPHA  shift, and go to state 12


State 8

    1 start: MAIN EXEC . program END_EXEC

    ALPHA   shift, and go to state 13
    INT     shift, and go to state 14
    STRING  shift, and go to state 15
    OPEN_P  shift, and go to state 16
    RETURN  shift, and go to state 17
    STDIN   shift, and go to state 18
    STDOUT  shift, and go to state 19

    $default  reduce using rule 21 (program)

    call     go to state 20
    program  go to state 21
    var      go to state 22


State 9

    0 $accept: start $end .

    $default  accept


State 10

    2 start: function start .

    $default  reduce using rule 2 (start)


State 11

    3 function: INT FUNCTION ALPHA . OPEN_P params CLOSE_P EXEC program END_EXEC

    OPEN_P  shift, and go to state 23


State 12

    4 function: STRING FUNCTION ALPHA . OPEN_P params CLOSE_P EXEC program END_EXEC

    OPEN_P  shift, and go to state 24


State 13

   14 call: ALPHA . OPEN_P args CLOSE_P
   35 var: ALPHA . ASSIGN DIGIT
   36    | ALPHA . ASSIGN STRING_VALUE
   37    | ALPHA . ASSIGN assignment operation
   40    | ALPHA . ASSIGN call
   41    | ALPHA . ARRAY DIGIT ASSIGN DIGIT
   42    | ALPHA . ARRAY DIGIT ASSIGN STRING_VALUE

    OPEN_P  shift, and go to state 25
    ASSIGN  shift, and go to state 26
    ARRAY   shift, and go to state 27


State 14

   27 var: INT . ALPHA ASSIGN DIGIT operation
   29    | INT . ALPHA ARRAY DIGIT ASSIGN digit_array
   31    | INT . ALPHA
   33    | INT . ALPHA ARRAY DIGIT
   38    | INT . ALPHA ASSIGN call

    ALPHA  shift, and go to state 28


State 15

   28 var: STRING . ALPHA ASSIGN STRING_VALUE
   30    | STRING . ALPHA ARRAY DIGIT ASSIGN alpha_array
   32    | STRING . ALPHA
   34    | STRING . ALPHA ARRAY DIGIT
   39    | STRING . ALPHA ASSIGN call

    ALPHA  shift, and go to state 29


State 16

   17 program: OPEN_P . rule operator rule CLOSE_P CONDITIONAL arrow EXEC program END_EXEC program

    DIGIT         shift, and go to state 30
    ALPHA         shift, and go to state 31
    STRING_VALUE  shift, and go to state 32
    OPEN_P        shift, and go to state 33

    assignment  go to state 34
    rule        go to state 35


State 17

   18 program: RETURN . assignment END

    DIGIT         shift, and go to state 30
    ALPHA         shift, and go to state 31
    STRING_VALUE  shift, and go to state 32

    assignment  go to state 36


State 18

   19 program: STDIN . OPEN_P ALPHA CLOSE_P END program

    OPEN_P  shift, and go to state 37


State 19

   20 program: STDOUT . out END program

    ALPHA        shift, and go to state 38
    SPACE_ALPHA  shift, and go to state 39
    ESCAPE       shift, and go to state 40

    $default  reduce using rule 24 (out)

    out  go to state 41


State 20

   16 program: call . END program

    END  shift, and go to state 42


State 21

    1 start: MAIN EXEC program . END_EXEC

    END_EXEC  shift, and go to state 43


State 22

   15 program: var . END program

    END  shift, and go to state 44


State 23

    3 function: INT FUNCTION ALPHA OPEN_P . params CLOSE_P EXEC program END_EXEC

    INT     shift, and go to state 45
    STRING  shift, and go to state 46

    $default  reduce using rule 9 (params)

    type    go to state 47
    params  go to state 48


State 24

    4 function: STRING FUNCTION ALPHA OPEN_P . params CLOSE_P EXEC program END_EXEC

    INT     shift, and go to state 45
    STRING  shift, and go to state 46

    $default  reduce using rule 9 (params)

    type    go to state 47
    params  go to state 49


State 25

   14 call: ALPHA OPEN_P . args CLOSE_P

    DIGIT         shift, and go to state 30
    ALPHA         shift, and go to state 50
    STRING_VALUE  shift, and go to state 32

    $default  reduce using rule 13 (args)

    args        go to state 51
    call        go to state 52
    assignment  go to state 53


State 26

   35 var: ALPHA ASSIGN . DIGIT
   36    | ALPHA ASSIGN . STRING_VALUE
   37    | ALPHA ASSIGN . assignment operation
   40    | ALPHA ASSIGN . call

    DIGIT         shift, and go to state 54
    ALPHA         shift, and go to state 50
    STRING_VALUE  shift, and go to state 55

    call        go to state 56
    assignment  go to state 57


State 27

   41 var: ALPHA ARRAY . DIGIT ASSIGN DIGIT
   42    | ALPHA ARRAY . DIGIT ASSIGN STRING_VALUE

    DIGIT  shift, and go to state 58


State 28

   27 var: INT ALPHA . ASSIGN DIGIT operation
   29    | INT ALPHA . ARRAY DIGIT ASSIGN digit_array
   31    | INT ALPHA .
   33    | INT ALPHA . ARRAY DIGIT
   38    | INT ALPHA . ASSIGN call

    ASSIGN  shift, and go to state 59
    ARRAY   shift, and go to state 60

    $default  reduce using rule 31 (var)


State 29

   28 var: STRING ALPHA . ASSIGN STRING_VALUE
   30    | STRING ALPHA . ARRAY DIGIT ASSIGN alpha_array
   32    | STRING ALPHA .
   34    | STRING ALPHA . ARRAY DIGIT
   39    | STRING ALPHA . ASSIGN call

    ASSIGN  shift, and go to state 61
    ARRAY   shift, and go to state 62

    $default  reduce using rule 32 (var)


State 30

   46 assignment: DIGIT .

    $default  reduce using rule 46 (assignment)


State 31

   45 assignment: ALPHA .

    $default  reduce using rule 45 (assignment)


State 32

   47 assignment: STRING_VALUE .

    $default  reduce using rule 47 (assignment)


State 33

   52 rule: OPEN_P . rule operator rule CLOSE_P

    DIGIT         shift, and go to state 30
    ALPHA         shift, and go to state 31
    STRING_VALUE  shift, and go to state 32
    OPEN_P        shift, and go to state 33

    assignment  go to state 34
    rule        go to state 63


State 34

   53 rule: assignment .

    $default  reduce using rule 53 (rule)


State 35

   17 program: OPEN_P rule . operator rule CLOSE_P CONDITIONAL arrow EXEC program END_EXEC program

    PLUS   shift, and go to state 64
    MINUS  shift, and go to state 65
    TIMES  shift, and go to state 66
    DIV    shift, and go to state 67
    L      shift, and go to state 68
    G      shift, and go to state 69
    LE     shift, and go to state 70
    GE     shift, and go to state 71
    EQ     shift, and go to state 72
    NE     shift, and go to state 73
    NOT    shift, and go to state 74
    OR     shift, and go to state 75
    AND    shift, and go to state 76

    operator  go to state 77
    op        go to state 78


State 36

   18 program: RETURN assignment . END

    END  shift, and go to state 79


State 37

   19 program: STDIN OPEN_P . ALPHA CLOSE_P END program

    ALPHA  shift, and go to state 80


State 38

   25 out: ALPHA . out

    ALPHA        shift, and go to state 38
    SPACE_ALPHA  shift, and go to state 39
    ESCAPE       shift, and go to state 40

    $default  reduce using rule 24 (out)

    out  go to state 81


State 39

   22 out: SPACE_ALPHA . out

    ALPHA        shift, and go to state 38
    SPACE_ALPHA  shift, and go to state 39
    ESCAPE       shift, and go to state 40

    $default  reduce using rule 24 (out)

    out  go to state 82


State 40

   23 out: ESCAPE . SPACE_ALPHA ESCAPE out
   26    | ESCAPE . ALPHA ESCAPE out

    ALPHA        shift, and go to state 83
    SPACE_ALPHA  shift, and go to state 84


State 41

   20 program: STDOUT out . END program

    END  shift, and go to state 85


State 42

   16 program: call END . program

    ALPHA   shift, and go to state 13
    INT     shift, and go to state 14
    STRING  shift, and go to state 15
    OPEN_P  shift, and go to state 16
    RETURN  shift, and go to state 17
    STDIN   shift, and go to state 18
    STDOUT  shift, and go to state 19

    $default  reduce using rule 21 (program)

    call     go to state 20
    program  go to state 86
    var      go to state 22


State 43

    1 start: MAIN EXEC program END_EXEC .

    $default  reduce using rule 1 (start)


State 44

   15 program: var END . program

    ALPHA   shift, and go to state 13
    INT     shift, and go to state 14
    STRING  shift, and go to state 15
    OPEN_P  shift, and go to state 16
    RETURN  shift, and go to state 17
    STDIN   shift, and go to state 18
    STDOUT  shift, and go to state 19

    $default  reduce using rule 21 (program)

    call     go to state 20
    program  go to state 87
    var      go to state 22


State 45

    5 type: INT .

    $default  reduce using rule 5 (type)


State 46

    6 type: STRING .

    $default  reduce using rule 6 (type)


State 47

    7 params: type . ALPHA
    8       | type . ALPHA COMMA params

    ALPHA  shift, and go to state 88


State 48

    3 function: INT FUNCTION ALPHA OPEN_P params . CLOSE_P EXEC program END_EXEC

    CLOSE_P  shift, and go to state 89


State 49

    4 function: STRING FUNCTION ALPHA OPEN_P params . CLOSE_P EXEC program END_EXEC

    CLOSE_P  shift, and go to state 90


State 50

   14 call: ALPHA . OPEN_P args CLOSE_P
   45 assignment: ALPHA .

    OPEN_P  shift, and go to state 25

    $default  reduce using rule 45 (assignment)


State 51

   14 call: ALPHA OPEN_P args . CLOSE_P

    CLOSE_P  shift, and go to state 91


State 52

   12 args: call .

    $default  reduce using rule 12 (args)


State 53

   10 args: assignment .
   11     | assignment . COMMA args

    COMMA  shift, and go to state 92

    $default  reduce using rule 10 (args)


State 54

   35 var: ALPHA ASSIGN DIGIT .
   46 assignment: DIGIT .

    END       reduce using rule 35 (var)
    END       [reduce using rule 46 (assignment)]
    $default  reduce using rule 46 (assignment)


State 55

   36 var: ALPHA ASSIGN STRING_VALUE .
   47 assignment: STRING_VALUE .

    END       reduce using rule 36 (var)
    END       [reduce using rule 47 (assignment)]
    $default  reduce using rule 47 (assignment)


State 56

   40 var: ALPHA ASSIGN call .

    $default  reduce using rule 40 (var)


State 57

   37 var: ALPHA ASSIGN assignment . operation

    PLUS   shift, and go to state 64
    MINUS  shift, and go to state 65
    TIMES  shift, and go to state 66
    DIV    shift, and go to state 67

    $default  reduce using rule 44 (operation)

    operation  go to state 93
    op         go to state 94


State 58

   41 var: ALPHA ARRAY DIGIT . ASSIGN DIGIT
   42    | ALPHA ARRAY DIGIT . ASSIGN STRING_VALUE

    ASSIGN  shift, and go to state 95


State 59

   27 var: INT ALPHA ASSIGN . DIGIT operation
   38    | INT ALPHA ASSIGN . call

    DIGIT  shift, and go to state 96
    ALPHA  shift, and go to state 97

    call  go to state 98


State 60

   29 var: INT ALPHA ARRAY . DIGIT ASSIGN digit_array
   33    | INT ALPHA ARRAY . DIGIT

    DIGIT  shift, and go to state 99


State 61

   28 var: STRING ALPHA ASSIGN . STRING_VALUE
   39    | STRING ALPHA ASSIGN . call

    ALPHA         shift, and go to state 97
    STRING_VALUE  shift, and go to state 100

    call  go to state 101


State 62

   30 var: STRING ALPHA ARRAY . DIGIT ASSIGN alpha_array
   34    | STRING ALPHA ARRAY . DIGIT

    DIGIT  shift, and go to state 102


State 63

   52 rule: OPEN_P rule . operator rule CLOSE_P

    PLUS   shift, and go to state 64
    MINUS  shift, and go to state 65
    TIMES  shift, and go to state 66
    DIV    shift, and go to state 67
    L      shift, and go to state 68
    G      shift, and go to state 69
    LE     shift, and go to state 70
    GE     shift, and go to state 71
    EQ     shift, and go to state 72
    NE     shift, and go to state 73
    NOT    shift, and go to state 74
    OR     shift, and go to state 75
    AND    shift, and go to state 76

    operator  go to state 103
    op        go to state 78


State 64

   66 op: PLUS .

    $default  reduce using rule 66 (op)


State 65

   67 op: MINUS .

    $default  reduce using rule 67 (op)


State 66

   69 op: TIMES .

    $default  reduce using rule 69 (op)


State 67

   68 op: DIV .

    $default  reduce using rule 68 (op)


State 68

   57 operator: L .

    $default  reduce using rule 57 (operator)


State 69

   58 operator: G .

    $default  reduce using rule 58 (operator)


State 70

   59 operator: LE .

    $default  reduce using rule 59 (operator)


State 71

   60 operator: GE .

    $default  reduce using rule 60 (operator)


State 72

   61 operator: EQ .

    $default  reduce using rule 61 (operator)


State 73

   62 operator: NE .

    $default  reduce using rule 62 (operator)


State 74

   63 operator: NOT .

    $default  reduce using rule 63 (operator)


State 75

   64 operator: OR .

    $default  reduce using rule 64 (operator)


State 76

   65 operator: AND .

    $default  reduce using rule 65 (operator)


State 77

   17 program: OPEN_P rule operator . rule CLOSE_P CONDITIONAL arrow EXEC program END_EXEC program

    DIGIT         shift, and go to state 30
    ALPHA         shift, and go to state 31
    STRING_VALUE  shift, and go to state 32
    OPEN_P        shift, and go to state 33

    assignment  go to state 34
    rule        go to state 104


State 78

   56 operator: op .

    $default  reduce using rule 56 (operator)


State 79

   18 program: RETURN assignment END .

    $default  reduce using rule 18 (program)


State 80

   19 program: STDIN OPEN_P ALPHA . CLOSE_P END program

    CLOSE_P  shift, and go to state 105


State 81

   25 out: ALPHA out .

    $default  reduce using rule 25 (out)


State 82

   22 out: SPACE_ALPHA out .

    $default  reduce using rule 22 (out)


State 83

   26 out: ESCAPE ALPHA . ESCAPE out

    ESCAPE  shift, and go to state 106


State 84

   23 out: ESCAPE SPACE_ALPHA . ESCAPE out

    ESCAPE  shift, and go to state 107


State 85

   20 program: STDOUT out END . program

    ALPHA   shift, and go to state 13
    INT     shift, and go to state 14
    STRING  shift, and go to state 15
    OPEN_P  shift, and go to state 16
    RETURN  shift, and go to state 17
    STDIN   shift, and go to state 18
    STDOUT  shift, and go to state 19

    $default  reduce using rule 21 (program)

    call     go to state 20
    program  go to state 108
    var      go to state 22


State 86

   16 program: call END program .

    $default  reduce using rule 16 (program)


State 87

   15 program: var END program .

    $default  reduce using rule 15 (program)


State 88

    7 params: type ALPHA .
    8       | type ALPHA . COMMA params

    COMMA  shift, and go to state 109

    $default  reduce using rule 7 (params)


State 89

    3 function: INT FUNCTION ALPHA OPEN_P params CLOSE_P . EXEC program END_EXEC

    EXEC  shift, and go to state 110


State 90

    4 function: STRING FUNCTION ALPHA OPEN_P params CLOSE_P . EXEC program END_EXEC

    EXEC  shift, and go to state 111


State 91

   14 call: ALPHA OPEN_P args CLOSE_P .

    $default  reduce using rule 14 (call)


State 92

   11 args: assignment COMMA . args

    DIGIT         shift, and go to state 30
    ALPHA         shift, and go to state 50
    STRING_VALUE  shift, and go to state 32

    $default  reduce using rule 13 (args)

    args        go to state 112
    call        go to state 52
    assignment  go to state 53


State 93

   37 var: ALPHA ASSIGN assignment operation .

    $default  reduce using rule 37 (var)


State 94

   43 operation: op . DIGIT operation

    DIGIT  shift, and go to state 113


State 95

   41 var: ALPHA ARRAY DIGIT ASSIGN . DIGIT
   42    | ALPHA ARRAY DIGIT ASSIGN . STRING_VALUE

    DIGIT         shift, and go to state 114
    STRING_VALUE  shift, and go to state 115


State 96

   27 var: INT ALPHA ASSIGN DIGIT . operation

    PLUS   shift, and go to state 64
    MINUS  shift, and go to state 65
    TIMES  shift, and go to state 66
    DIV    shift, and go to state 67

    $default  reduce using rule 44 (operation)

    operation  go to state 116
    op         go to state 94


State 97

   14 call: ALPHA . OPEN_P args CLOSE_P

    OPEN_P  shift, and go to state 25


State 98

   38 var: INT ALPHA ASSIGN call .

    $default  reduce using rule 38 (var)


State 99

   29 var: INT ALPHA ARRAY DIGIT . ASSIGN digit_array
   33    | INT ALPHA ARRAY DIGIT .

    ASSIGN  shift, and go to state 117

    $default  reduce using rule 33 (var)


State 100

   28 var: STRING ALPHA ASSIGN STRING_VALUE .

    $default  reduce using rule 28 (var)


State 101

   39 var: STRING ALPHA ASSIGN call .

    $default  reduce using rule 39 (var)


State 102

   30 var: STRING ALPHA ARRAY DIGIT . ASSIGN alpha_array
   34    | STRING ALPHA ARRAY DIGIT .

    ASSIGN  shift, and go to state 118

    $default  reduce using rule 34 (var)


State 103

   52 rule: OPEN_P rule operator . rule CLOSE_P

    DIGIT         shift, and go to state 30
    ALPHA         shift, and go to state 31
    STRING_VALUE  shift, and go to state 32
    OPEN_P        shift, and go to state 33

    assignment  go to state 34
    rule        go to state 119


State 104

   17 program: OPEN_P rule operator rule . CLOSE_P CONDITIONAL arrow EXEC program END_EXEC program

    CLOSE_P  shift, and go to state 120


State 105

   19 program: STDIN OPEN_P ALPHA CLOSE_P . END program

    END  shift, and go to state 121


State 106

   26 out: ESCAPE ALPHA ESCAPE . out

    ALPHA        shift, and go to state 38
    SPACE_ALPHA  shift, and go to state 39
    ESCAPE       shift, and go to state 40

    $default  reduce using rule 24 (out)

    out  go to state 122


State 107

   23 out: ESCAPE SPACE_ALPHA ESCAPE . out

    ALPHA        shift, and go to state 38
    SPACE_ALPHA  shift, and go to state 39
    ESCAPE       shift, and go to state 40

    $default  reduce using rule 24 (out)

    out  go to state 123


State 108

   20 program: STDOUT out END program .

    $default  reduce using rule 20 (program)


State 109

    8 params: type ALPHA COMMA . params

    INT     shift, and go to state 45
    STRING  shift, and go to state 46

    $default  reduce using rule 9 (params)

    type    go to state 47
    params  go to state 124


State 110

    3 function: INT FUNCTION ALPHA OPEN_P params CLOSE_P EXEC . program END_EXEC

    ALPHA   shift, and go to state 13
    INT     shift, and go to state 14
    STRING  shift, and go to state 15
    OPEN_P  shift, and go to state 16
    RETURN  shift, and go to state 17
    STDIN   shift, and go to state 18
    STDOUT  shift, and go to state 19

    $default  reduce using rule 21 (program)

    call     go to state 20
    program  go to state 125
    var      go to state 22


State 111

    4 function: STRING FUNCTION ALPHA OPEN_P params CLOSE_P EXEC . program END_EXEC

    ALPHA   shift, and go to state 13
    INT     shift, and go to state 14
    STRING  shift, and go to state 15
    OPEN_P  shift, and go to state 16
    RETURN  shift, and go to state 17
    STDIN   shift, and go to state 18
    STDOUT  shift, and go to state 19

    $default  reduce using rule 21 (program)

    call     go to state 20
    program  go to state 126
    var      go to state 22


State 112

   11 args: assignment COMMA args .

    $default  reduce using rule 11 (args)


State 113

   43 operation: op DIGIT . operation

    PLUS   shift, and go to state 64
    MINUS  shift, and go to state 65
    TIMES  shift, and go to state 66
    DIV    shift, and go to state 67

    $default  reduce using rule 44 (operation)

    operation  go to state 127
    op         go to state 94


State 114

   41 var: ALPHA ARRAY DIGIT ASSIGN DIGIT .

    $default  reduce using rule 41 (var)


State 115

   42 var: ALPHA ARRAY DIGIT ASSIGN STRING_VALUE .

    $default  reduce using rule 42 (var)


State 116

   27 var: INT ALPHA ASSIGN DIGIT operation .

    $default  reduce using rule 27 (var)


State 117

   29 var: INT ALPHA ARRAY DIGIT ASSIGN . digit_array

    DIGIT  shift, and go to state 128

    digit_array  go to state 129


State 118

   30 var: STRING ALPHA ARRAY DIGIT ASSIGN . alpha_array

    STRING_VALUE  shift, and go to state 130

    alpha_array  go to state 131


State 119

   52 rule: OPEN_P rule operator rule . CLOSE_P

    CLOSE_P  shift, and go to state 132


State 120

   17 program: OPEN_P rule operator rule CLOSE_P . CONDITIONAL arrow EXEC program END_EXEC program

    CONDITIONAL  shift, and go to state 133


State 121

   19 program: STDIN OPEN_P ALPHA CLOSE_P END . program

    ALPHA   shift, and go to state 13
    INT     shift, and go to state 14
    STRING  shift, and go to state 15
    OPEN_P  shift, and go to state 16
    RETURN  shift, and go to state 17
    STDIN   shift, and go to state 18
    STDOUT  shift, and go to state 19

    $default  reduce using rule 21 (program)

    call     go to state 20
    program  go to state 134
    var      go to state 22


State 122

   26 out: ESCAPE ALPHA ESCAPE out .

    $default  reduce using rule 26 (out)


State 123

   23 out: ESCAPE SPACE_ALPHA ESCAPE out .

    $default  reduce using rule 23 (out)


State 124

    8 params: type ALPHA COMMA params .

    $default  reduce using rule 8 (params)


State 125

    3 function: INT FUNCTION ALPHA OPEN_P params CLOSE_P EXEC program . END_EXEC

    END_EXEC  shift, and go to state 135


State 126

    4 function: STRING FUNCTION ALPHA OPEN_P params CLOSE_P EXEC program . END_EXEC

    END_EXEC  shift, and go to state 136


State 127

   43 operation: op DIGIT operation .

    $default  reduce using rule 43 (operation)


State 128

   50 digit_array: DIGIT . COMMA digit_array
   51            | DIGIT .

    COMMA  shift, and go to state 137

    $default  reduce using rule 51 (digit_array)


State 129

   29 var: INT ALPHA ARRAY DIGIT ASSIGN digit_array .

    $default  reduce using rule 29 (var)


State 130

   48 alpha_array: STRING_VALUE . COMMA alpha_array
   49            | STRING_VALUE .

    COMMA  shift, and go to state 138

    $default  reduce using rule 49 (alpha_array)


State 131

   30 var: STRING ALPHA ARRAY DIGIT ASSIGN alpha_array .

    $default  reduce using rule 30 (var)


State 132

   52 rule: OPEN_P rule operator rule CLOSE_P .

    $default  reduce using rule 52 (rule)


State 133

   17 program: OPEN_P rule operator rule CLOSE_P CONDITIONAL . arrow EXEC program END_EXEC program

    IF     shift, and go to state 139
    WHILE  shift, and go to state 140

    arrow  go to state 141


State 134

   19 program: STDIN OPEN_P ALPHA CLOSE_P END program .

    $default  reduce using rule 19 (program)


State 135

    3 function: INT FUNCTION ALPHA OPEN_P params CLOSE_P EXEC program END_EXEC .

    $default  reduce using rule 3 (function)


State 136

    4 function: STRING FUNCTION ALPHA OPEN_P params CLOSE_P EXEC program END_EXEC .

    $default  reduce using rule 4 (function)


State 137

   50 digit_array: DIGIT COMMA . digit_array

    DIGIT  shift, and go to state 128

    digit_array  go to state 142


State 138

   48 alpha_array: STRING_VALUE COMMA . alpha_array

    STRING_VALUE  shift, and go to state 130

    alpha_array  go to state 143


State 139

   55 arrow: IF .

    $default  reduce using rule 55 (arrow)


State 140

   54 arrow: WHILE .

    $default  reduce using rule 54 (arrow)


State 141

   17 program: OPEN_P rule operator rule CLOSE_P CONDITIONAL arrow . EXEC program END_EXEC program

    EXEC  shift, and go to state 144


State 142

   50 digit_array: DIGIT COMMA digit_array .

    $default  reduce using rule 50 (digit_array)


State 143

   48 alpha_array: STRING_VALUE COMMA alpha_array .

    $default  reduce using rule 48 (alpha_array)


State 144

   17 program: OPEN_P rule operator rule CLOSE_P CONDITIONAL arrow EXEC . program END_EXEC program

    ALPHA   shift, and go to state 13
    INT     shift, and go to state 14
    STRING  shift, and go to state 15
    OPEN_P  shift, and go to state 16
    RETURN  shift, and go to state 17
    STDIN   shift, and go to state 18
    STDOUT  shift, and go to state 19

    $default  reduce using rule 21 (program)

    call     go to state 20
    program  go to state 145
    var      go to state 22


State 145

   17 program: OPEN_P rule operator rule CLOSE_P CONDITIONAL arrow EXEC program . END_EXEC program

    END_EXEC  shift, and go to state 146


State 146

   17 program: OPEN_P rule operator rule CLOSE_P CONDITIONAL arrow EXEC program END_EXEC . program

    ALPHA   shift, and go to state 13
    INT     shift, and go to state 14
    STRING  shift, and go to state 15
    OPEN_P  shift, and go to state 16
    RETURN  shift, and go to state 17
    STDIN   shift, and go to state 18
    STDOUT  shift, and go to state 19

    $default  reduce using rule 21 (program)

    call     go to state 20
    program  go to state 147
    var      go to state 22


State 147

   17 program: OPEN_P rule operator rule CLOSE_P CONDITIONAL arrow EXEC program END_EXEC program .

    $default  reduce using rule 17 (program)
