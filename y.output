Nonterminals useless in grammar

    arrow


Rules useless in grammar

  100 arrow: WHILE
  101      | IF


State 65 conflicts: 1 reduce/reduce
State 66 conflicts: 1 reduce/reduce
State 67 conflicts: 1 reduce/reduce
State 113 conflicts: 1 reduce/reduce


Grammar

    0 $accept: start $end

    1 start: MAIN EXEC program END_EXEC
    2      | function start

    3 function: INT FUNCTION ALPHA OPEN_P params CLOSE_P EXEC program END_EXEC
    4         | STRING FUNCTION ALPHA OPEN_P params CLOSE_P EXEC program END_EXEC
    5         | CHAR FUNCTION ALPHA OPEN_P params CLOSE_P EXEC program END_EXEC

    6 type: INT
    7     | STRING
    8     | CHAR

    9 params: type ALPHA
   10       | type ALPHA COMMA params
   11       | %empty

   12 args: assignment
   13     | assignment COMMA args
   14     | call
   15     | %empty

   16 call: ALPHA OPEN_P args CLOSE_P

   17 program: var END program
   18        | call END program
   19        | RETURN assignment END
   20        | get program
   21        | STDOUT out END program
   22        | OPEN_P rule operator rule CLOSE_P CONDITIONAL WHILE EXEC program END_EXEC program
   23        | OPEN_P rule operator rule CLOSE_P CONDITIONAL IF EXEC program END_EXEC program
   24        | OPEN_P rule operator rule CLOSE_P CONDITIONAL IF EXEC program END_EXEC ELSE EXEC program END_EXEC program
   25        | %empty

   26 get: STDIN OPEN_P ALPHA COMMA DIGIT CLOSE_P END

   27 out: SPACE_ALPHA out
   28    | ESCAPE SPACE_ALPHA ESCAPE out
   29    | %empty
   30    | ALPHA out
   31    | ESCAPE ALPHA ESCAPE out

   32 var: INT ALPHA ASSIGN DIGIT operation
   33    | INT ALPHA ASSIGN ALPHA operation
   34    | STRING ALPHA ASSIGN STRING_VALUE
   35    | STRING ALPHA ASSIGN ALPHA
   36    | CHAR ALPHA ASSIGN ESCAPE ALPHA
   37    | INT ALPHA ARRAY DIGIT ASSIGN digit_array
   38    | STRING ALPHA ARRAY DIGIT ASSIGN alpha_array
   39    | CHAR ALPHA ARRAY DIGIT ASSIGN char_array
   40    | INT ALPHA ASSIGN CONVERT OPEN_P ALPHA CLOSE_P
   41    | INT ALPHA ASSIGN LENGTH OPEN_P ALPHA CLOSE_P
   42    | INT ALPHA ASSIGN ALPHA ARRAY DIGIT
   43    | STRING ALPHA ASSIGN ALPHA ARRAY DIGIT
   44    | INT ALPHA ASSIGN ALPHA ARRAY ALPHA
   45    | STRING ALPHA ASSIGN ALPHA ARRAY ALPHA
   46    | CHAR ALPHA ASSIGN ALPHA
   47    | CHAR ALPHA ASSIGN ALPHA ARRAY DIGIT
   48    | CHAR ALPHA ASSIGN ALPHA ARRAY ALPHA
   49    | INT ALPHA
   50    | CHAR ALPHA
   51    | STRING ALPHA
   52    | INT ALPHA ARRAY DIGIT
   53    | STRING ALPHA ARRAY DIGIT
   54    | CHAR ALPHA ARRAY DIGIT
   55    | ALPHA ASSIGN ALPHA
   56    | ALPHA ASSIGN ESCAPE ALPHA
   57    | ALPHA ASSIGN DIGIT
   58    | ALPHA ASSIGN STRING_VALUE
   59    | ALPHA ASSIGN assignment operation
   60    | ALPHA ASSIGN ALPHA ARRAY DIGIT
   61    | ALPHA ASSIGN ALPHA ARRAY ALPHA
   62    | ALPHA ASSIGN CONVERT OPEN_P ALPHA CLOSE_P
   63    | ALPHA ASSIGN LENGTH OPEN_P ALPHA CLOSE_P
   64    | INT ALPHA ASSIGN call
   65    | STRING ALPHA ASSIGN call
   66    | CHAR ALPHA ASSIGN call
   67    | ALPHA ASSIGN call
   68    | ALPHA ARRAY DIGIT ASSIGN DIGIT
   69    | ALPHA ARRAY DIGIT ASSIGN ESCAPE ALPHA
   70    | ALPHA ARRAY DIGIT ASSIGN STRING_VALUE

   71 operation: op DIGIT operation
   72          | op ALPHA operation
   73          | %empty

   74 assignment: ALPHA
   75           | DIGIT
   76           | STRING_VALUE
   77           | ESCAPE ALPHA

   78 alpha_array: STRING_VALUE COMMA alpha_array
   79            | STRING_VALUE

   80 digit_array: DIGIT COMMA digit_array
   81            | DIGIT

   82 char_array: ESCAPE ALPHA COMMA char_array
   83           | ESCAPE ALPHA

   84 rule: OPEN_P rule operator rule CLOSE_P
   85     | assignment

   86 operator: op
   87         | L
   88         | G
   89         | LE
   90         | GE
   91         | EQ
   92         | NE
   93         | OR
   94         | AND

   95 op: PLUS
   96   | MINUS
   97   | DIV
   98   | TIMES
   99   | MOD


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    DIGIT <stringValue> (258) 26 32 37 38 39 42 43 47 52 53 54 57 60 68 69 70 71 75 80 81
    ALPHA <stringValue> (259) 3 4 5 9 10 16 26 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 72 74 77 82 83
    SPACE_ALPHA <stringValue> (260) 27 28
    STRING_VALUE <stringValue> (261) 34 58 70 76 78 79
    INT <stringValue> (262) 3 6 32 33 37 40 41 42 44 49 52 64
    STRING <stringValue> (263) 4 7 34 35 38 43 45 51 53 65
    CHAR <stringValue> (264) 5 8 36 39 46 47 48 50 54 66
    PLUS <stringValue> (265) 95
    MINUS <stringValue> (266) 96
    TIMES <stringValue> (267) 98
    DIV <stringValue> (268) 97
    MOD <stringValue> (269) 99
    END (270) 17 18 19 21 26
    OPEN_P (271) 3 4 5 16 22 23 24 26 40 41 62 63 84
    CLOSE_P (272) 3 4 5 16 22 23 24 26 40 41 62 63 84
    CONDITIONAL (273) 22 23 24
    EXEC (274) 1 3 4 5 22 23 24
    END_EXEC (275) 1 3 4 5 22 23 24
    IF (276) 23 24
    ELSE (277) 24
    ESCAPE (278) 28 31 36 56 69 77 82 83
    WHILE (279) 22
    L (280) 87
    G (281) 88
    LE (282) 89
    GE (283) 90
    EQ (284) 91
    NE (285) 92
    OR (286) 93
    AND (287) 94
    ASSIGN (288) 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70
    RETURN (289) 19
    MAIN (290) 1
    STDIN (291) 26
    STDOUT (292) 21
    CONVERT (293) 40 62
    LENGTH (294) 41 63
    FUNCTION (295) 3 4 5
    COMMA (296) 10 13 26 78 80 82
    ARRAY (297) 37 38 39 42 43 44 45 47 48 52 53 54 60 61 68 69 70


Nonterminals, with rules where they appear

    $accept (43)
        on left: 0
    start <stringValue> (44)
        on left: 1 2
        on right: 0 2
    function <stringValue> (45)
        on left: 3 4 5
        on right: 2
    type <stringValue> (46)
        on left: 6 7 8
        on right: 9 10
    params <stringValue> (47)
        on left: 9 10 11
        on right: 3 4 5 10
    args <stringValue> (48)
        on left: 12 13 14 15
        on right: 13 16
    call <stringValue> (49)
        on left: 16
        on right: 14 18 64 65 66 67
    program <stringValue> (50)
        on left: 17 18 19 20 21 22 23 24 25
        on right: 1 3 4 5 17 18 20 21 22 23 24
    get <stringValue> (51)
        on left: 26
        on right: 20
    out <stringValue> (52)
        on left: 27 28 29 30 31
        on right: 21 27 28 30 31
    var <stringValue> (53)
        on left: 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70
        on right: 17
    operation <stringValue> (54)
        on left: 71 72 73
        on right: 32 33 59 71 72
    assignment <stringValue> (55)
        on left: 74 75 76 77
        on right: 12 13 19 59 85
    alpha_array <stringValue> (56)
        on left: 78 79
        on right: 38 78
    digit_array <stringValue> (57)
        on left: 80 81
        on right: 37 80
    char_array <stringValue> (58)
        on left: 82 83
        on right: 39 82
    rule <stringValue> (59)
        on left: 84 85
        on right: 22 23 24 84
    operator <stringValue> (60)
        on left: 86 87 88 89 90 91 92 93 94
        on right: 22 23 24 84
    op <stringValue> (61)
        on left: 95 96 97 98 99
        on right: 71 72 86


State 0

    0 $accept: . start $end

    INT     shift, and go to state 1
    STRING  shift, and go to state 2
    CHAR    shift, and go to state 3
    MAIN    shift, and go to state 4

    start     go to state 5
    function  go to state 6


State 1

    3 function: INT . FUNCTION ALPHA OPEN_P params CLOSE_P EXEC program END_EXEC

    FUNCTION  shift, and go to state 7


State 2

    4 function: STRING . FUNCTION ALPHA OPEN_P params CLOSE_P EXEC program END_EXEC

    FUNCTION  shift, and go to state 8


State 3

    5 function: CHAR . FUNCTION ALPHA OPEN_P params CLOSE_P EXEC program END_EXEC

    FUNCTION  shift, and go to state 9


State 4

    1 start: MAIN . EXEC program END_EXEC

    EXEC  shift, and go to state 10


State 5

    0 $accept: start . $end

    $end  shift, and go to state 11


State 6

    2 start: function . start

    INT     shift, and go to state 1
    STRING  shift, and go to state 2
    CHAR    shift, and go to state 3
    MAIN    shift, and go to state 4

    start     go to state 12
    function  go to state 6


State 7

    3 function: INT FUNCTION . ALPHA OPEN_P params CLOSE_P EXEC program END_EXEC

    ALPHA  shift, and go to state 13


State 8

    4 function: STRING FUNCTION . ALPHA OPEN_P params CLOSE_P EXEC program END_EXEC

    ALPHA  shift, and go to state 14


State 9

    5 function: CHAR FUNCTION . ALPHA OPEN_P params CLOSE_P EXEC program END_EXEC

    ALPHA  shift, and go to state 15


State 10

    1 start: MAIN EXEC . program END_EXEC

    ALPHA   shift, and go to state 16
    INT     shift, and go to state 17
    STRING  shift, and go to state 18
    CHAR    shift, and go to state 19
    OPEN_P  shift, and go to state 20
    RETURN  shift, and go to state 21
    STDIN   shift, and go to state 22
    STDOUT  shift, and go to state 23

    $default  reduce using rule 25 (program)

    call     go to state 24
    program  go to state 25
    get      go to state 26
    var      go to state 27


State 11

    0 $accept: start $end .

    $default  accept


State 12

    2 start: function start .

    $default  reduce using rule 2 (start)


State 13

    3 function: INT FUNCTION ALPHA . OPEN_P params CLOSE_P EXEC program END_EXEC

    OPEN_P  shift, and go to state 28


State 14

    4 function: STRING FUNCTION ALPHA . OPEN_P params CLOSE_P EXEC program END_EXEC

    OPEN_P  shift, and go to state 29


State 15

    5 function: CHAR FUNCTION ALPHA . OPEN_P params CLOSE_P EXEC program END_EXEC

    OPEN_P  shift, and go to state 30


State 16

   16 call: ALPHA . OPEN_P args CLOSE_P
   55 var: ALPHA . ASSIGN ALPHA
   56    | ALPHA . ASSIGN ESCAPE ALPHA
   57    | ALPHA . ASSIGN DIGIT
   58    | ALPHA . ASSIGN STRING_VALUE
   59    | ALPHA . ASSIGN assignment operation
   60    | ALPHA . ASSIGN ALPHA ARRAY DIGIT
   61    | ALPHA . ASSIGN ALPHA ARRAY ALPHA
   62    | ALPHA . ASSIGN CONVERT OPEN_P ALPHA CLOSE_P
   63    | ALPHA . ASSIGN LENGTH OPEN_P ALPHA CLOSE_P
   67    | ALPHA . ASSIGN call
   68    | ALPHA . ARRAY DIGIT ASSIGN DIGIT
   69    | ALPHA . ARRAY DIGIT ASSIGN ESCAPE ALPHA
   70    | ALPHA . ARRAY DIGIT ASSIGN STRING_VALUE

    OPEN_P  shift, and go to state 31
    ASSIGN  shift, and go to state 32
    ARRAY   shift, and go to state 33


State 17

   32 var: INT . ALPHA ASSIGN DIGIT operation
   33    | INT . ALPHA ASSIGN ALPHA operation
   37    | INT . ALPHA ARRAY DIGIT ASSIGN digit_array
   40    | INT . ALPHA ASSIGN CONVERT OPEN_P ALPHA CLOSE_P
   41    | INT . ALPHA ASSIGN LENGTH OPEN_P ALPHA CLOSE_P
   42    | INT . ALPHA ASSIGN ALPHA ARRAY DIGIT
   44    | INT . ALPHA ASSIGN ALPHA ARRAY ALPHA
   49    | INT . ALPHA
   52    | INT . ALPHA ARRAY DIGIT
   64    | INT . ALPHA ASSIGN call

    ALPHA  shift, and go to state 34


State 18

   34 var: STRING . ALPHA ASSIGN STRING_VALUE
   35    | STRING . ALPHA ASSIGN ALPHA
   38    | STRING . ALPHA ARRAY DIGIT ASSIGN alpha_array
   43    | STRING . ALPHA ASSIGN ALPHA ARRAY DIGIT
   45    | STRING . ALPHA ASSIGN ALPHA ARRAY ALPHA
   51    | STRING . ALPHA
   53    | STRING . ALPHA ARRAY DIGIT
   65    | STRING . ALPHA ASSIGN call

    ALPHA  shift, and go to state 35


State 19

   36 var: CHAR . ALPHA ASSIGN ESCAPE ALPHA
   39    | CHAR . ALPHA ARRAY DIGIT ASSIGN char_array
   46    | CHAR . ALPHA ASSIGN ALPHA
   47    | CHAR . ALPHA ASSIGN ALPHA ARRAY DIGIT
   48    | CHAR . ALPHA ASSIGN ALPHA ARRAY ALPHA
   50    | CHAR . ALPHA
   54    | CHAR . ALPHA ARRAY DIGIT
   66    | CHAR . ALPHA ASSIGN call

    ALPHA  shift, and go to state 36


State 20

   22 program: OPEN_P . rule operator rule CLOSE_P CONDITIONAL WHILE EXEC program END_EXEC program
   23        | OPEN_P . rule operator rule CLOSE_P CONDITIONAL IF EXEC program END_EXEC program
   24        | OPEN_P . rule operator rule CLOSE_P CONDITIONAL IF EXEC program END_EXEC ELSE EXEC program END_EXEC program

    DIGIT         shift, and go to state 37
    ALPHA         shift, and go to state 38
    STRING_VALUE  shift, and go to state 39
    OPEN_P        shift, and go to state 40
    ESCAPE        shift, and go to state 41

    assignment  go to state 42
    rule        go to state 43


State 21

   19 program: RETURN . assignment END

    DIGIT         shift, and go to state 37
    ALPHA         shift, and go to state 38
    STRING_VALUE  shift, and go to state 39
    ESCAPE        shift, and go to state 41

    assignment  go to state 44


State 22

   26 get: STDIN . OPEN_P ALPHA COMMA DIGIT CLOSE_P END

    OPEN_P  shift, and go to state 45


State 23

   21 program: STDOUT . out END program

    ALPHA        shift, and go to state 46
    SPACE_ALPHA  shift, and go to state 47
    ESCAPE       shift, and go to state 48

    $default  reduce using rule 29 (out)

    out  go to state 49


State 24

   18 program: call . END program

    END  shift, and go to state 50


State 25

    1 start: MAIN EXEC program . END_EXEC

    END_EXEC  shift, and go to state 51


State 26

   20 program: get . program

    ALPHA   shift, and go to state 16
    INT     shift, and go to state 17
    STRING  shift, and go to state 18
    CHAR    shift, and go to state 19
    OPEN_P  shift, and go to state 20
    RETURN  shift, and go to state 21
    STDIN   shift, and go to state 22
    STDOUT  shift, and go to state 23

    $default  reduce using rule 25 (program)

    call     go to state 24
    program  go to state 52
    get      go to state 26
    var      go to state 27


State 27

   17 program: var . END program

    END  shift, and go to state 53


State 28

    3 function: INT FUNCTION ALPHA OPEN_P . params CLOSE_P EXEC program END_EXEC

    INT     shift, and go to state 54
    STRING  shift, and go to state 55
    CHAR    shift, and go to state 56

    $default  reduce using rule 11 (params)

    type    go to state 57
    params  go to state 58


State 29

    4 function: STRING FUNCTION ALPHA OPEN_P . params CLOSE_P EXEC program END_EXEC

    INT     shift, and go to state 54
    STRING  shift, and go to state 55
    CHAR    shift, and go to state 56

    $default  reduce using rule 11 (params)

    type    go to state 57
    params  go to state 59


State 30

    5 function: CHAR FUNCTION ALPHA OPEN_P . params CLOSE_P EXEC program END_EXEC

    INT     shift, and go to state 54
    STRING  shift, and go to state 55
    CHAR    shift, and go to state 56

    $default  reduce using rule 11 (params)

    type    go to state 57
    params  go to state 60


State 31

   16 call: ALPHA OPEN_P . args CLOSE_P

    DIGIT         shift, and go to state 37
    ALPHA         shift, and go to state 61
    STRING_VALUE  shift, and go to state 39
    ESCAPE        shift, and go to state 41

    $default  reduce using rule 15 (args)

    args        go to state 62
    call        go to state 63
    assignment  go to state 64


State 32

   55 var: ALPHA ASSIGN . ALPHA
   56    | ALPHA ASSIGN . ESCAPE ALPHA
   57    | ALPHA ASSIGN . DIGIT
   58    | ALPHA ASSIGN . STRING_VALUE
   59    | ALPHA ASSIGN . assignment operation
   60    | ALPHA ASSIGN . ALPHA ARRAY DIGIT
   61    | ALPHA ASSIGN . ALPHA ARRAY ALPHA
   62    | ALPHA ASSIGN . CONVERT OPEN_P ALPHA CLOSE_P
   63    | ALPHA ASSIGN . LENGTH OPEN_P ALPHA CLOSE_P
   67    | ALPHA ASSIGN . call

    DIGIT         shift, and go to state 65
    ALPHA         shift, and go to state 66
    STRING_VALUE  shift, and go to state 67
    ESCAPE        shift, and go to state 68
    CONVERT       shift, and go to state 69
    LENGTH        shift, and go to state 70

    call        go to state 71
    assignment  go to state 72


State 33

   68 var: ALPHA ARRAY . DIGIT ASSIGN DIGIT
   69    | ALPHA ARRAY . DIGIT ASSIGN ESCAPE ALPHA
   70    | ALPHA ARRAY . DIGIT ASSIGN STRING_VALUE

    DIGIT  shift, and go to state 73


State 34

   32 var: INT ALPHA . ASSIGN DIGIT operation
   33    | INT ALPHA . ASSIGN ALPHA operation
   37    | INT ALPHA . ARRAY DIGIT ASSIGN digit_array
   40    | INT ALPHA . ASSIGN CONVERT OPEN_P ALPHA CLOSE_P
   41    | INT ALPHA . ASSIGN LENGTH OPEN_P ALPHA CLOSE_P
   42    | INT ALPHA . ASSIGN ALPHA ARRAY DIGIT
   44    | INT ALPHA . ASSIGN ALPHA ARRAY ALPHA
   49    | INT ALPHA .
   52    | INT ALPHA . ARRAY DIGIT
   64    | INT ALPHA . ASSIGN call

    ASSIGN  shift, and go to state 74
    ARRAY   shift, and go to state 75

    $default  reduce using rule 49 (var)


State 35

   34 var: STRING ALPHA . ASSIGN STRING_VALUE
   35    | STRING ALPHA . ASSIGN ALPHA
   38    | STRING ALPHA . ARRAY DIGIT ASSIGN alpha_array
   43    | STRING ALPHA . ASSIGN ALPHA ARRAY DIGIT
   45    | STRING ALPHA . ASSIGN ALPHA ARRAY ALPHA
   51    | STRING ALPHA .
   53    | STRING ALPHA . ARRAY DIGIT
   65    | STRING ALPHA . ASSIGN call

    ASSIGN  shift, and go to state 76
    ARRAY   shift, and go to state 77

    $default  reduce using rule 51 (var)


State 36

   36 var: CHAR ALPHA . ASSIGN ESCAPE ALPHA
   39    | CHAR ALPHA . ARRAY DIGIT ASSIGN char_array
   46    | CHAR ALPHA . ASSIGN ALPHA
   47    | CHAR ALPHA . ASSIGN ALPHA ARRAY DIGIT
   48    | CHAR ALPHA . ASSIGN ALPHA ARRAY ALPHA
   50    | CHAR ALPHA .
   54    | CHAR ALPHA . ARRAY DIGIT
   66    | CHAR ALPHA . ASSIGN call

    ASSIGN  shift, and go to state 78
    ARRAY   shift, and go to state 79

    $default  reduce using rule 50 (var)


State 37

   75 assignment: DIGIT .

    $default  reduce using rule 75 (assignment)


State 38

   74 assignment: ALPHA .

    $default  reduce using rule 74 (assignment)


State 39

   76 assignment: STRING_VALUE .

    $default  reduce using rule 76 (assignment)


State 40

   84 rule: OPEN_P . rule operator rule CLOSE_P

    DIGIT         shift, and go to state 37
    ALPHA         shift, and go to state 38
    STRING_VALUE  shift, and go to state 39
    OPEN_P        shift, and go to state 40
    ESCAPE        shift, and go to state 41

    assignment  go to state 42
    rule        go to state 80


State 41

   77 assignment: ESCAPE . ALPHA

    ALPHA  shift, and go to state 81


State 42

   85 rule: assignment .

    $default  reduce using rule 85 (rule)


State 43

   22 program: OPEN_P rule . operator rule CLOSE_P CONDITIONAL WHILE EXEC program END_EXEC program
   23        | OPEN_P rule . operator rule CLOSE_P CONDITIONAL IF EXEC program END_EXEC program
   24        | OPEN_P rule . operator rule CLOSE_P CONDITIONAL IF EXEC program END_EXEC ELSE EXEC program END_EXEC program

    PLUS   shift, and go to state 82
    MINUS  shift, and go to state 83
    TIMES  shift, and go to state 84
    DIV    shift, and go to state 85
    MOD    shift, and go to state 86
    L      shift, and go to state 87
    G      shift, and go to state 88
    LE     shift, and go to state 89
    GE     shift, and go to state 90
    EQ     shift, and go to state 91
    NE     shift, and go to state 92
    OR     shift, and go to state 93
    AND    shift, and go to state 94

    operator  go to state 95
    op        go to state 96


State 44

   19 program: RETURN assignment . END

    END  shift, and go to state 97


State 45

   26 get: STDIN OPEN_P . ALPHA COMMA DIGIT CLOSE_P END

    ALPHA  shift, and go to state 98


State 46

   30 out: ALPHA . out

    ALPHA        shift, and go to state 46
    SPACE_ALPHA  shift, and go to state 47
    ESCAPE       shift, and go to state 48

    $default  reduce using rule 29 (out)

    out  go to state 99


State 47

   27 out: SPACE_ALPHA . out

    ALPHA        shift, and go to state 46
    SPACE_ALPHA  shift, and go to state 47
    ESCAPE       shift, and go to state 48

    $default  reduce using rule 29 (out)

    out  go to state 100


State 48

   28 out: ESCAPE . SPACE_ALPHA ESCAPE out
   31    | ESCAPE . ALPHA ESCAPE out

    ALPHA        shift, and go to state 101
    SPACE_ALPHA  shift, and go to state 102


State 49

   21 program: STDOUT out . END program

    END  shift, and go to state 103


State 50

   18 program: call END . program

    ALPHA   shift, and go to state 16
    INT     shift, and go to state 17
    STRING  shift, and go to state 18
    CHAR    shift, and go to state 19
    OPEN_P  shift, and go to state 20
    RETURN  shift, and go to state 21
    STDIN   shift, and go to state 22
    STDOUT  shift, and go to state 23

    $default  reduce using rule 25 (program)

    call     go to state 24
    program  go to state 104
    get      go to state 26
    var      go to state 27


State 51

    1 start: MAIN EXEC program END_EXEC .

    $default  reduce using rule 1 (start)


State 52

   20 program: get program .

    $default  reduce using rule 20 (program)


State 53

   17 program: var END . program

    ALPHA   shift, and go to state 16
    INT     shift, and go to state 17
    STRING  shift, and go to state 18
    CHAR    shift, and go to state 19
    OPEN_P  shift, and go to state 20
    RETURN  shift, and go to state 21
    STDIN   shift, and go to state 22
    STDOUT  shift, and go to state 23

    $default  reduce using rule 25 (program)

    call     go to state 24
    program  go to state 105
    get      go to state 26
    var      go to state 27


State 54

    6 type: INT .

    $default  reduce using rule 6 (type)


State 55

    7 type: STRING .

    $default  reduce using rule 7 (type)


State 56

    8 type: CHAR .

    $default  reduce using rule 8 (type)


State 57

    9 params: type . ALPHA
   10       | type . ALPHA COMMA params

    ALPHA  shift, and go to state 106


State 58

    3 function: INT FUNCTION ALPHA OPEN_P params . CLOSE_P EXEC program END_EXEC

    CLOSE_P  shift, and go to state 107


State 59

    4 function: STRING FUNCTION ALPHA OPEN_P params . CLOSE_P EXEC program END_EXEC

    CLOSE_P  shift, and go to state 108


State 60

    5 function: CHAR FUNCTION ALPHA OPEN_P params . CLOSE_P EXEC program END_EXEC

    CLOSE_P  shift, and go to state 109


State 61

   16 call: ALPHA . OPEN_P args CLOSE_P
   74 assignment: ALPHA .

    OPEN_P  shift, and go to state 31

    $default  reduce using rule 74 (assignment)


State 62

   16 call: ALPHA OPEN_P args . CLOSE_P

    CLOSE_P  shift, and go to state 110


State 63

   14 args: call .

    $default  reduce using rule 14 (args)


State 64

   12 args: assignment .
   13     | assignment . COMMA args

    COMMA  shift, and go to state 111

    $default  reduce using rule 12 (args)


State 65

   57 var: ALPHA ASSIGN DIGIT .
   75 assignment: DIGIT .

    END       reduce using rule 57 (var)
    END       [reduce using rule 75 (assignment)]
    $default  reduce using rule 75 (assignment)


State 66

   16 call: ALPHA . OPEN_P args CLOSE_P
   55 var: ALPHA ASSIGN ALPHA .
   60    | ALPHA ASSIGN ALPHA . ARRAY DIGIT
   61    | ALPHA ASSIGN ALPHA . ARRAY ALPHA
   74 assignment: ALPHA .

    OPEN_P  shift, and go to state 31
    ARRAY   shift, and go to state 112

    END       reduce using rule 55 (var)
    END       [reduce using rule 74 (assignment)]
    $default  reduce using rule 74 (assignment)


State 67

   58 var: ALPHA ASSIGN STRING_VALUE .
   76 assignment: STRING_VALUE .

    END       reduce using rule 58 (var)
    END       [reduce using rule 76 (assignment)]
    $default  reduce using rule 76 (assignment)


State 68

   56 var: ALPHA ASSIGN ESCAPE . ALPHA
   77 assignment: ESCAPE . ALPHA

    ALPHA  shift, and go to state 113


State 69

   62 var: ALPHA ASSIGN CONVERT . OPEN_P ALPHA CLOSE_P

    OPEN_P  shift, and go to state 114


State 70

   63 var: ALPHA ASSIGN LENGTH . OPEN_P ALPHA CLOSE_P

    OPEN_P  shift, and go to state 115


State 71

   67 var: ALPHA ASSIGN call .

    $default  reduce using rule 67 (var)


State 72

   59 var: ALPHA ASSIGN assignment . operation

    PLUS   shift, and go to state 82
    MINUS  shift, and go to state 83
    TIMES  shift, and go to state 84
    DIV    shift, and go to state 85
    MOD    shift, and go to state 86

    $default  reduce using rule 73 (operation)

    operation  go to state 116
    op         go to state 117


State 73

   68 var: ALPHA ARRAY DIGIT . ASSIGN DIGIT
   69    | ALPHA ARRAY DIGIT . ASSIGN ESCAPE ALPHA
   70    | ALPHA ARRAY DIGIT . ASSIGN STRING_VALUE

    ASSIGN  shift, and go to state 118


State 74

   32 var: INT ALPHA ASSIGN . DIGIT operation
   33    | INT ALPHA ASSIGN . ALPHA operation
   40    | INT ALPHA ASSIGN . CONVERT OPEN_P ALPHA CLOSE_P
   41    | INT ALPHA ASSIGN . LENGTH OPEN_P ALPHA CLOSE_P
   42    | INT ALPHA ASSIGN . ALPHA ARRAY DIGIT
   44    | INT ALPHA ASSIGN . ALPHA ARRAY ALPHA
   64    | INT ALPHA ASSIGN . call

    DIGIT    shift, and go to state 119
    ALPHA    shift, and go to state 120
    CONVERT  shift, and go to state 121
    LENGTH   shift, and go to state 122

    call  go to state 123


State 75

   37 var: INT ALPHA ARRAY . DIGIT ASSIGN digit_array
   52    | INT ALPHA ARRAY . DIGIT

    DIGIT  shift, and go to state 124


State 76

   34 var: STRING ALPHA ASSIGN . STRING_VALUE
   35    | STRING ALPHA ASSIGN . ALPHA
   43    | STRING ALPHA ASSIGN . ALPHA ARRAY DIGIT
   45    | STRING ALPHA ASSIGN . ALPHA ARRAY ALPHA
   65    | STRING ALPHA ASSIGN . call

    ALPHA         shift, and go to state 125
    STRING_VALUE  shift, and go to state 126

    call  go to state 127


State 77

   38 var: STRING ALPHA ARRAY . DIGIT ASSIGN alpha_array
   53    | STRING ALPHA ARRAY . DIGIT

    DIGIT  shift, and go to state 128


State 78

   36 var: CHAR ALPHA ASSIGN . ESCAPE ALPHA
   46    | CHAR ALPHA ASSIGN . ALPHA
   47    | CHAR ALPHA ASSIGN . ALPHA ARRAY DIGIT
   48    | CHAR ALPHA ASSIGN . ALPHA ARRAY ALPHA
   66    | CHAR ALPHA ASSIGN . call

    ALPHA   shift, and go to state 129
    ESCAPE  shift, and go to state 130

    call  go to state 131


State 79

   39 var: CHAR ALPHA ARRAY . DIGIT ASSIGN char_array
   54    | CHAR ALPHA ARRAY . DIGIT

    DIGIT  shift, and go to state 132


State 80

   84 rule: OPEN_P rule . operator rule CLOSE_P

    PLUS   shift, and go to state 82
    MINUS  shift, and go to state 83
    TIMES  shift, and go to state 84
    DIV    shift, and go to state 85
    MOD    shift, and go to state 86
    L      shift, and go to state 87
    G      shift, and go to state 88
    LE     shift, and go to state 89
    GE     shift, and go to state 90
    EQ     shift, and go to state 91
    NE     shift, and go to state 92
    OR     shift, and go to state 93
    AND    shift, and go to state 94

    operator  go to state 133
    op        go to state 96


State 81

   77 assignment: ESCAPE ALPHA .

    $default  reduce using rule 77 (assignment)


State 82

   95 op: PLUS .

    $default  reduce using rule 95 (op)


State 83

   96 op: MINUS .

    $default  reduce using rule 96 (op)


State 84

   98 op: TIMES .

    $default  reduce using rule 98 (op)


State 85

   97 op: DIV .

    $default  reduce using rule 97 (op)


State 86

   99 op: MOD .

    $default  reduce using rule 99 (op)


State 87

   87 operator: L .

    $default  reduce using rule 87 (operator)


State 88

   88 operator: G .

    $default  reduce using rule 88 (operator)


State 89

   89 operator: LE .

    $default  reduce using rule 89 (operator)


State 90

   90 operator: GE .

    $default  reduce using rule 90 (operator)


State 91

   91 operator: EQ .

    $default  reduce using rule 91 (operator)


State 92

   92 operator: NE .

    $default  reduce using rule 92 (operator)


State 93

   93 operator: OR .

    $default  reduce using rule 93 (operator)


State 94

   94 operator: AND .

    $default  reduce using rule 94 (operator)


State 95

   22 program: OPEN_P rule operator . rule CLOSE_P CONDITIONAL WHILE EXEC program END_EXEC program
   23        | OPEN_P rule operator . rule CLOSE_P CONDITIONAL IF EXEC program END_EXEC program
   24        | OPEN_P rule operator . rule CLOSE_P CONDITIONAL IF EXEC program END_EXEC ELSE EXEC program END_EXEC program

    DIGIT         shift, and go to state 37
    ALPHA         shift, and go to state 38
    STRING_VALUE  shift, and go to state 39
    OPEN_P        shift, and go to state 40
    ESCAPE        shift, and go to state 41

    assignment  go to state 42
    rule        go to state 134


State 96

   86 operator: op .

    $default  reduce using rule 86 (operator)


State 97

   19 program: RETURN assignment END .

    $default  reduce using rule 19 (program)


State 98

   26 get: STDIN OPEN_P ALPHA . COMMA DIGIT CLOSE_P END

    COMMA  shift, and go to state 135


State 99

   30 out: ALPHA out .

    $default  reduce using rule 30 (out)


State 100

   27 out: SPACE_ALPHA out .

    $default  reduce using rule 27 (out)


State 101

   31 out: ESCAPE ALPHA . ESCAPE out

    ESCAPE  shift, and go to state 136


State 102

   28 out: ESCAPE SPACE_ALPHA . ESCAPE out

    ESCAPE  shift, and go to state 137


State 103

   21 program: STDOUT out END . program

    ALPHA   shift, and go to state 16
    INT     shift, and go to state 17
    STRING  shift, and go to state 18
    CHAR    shift, and go to state 19
    OPEN_P  shift, and go to state 20
    RETURN  shift, and go to state 21
    STDIN   shift, and go to state 22
    STDOUT  shift, and go to state 23

    $default  reduce using rule 25 (program)

    call     go to state 24
    program  go to state 138
    get      go to state 26
    var      go to state 27


State 104

   18 program: call END program .

    $default  reduce using rule 18 (program)


State 105

   17 program: var END program .

    $default  reduce using rule 17 (program)


State 106

    9 params: type ALPHA .
   10       | type ALPHA . COMMA params

    COMMA  shift, and go to state 139

    $default  reduce using rule 9 (params)


State 107

    3 function: INT FUNCTION ALPHA OPEN_P params CLOSE_P . EXEC program END_EXEC

    EXEC  shift, and go to state 140


State 108

    4 function: STRING FUNCTION ALPHA OPEN_P params CLOSE_P . EXEC program END_EXEC

    EXEC  shift, and go to state 141


State 109

    5 function: CHAR FUNCTION ALPHA OPEN_P params CLOSE_P . EXEC program END_EXEC

    EXEC  shift, and go to state 142


State 110

   16 call: ALPHA OPEN_P args CLOSE_P .

    $default  reduce using rule 16 (call)


State 111

   13 args: assignment COMMA . args

    DIGIT         shift, and go to state 37
    ALPHA         shift, and go to state 61
    STRING_VALUE  shift, and go to state 39
    ESCAPE        shift, and go to state 41

    $default  reduce using rule 15 (args)

    args        go to state 143
    call        go to state 63
    assignment  go to state 64


State 112

   60 var: ALPHA ASSIGN ALPHA ARRAY . DIGIT
   61    | ALPHA ASSIGN ALPHA ARRAY . ALPHA

    DIGIT  shift, and go to state 144
    ALPHA  shift, and go to state 145


State 113

   56 var: ALPHA ASSIGN ESCAPE ALPHA .
   77 assignment: ESCAPE ALPHA .

    END       reduce using rule 56 (var)
    END       [reduce using rule 77 (assignment)]
    $default  reduce using rule 77 (assignment)


State 114

   62 var: ALPHA ASSIGN CONVERT OPEN_P . ALPHA CLOSE_P

    ALPHA  shift, and go to state 146


State 115

   63 var: ALPHA ASSIGN LENGTH OPEN_P . ALPHA CLOSE_P

    ALPHA  shift, and go to state 147


State 116

   59 var: ALPHA ASSIGN assignment operation .

    $default  reduce using rule 59 (var)


State 117

   71 operation: op . DIGIT operation
   72          | op . ALPHA operation

    DIGIT  shift, and go to state 148
    ALPHA  shift, and go to state 149


State 118

   68 var: ALPHA ARRAY DIGIT ASSIGN . DIGIT
   69    | ALPHA ARRAY DIGIT ASSIGN . ESCAPE ALPHA
   70    | ALPHA ARRAY DIGIT ASSIGN . STRING_VALUE

    DIGIT         shift, and go to state 150
    STRING_VALUE  shift, and go to state 151
    ESCAPE        shift, and go to state 152


State 119

   32 var: INT ALPHA ASSIGN DIGIT . operation

    PLUS   shift, and go to state 82
    MINUS  shift, and go to state 83
    TIMES  shift, and go to state 84
    DIV    shift, and go to state 85
    MOD    shift, and go to state 86

    $default  reduce using rule 73 (operation)

    operation  go to state 153
    op         go to state 117


State 120

   16 call: ALPHA . OPEN_P args CLOSE_P
   33 var: INT ALPHA ASSIGN ALPHA . operation
   42    | INT ALPHA ASSIGN ALPHA . ARRAY DIGIT
   44    | INT ALPHA ASSIGN ALPHA . ARRAY ALPHA

    PLUS    shift, and go to state 82
    MINUS   shift, and go to state 83
    TIMES   shift, and go to state 84
    DIV     shift, and go to state 85
    MOD     shift, and go to state 86
    OPEN_P  shift, and go to state 31
    ARRAY   shift, and go to state 154

    $default  reduce using rule 73 (operation)

    operation  go to state 155
    op         go to state 117


State 121

   40 var: INT ALPHA ASSIGN CONVERT . OPEN_P ALPHA CLOSE_P

    OPEN_P  shift, and go to state 156


State 122

   41 var: INT ALPHA ASSIGN LENGTH . OPEN_P ALPHA CLOSE_P

    OPEN_P  shift, and go to state 157


State 123

   64 var: INT ALPHA ASSIGN call .

    $default  reduce using rule 64 (var)


State 124

   37 var: INT ALPHA ARRAY DIGIT . ASSIGN digit_array
   52    | INT ALPHA ARRAY DIGIT .

    ASSIGN  shift, and go to state 158

    $default  reduce using rule 52 (var)


State 125

   16 call: ALPHA . OPEN_P args CLOSE_P
   35 var: STRING ALPHA ASSIGN ALPHA .
   43    | STRING ALPHA ASSIGN ALPHA . ARRAY DIGIT
   45    | STRING ALPHA ASSIGN ALPHA . ARRAY ALPHA

    OPEN_P  shift, and go to state 31
    ARRAY   shift, and go to state 159

    $default  reduce using rule 35 (var)


State 126

   34 var: STRING ALPHA ASSIGN STRING_VALUE .

    $default  reduce using rule 34 (var)


State 127

   65 var: STRING ALPHA ASSIGN call .

    $default  reduce using rule 65 (var)


State 128

   38 var: STRING ALPHA ARRAY DIGIT . ASSIGN alpha_array
   53    | STRING ALPHA ARRAY DIGIT .

    ASSIGN  shift, and go to state 160

    $default  reduce using rule 53 (var)


State 129

   16 call: ALPHA . OPEN_P args CLOSE_P
   46 var: CHAR ALPHA ASSIGN ALPHA .
   47    | CHAR ALPHA ASSIGN ALPHA . ARRAY DIGIT
   48    | CHAR ALPHA ASSIGN ALPHA . ARRAY ALPHA

    OPEN_P  shift, and go to state 31
    ARRAY   shift, and go to state 161

    $default  reduce using rule 46 (var)


State 130

   36 var: CHAR ALPHA ASSIGN ESCAPE . ALPHA

    ALPHA  shift, and go to state 162


State 131

   66 var: CHAR ALPHA ASSIGN call .

    $default  reduce using rule 66 (var)


State 132

   39 var: CHAR ALPHA ARRAY DIGIT . ASSIGN char_array
   54    | CHAR ALPHA ARRAY DIGIT .

    ASSIGN  shift, and go to state 163

    $default  reduce using rule 54 (var)


State 133

   84 rule: OPEN_P rule operator . rule CLOSE_P

    DIGIT         shift, and go to state 37
    ALPHA         shift, and go to state 38
    STRING_VALUE  shift, and go to state 39
    OPEN_P        shift, and go to state 40
    ESCAPE        shift, and go to state 41

    assignment  go to state 42
    rule        go to state 164


State 134

   22 program: OPEN_P rule operator rule . CLOSE_P CONDITIONAL WHILE EXEC program END_EXEC program
   23        | OPEN_P rule operator rule . CLOSE_P CONDITIONAL IF EXEC program END_EXEC program
   24        | OPEN_P rule operator rule . CLOSE_P CONDITIONAL IF EXEC program END_EXEC ELSE EXEC program END_EXEC program

    CLOSE_P  shift, and go to state 165


State 135

   26 get: STDIN OPEN_P ALPHA COMMA . DIGIT CLOSE_P END

    DIGIT  shift, and go to state 166


State 136

   31 out: ESCAPE ALPHA ESCAPE . out

    ALPHA        shift, and go to state 46
    SPACE_ALPHA  shift, and go to state 47
    ESCAPE       shift, and go to state 48

    $default  reduce using rule 29 (out)

    out  go to state 167


State 137

   28 out: ESCAPE SPACE_ALPHA ESCAPE . out

    ALPHA        shift, and go to state 46
    SPACE_ALPHA  shift, and go to state 47
    ESCAPE       shift, and go to state 48

    $default  reduce using rule 29 (out)

    out  go to state 168


State 138

   21 program: STDOUT out END program .

    $default  reduce using rule 21 (program)


State 139

   10 params: type ALPHA COMMA . params

    INT     shift, and go to state 54
    STRING  shift, and go to state 55
    CHAR    shift, and go to state 56

    $default  reduce using rule 11 (params)

    type    go to state 57
    params  go to state 169


State 140

    3 function: INT FUNCTION ALPHA OPEN_P params CLOSE_P EXEC . program END_EXEC

    ALPHA   shift, and go to state 16
    INT     shift, and go to state 17
    STRING  shift, and go to state 18
    CHAR    shift, and go to state 19
    OPEN_P  shift, and go to state 20
    RETURN  shift, and go to state 21
    STDIN   shift, and go to state 22
    STDOUT  shift, and go to state 23

    $default  reduce using rule 25 (program)

    call     go to state 24
    program  go to state 170
    get      go to state 26
    var      go to state 27


State 141

    4 function: STRING FUNCTION ALPHA OPEN_P params CLOSE_P EXEC . program END_EXEC

    ALPHA   shift, and go to state 16
    INT     shift, and go to state 17
    STRING  shift, and go to state 18
    CHAR    shift, and go to state 19
    OPEN_P  shift, and go to state 20
    RETURN  shift, and go to state 21
    STDIN   shift, and go to state 22
    STDOUT  shift, and go to state 23

    $default  reduce using rule 25 (program)

    call     go to state 24
    program  go to state 171
    get      go to state 26
    var      go to state 27


State 142

    5 function: CHAR FUNCTION ALPHA OPEN_P params CLOSE_P EXEC . program END_EXEC

    ALPHA   shift, and go to state 16
    INT     shift, and go to state 17
    STRING  shift, and go to state 18
    CHAR    shift, and go to state 19
    OPEN_P  shift, and go to state 20
    RETURN  shift, and go to state 21
    STDIN   shift, and go to state 22
    STDOUT  shift, and go to state 23

    $default  reduce using rule 25 (program)

    call     go to state 24
    program  go to state 172
    get      go to state 26
    var      go to state 27


State 143

   13 args: assignment COMMA args .

    $default  reduce using rule 13 (args)


State 144

   60 var: ALPHA ASSIGN ALPHA ARRAY DIGIT .

    $default  reduce using rule 60 (var)


State 145

   61 var: ALPHA ASSIGN ALPHA ARRAY ALPHA .

    $default  reduce using rule 61 (var)


State 146

   62 var: ALPHA ASSIGN CONVERT OPEN_P ALPHA . CLOSE_P

    CLOSE_P  shift, and go to state 173


State 147

   63 var: ALPHA ASSIGN LENGTH OPEN_P ALPHA . CLOSE_P

    CLOSE_P  shift, and go to state 174


State 148

   71 operation: op DIGIT . operation

    PLUS   shift, and go to state 82
    MINUS  shift, and go to state 83
    TIMES  shift, and go to state 84
    DIV    shift, and go to state 85
    MOD    shift, and go to state 86

    $default  reduce using rule 73 (operation)

    operation  go to state 175
    op         go to state 117


State 149

   72 operation: op ALPHA . operation

    PLUS   shift, and go to state 82
    MINUS  shift, and go to state 83
    TIMES  shift, and go to state 84
    DIV    shift, and go to state 85
    MOD    shift, and go to state 86

    $default  reduce using rule 73 (operation)

    operation  go to state 176
    op         go to state 117


State 150

   68 var: ALPHA ARRAY DIGIT ASSIGN DIGIT .

    $default  reduce using rule 68 (var)


State 151

   70 var: ALPHA ARRAY DIGIT ASSIGN STRING_VALUE .

    $default  reduce using rule 70 (var)


State 152

   69 var: ALPHA ARRAY DIGIT ASSIGN ESCAPE . ALPHA

    ALPHA  shift, and go to state 177


State 153

   32 var: INT ALPHA ASSIGN DIGIT operation .

    $default  reduce using rule 32 (var)


State 154

   42 var: INT ALPHA ASSIGN ALPHA ARRAY . DIGIT
   44    | INT ALPHA ASSIGN ALPHA ARRAY . ALPHA

    DIGIT  shift, and go to state 178
    ALPHA  shift, and go to state 179


State 155

   33 var: INT ALPHA ASSIGN ALPHA operation .

    $default  reduce using rule 33 (var)


State 156

   40 var: INT ALPHA ASSIGN CONVERT OPEN_P . ALPHA CLOSE_P

    ALPHA  shift, and go to state 180


State 157

   41 var: INT ALPHA ASSIGN LENGTH OPEN_P . ALPHA CLOSE_P

    ALPHA  shift, and go to state 181


State 158

   37 var: INT ALPHA ARRAY DIGIT ASSIGN . digit_array

    DIGIT  shift, and go to state 182

    digit_array  go to state 183


State 159

   43 var: STRING ALPHA ASSIGN ALPHA ARRAY . DIGIT
   45    | STRING ALPHA ASSIGN ALPHA ARRAY . ALPHA

    DIGIT  shift, and go to state 184
    ALPHA  shift, and go to state 185


State 160

   38 var: STRING ALPHA ARRAY DIGIT ASSIGN . alpha_array

    STRING_VALUE  shift, and go to state 186

    alpha_array  go to state 187


State 161

   47 var: CHAR ALPHA ASSIGN ALPHA ARRAY . DIGIT
   48    | CHAR ALPHA ASSIGN ALPHA ARRAY . ALPHA

    DIGIT  shift, and go to state 188
    ALPHA  shift, and go to state 189


State 162

   36 var: CHAR ALPHA ASSIGN ESCAPE ALPHA .

    $default  reduce using rule 36 (var)


State 163

   39 var: CHAR ALPHA ARRAY DIGIT ASSIGN . char_array

    ESCAPE  shift, and go to state 190

    char_array  go to state 191


State 164

   84 rule: OPEN_P rule operator rule . CLOSE_P

    CLOSE_P  shift, and go to state 192


State 165

   22 program: OPEN_P rule operator rule CLOSE_P . CONDITIONAL WHILE EXEC program END_EXEC program
   23        | OPEN_P rule operator rule CLOSE_P . CONDITIONAL IF EXEC program END_EXEC program
   24        | OPEN_P rule operator rule CLOSE_P . CONDITIONAL IF EXEC program END_EXEC ELSE EXEC program END_EXEC program

    CONDITIONAL  shift, and go to state 193


State 166

   26 get: STDIN OPEN_P ALPHA COMMA DIGIT . CLOSE_P END

    CLOSE_P  shift, and go to state 194


State 167

   31 out: ESCAPE ALPHA ESCAPE out .

    $default  reduce using rule 31 (out)


State 168

   28 out: ESCAPE SPACE_ALPHA ESCAPE out .

    $default  reduce using rule 28 (out)


State 169

   10 params: type ALPHA COMMA params .

    $default  reduce using rule 10 (params)


State 170

    3 function: INT FUNCTION ALPHA OPEN_P params CLOSE_P EXEC program . END_EXEC

    END_EXEC  shift, and go to state 195


State 171

    4 function: STRING FUNCTION ALPHA OPEN_P params CLOSE_P EXEC program . END_EXEC

    END_EXEC  shift, and go to state 196


State 172

    5 function: CHAR FUNCTION ALPHA OPEN_P params CLOSE_P EXEC program . END_EXEC

    END_EXEC  shift, and go to state 197


State 173

   62 var: ALPHA ASSIGN CONVERT OPEN_P ALPHA CLOSE_P .

    $default  reduce using rule 62 (var)


State 174

   63 var: ALPHA ASSIGN LENGTH OPEN_P ALPHA CLOSE_P .

    $default  reduce using rule 63 (var)


State 175

   71 operation: op DIGIT operation .

    $default  reduce using rule 71 (operation)


State 176

   72 operation: op ALPHA operation .

    $default  reduce using rule 72 (operation)


State 177

   69 var: ALPHA ARRAY DIGIT ASSIGN ESCAPE ALPHA .

    $default  reduce using rule 69 (var)


State 178

   42 var: INT ALPHA ASSIGN ALPHA ARRAY DIGIT .

    $default  reduce using rule 42 (var)


State 179

   44 var: INT ALPHA ASSIGN ALPHA ARRAY ALPHA .

    $default  reduce using rule 44 (var)


State 180

   40 var: INT ALPHA ASSIGN CONVERT OPEN_P ALPHA . CLOSE_P

    CLOSE_P  shift, and go to state 198


State 181

   41 var: INT ALPHA ASSIGN LENGTH OPEN_P ALPHA . CLOSE_P

    CLOSE_P  shift, and go to state 199


State 182

   80 digit_array: DIGIT . COMMA digit_array
   81            | DIGIT .

    COMMA  shift, and go to state 200

    $default  reduce using rule 81 (digit_array)


State 183

   37 var: INT ALPHA ARRAY DIGIT ASSIGN digit_array .

    $default  reduce using rule 37 (var)


State 184

   43 var: STRING ALPHA ASSIGN ALPHA ARRAY DIGIT .

    $default  reduce using rule 43 (var)


State 185

   45 var: STRING ALPHA ASSIGN ALPHA ARRAY ALPHA .

    $default  reduce using rule 45 (var)


State 186

   78 alpha_array: STRING_VALUE . COMMA alpha_array
   79            | STRING_VALUE .

    COMMA  shift, and go to state 201

    $default  reduce using rule 79 (alpha_array)


State 187

   38 var: STRING ALPHA ARRAY DIGIT ASSIGN alpha_array .

    $default  reduce using rule 38 (var)


State 188

   47 var: CHAR ALPHA ASSIGN ALPHA ARRAY DIGIT .

    $default  reduce using rule 47 (var)


State 189

   48 var: CHAR ALPHA ASSIGN ALPHA ARRAY ALPHA .

    $default  reduce using rule 48 (var)


State 190

   82 char_array: ESCAPE . ALPHA COMMA char_array
   83           | ESCAPE . ALPHA

    ALPHA  shift, and go to state 202


State 191

   39 var: CHAR ALPHA ARRAY DIGIT ASSIGN char_array .

    $default  reduce using rule 39 (var)


State 192

   84 rule: OPEN_P rule operator rule CLOSE_P .

    $default  reduce using rule 84 (rule)


State 193

   22 program: OPEN_P rule operator rule CLOSE_P CONDITIONAL . WHILE EXEC program END_EXEC program
   23        | OPEN_P rule operator rule CLOSE_P CONDITIONAL . IF EXEC program END_EXEC program
   24        | OPEN_P rule operator rule CLOSE_P CONDITIONAL . IF EXEC program END_EXEC ELSE EXEC program END_EXEC program

    IF     shift, and go to state 203
    WHILE  shift, and go to state 204


State 194

   26 get: STDIN OPEN_P ALPHA COMMA DIGIT CLOSE_P . END

    END  shift, and go to state 205


State 195

    3 function: INT FUNCTION ALPHA OPEN_P params CLOSE_P EXEC program END_EXEC .

    $default  reduce using rule 3 (function)


State 196

    4 function: STRING FUNCTION ALPHA OPEN_P params CLOSE_P EXEC program END_EXEC .

    $default  reduce using rule 4 (function)


State 197

    5 function: CHAR FUNCTION ALPHA OPEN_P params CLOSE_P EXEC program END_EXEC .

    $default  reduce using rule 5 (function)


State 198

   40 var: INT ALPHA ASSIGN CONVERT OPEN_P ALPHA CLOSE_P .

    $default  reduce using rule 40 (var)


State 199

   41 var: INT ALPHA ASSIGN LENGTH OPEN_P ALPHA CLOSE_P .

    $default  reduce using rule 41 (var)


State 200

   80 digit_array: DIGIT COMMA . digit_array

    DIGIT  shift, and go to state 182

    digit_array  go to state 206


State 201

   78 alpha_array: STRING_VALUE COMMA . alpha_array

    STRING_VALUE  shift, and go to state 186

    alpha_array  go to state 207


State 202

   82 char_array: ESCAPE ALPHA . COMMA char_array
   83           | ESCAPE ALPHA .

    COMMA  shift, and go to state 208

    $default  reduce using rule 83 (char_array)


State 203

   23 program: OPEN_P rule operator rule CLOSE_P CONDITIONAL IF . EXEC program END_EXEC program
   24        | OPEN_P rule operator rule CLOSE_P CONDITIONAL IF . EXEC program END_EXEC ELSE EXEC program END_EXEC program

    EXEC  shift, and go to state 209


State 204

   22 program: OPEN_P rule operator rule CLOSE_P CONDITIONAL WHILE . EXEC program END_EXEC program

    EXEC  shift, and go to state 210


State 205

   26 get: STDIN OPEN_P ALPHA COMMA DIGIT CLOSE_P END .

    $default  reduce using rule 26 (get)


State 206

   80 digit_array: DIGIT COMMA digit_array .

    $default  reduce using rule 80 (digit_array)


State 207

   78 alpha_array: STRING_VALUE COMMA alpha_array .

    $default  reduce using rule 78 (alpha_array)


State 208

   82 char_array: ESCAPE ALPHA COMMA . char_array

    ESCAPE  shift, and go to state 190

    char_array  go to state 211


State 209

   23 program: OPEN_P rule operator rule CLOSE_P CONDITIONAL IF EXEC . program END_EXEC program
   24        | OPEN_P rule operator rule CLOSE_P CONDITIONAL IF EXEC . program END_EXEC ELSE EXEC program END_EXEC program

    ALPHA   shift, and go to state 16
    INT     shift, and go to state 17
    STRING  shift, and go to state 18
    CHAR    shift, and go to state 19
    OPEN_P  shift, and go to state 20
    RETURN  shift, and go to state 21
    STDIN   shift, and go to state 22
    STDOUT  shift, and go to state 23

    $default  reduce using rule 25 (program)

    call     go to state 24
    program  go to state 212
    get      go to state 26
    var      go to state 27


State 210

   22 program: OPEN_P rule operator rule CLOSE_P CONDITIONAL WHILE EXEC . program END_EXEC program

    ALPHA   shift, and go to state 16
    INT     shift, and go to state 17
    STRING  shift, and go to state 18
    CHAR    shift, and go to state 19
    OPEN_P  shift, and go to state 20
    RETURN  shift, and go to state 21
    STDIN   shift, and go to state 22
    STDOUT  shift, and go to state 23

    $default  reduce using rule 25 (program)

    call     go to state 24
    program  go to state 213
    get      go to state 26
    var      go to state 27


State 211

   82 char_array: ESCAPE ALPHA COMMA char_array .

    $default  reduce using rule 82 (char_array)


State 212

   23 program: OPEN_P rule operator rule CLOSE_P CONDITIONAL IF EXEC program . END_EXEC program
   24        | OPEN_P rule operator rule CLOSE_P CONDITIONAL IF EXEC program . END_EXEC ELSE EXEC program END_EXEC program

    END_EXEC  shift, and go to state 214


State 213

   22 program: OPEN_P rule operator rule CLOSE_P CONDITIONAL WHILE EXEC program . END_EXEC program

    END_EXEC  shift, and go to state 215


State 214

   23 program: OPEN_P rule operator rule CLOSE_P CONDITIONAL IF EXEC program END_EXEC . program
   24        | OPEN_P rule operator rule CLOSE_P CONDITIONAL IF EXEC program END_EXEC . ELSE EXEC program END_EXEC program

    ALPHA   shift, and go to state 16
    INT     shift, and go to state 17
    STRING  shift, and go to state 18
    CHAR    shift, and go to state 19
    OPEN_P  shift, and go to state 20
    ELSE    shift, and go to state 216
    RETURN  shift, and go to state 21
    STDIN   shift, and go to state 22
    STDOUT  shift, and go to state 23

    $default  reduce using rule 25 (program)

    call     go to state 24
    program  go to state 217
    get      go to state 26
    var      go to state 27


State 215

   22 program: OPEN_P rule operator rule CLOSE_P CONDITIONAL WHILE EXEC program END_EXEC . program

    ALPHA   shift, and go to state 16
    INT     shift, and go to state 17
    STRING  shift, and go to state 18
    CHAR    shift, and go to state 19
    OPEN_P  shift, and go to state 20
    RETURN  shift, and go to state 21
    STDIN   shift, and go to state 22
    STDOUT  shift, and go to state 23

    $default  reduce using rule 25 (program)

    call     go to state 24
    program  go to state 218
    get      go to state 26
    var      go to state 27


State 216

   24 program: OPEN_P rule operator rule CLOSE_P CONDITIONAL IF EXEC program END_EXEC ELSE . EXEC program END_EXEC program

    EXEC  shift, and go to state 219


State 217

   23 program: OPEN_P rule operator rule CLOSE_P CONDITIONAL IF EXEC program END_EXEC program .

    $default  reduce using rule 23 (program)


State 218

   22 program: OPEN_P rule operator rule CLOSE_P CONDITIONAL WHILE EXEC program END_EXEC program .

    $default  reduce using rule 22 (program)


State 219

   24 program: OPEN_P rule operator rule CLOSE_P CONDITIONAL IF EXEC program END_EXEC ELSE EXEC . program END_EXEC program

    ALPHA   shift, and go to state 16
    INT     shift, and go to state 17
    STRING  shift, and go to state 18
    CHAR    shift, and go to state 19
    OPEN_P  shift, and go to state 20
    RETURN  shift, and go to state 21
    STDIN   shift, and go to state 22
    STDOUT  shift, and go to state 23

    $default  reduce using rule 25 (program)

    call     go to state 24
    program  go to state 220
    get      go to state 26
    var      go to state 27


State 220

   24 program: OPEN_P rule operator rule CLOSE_P CONDITIONAL IF EXEC program END_EXEC ELSE EXEC program . END_EXEC program

    END_EXEC  shift, and go to state 221


State 221

   24 program: OPEN_P rule operator rule CLOSE_P CONDITIONAL IF EXEC program END_EXEC ELSE EXEC program END_EXEC . program

    ALPHA   shift, and go to state 16
    INT     shift, and go to state 17
    STRING  shift, and go to state 18
    CHAR    shift, and go to state 19
    OPEN_P  shift, and go to state 20
    RETURN  shift, and go to state 21
    STDIN   shift, and go to state 22
    STDOUT  shift, and go to state 23

    $default  reduce using rule 25 (program)

    call     go to state 24
    program  go to state 222
    get      go to state 26
    var      go to state 27


State 222

   24 program: OPEN_P rule operator rule CLOSE_P CONDITIONAL IF EXEC program END_EXEC ELSE EXEC program END_EXEC program .

    $default  reduce using rule 24 (program)
