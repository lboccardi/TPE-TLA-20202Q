State 67 conflicts: 1 reduce/reduce


Grammar

    0 $accept: start $end

    1 start: MAIN EXEC program END_EXEC
    2      | function start

    3 function: INT FUNCTION ALPHA OPEN_P params CLOSE_P EXEC program END_EXEC
    4         | STRING FUNCTION ALPHA OPEN_P params CLOSE_P EXEC program END_EXEC
    5         | CHAR FUNCTION ALPHA OPEN_P params CLOSE_P EXEC program END_EXEC

    6 type: INT
    7     | STRING
    8     | CHAR

    9 params: type ALPHA
   10       | type ALPHA COMMA params
   11       | %empty

   12 args: assignment
   13     | assignment COMMA args
   14     | call
   15     | %empty

   16 call: ALPHA OPEN_P args CLOSE_P

   17 program: var END program
   18        | call END program
   19        | RETURN assignment END
   20        | RETURN ALPHA ARRAY DIGIT END
   21        | RETURN ALPHA ARRAY ALPHA END
   22        | get program
   23        | STDOUT out END program
   24        | OPEN_P rule operator rule CLOSE_P CONDITIONAL WHILE EXEC program END_EXEC program
   25        | OPEN_P rule operator rule CLOSE_P CONDITIONAL IF EXEC program END_EXEC program
   26        | OPEN_P rule operator rule CLOSE_P CONDITIONAL IF EXEC program END_EXEC ELSE EXEC program END_EXEC program
   27        | %empty

   28 get: STDIN OPEN_P ALPHA COMMA DIGIT CLOSE_P END

   29 out: SPACE_ALPHA out
   30    | ESCAPE SPACE_ALPHA ESCAPE out
   31    | %empty
   32    | ALPHA out
   33    | ESCAPE ALPHA ESCAPE out

   34 var: INT ALPHA ASSIGN DIGIT operation
   35    | INT ALPHA ASSIGN ALPHA operation
   36    | STRING ALPHA ASSIGN STRING_VALUE
   37    | STRING ALPHA ASSIGN ALPHA
   38    | CHAR ALPHA ASSIGN ESCAPE ALPHA
   39    | CHAR ALPHA ASSIGN ESCAPE DIGIT
   40    | INT ALPHA ARRAY DIGIT ASSIGN digit_array
   41    | STRING ALPHA ARRAY DIGIT ASSIGN alpha_array
   42    | CHAR ALPHA ARRAY DIGIT ASSIGN char_array
   43    | INT ALPHA ASSIGN CONVERT OPEN_P ALPHA CLOSE_P
   44    | INT ALPHA ASSIGN LENGTH OPEN_P ALPHA CLOSE_P
   45    | INT ALPHA ASSIGN ALPHA ARRAY DIGIT
   46    | STRING ALPHA ASSIGN ALPHA ARRAY DIGIT
   47    | INT ALPHA ASSIGN ALPHA ARRAY ALPHA
   48    | STRING ALPHA ASSIGN ALPHA ARRAY ALPHA
   49    | CHAR ALPHA ASSIGN ALPHA
   50    | CHAR ALPHA ASSIGN ALPHA ARRAY DIGIT
   51    | CHAR ALPHA ASSIGN ALPHA ARRAY ALPHA
   52    | INT ALPHA
   53    | CHAR ALPHA
   54    | STRING ALPHA
   55    | INT ALPHA ARRAY DIGIT
   56    | INT ALPHA ARRAY ALPHA
   57    | STRING ALPHA ARRAY DIGIT
   58    | CHAR ALPHA ARRAY DIGIT
   59    | CHAR ALPHA ARRAY ALPHA
   60    | ALPHA ASSIGN ALPHA
   61    | ALPHA ASSIGN ESCAPE ALPHA
   62    | ALPHA ASSIGN ESCAPE DIGIT
   63    | ALPHA ASSIGN STRING_VALUE
   64    | ALPHA ASSIGN var_init operation
   65    | ALPHA ASSIGN ALPHA ARRAY DIGIT
   66    | ALPHA ASSIGN ALPHA ARRAY ALPHA
   67    | ALPHA ASSIGN CONVERT OPEN_P ALPHA CLOSE_P
   68    | ALPHA ASSIGN LENGTH OPEN_P ALPHA CLOSE_P
   69    | INT ALPHA ASSIGN call
   70    | STRING ALPHA ASSIGN call
   71    | CHAR ALPHA ASSIGN call
   72    | ALPHA ASSIGN call
   73    | ALPHA ARRAY DIGIT ASSIGN DIGIT
   74    | ALPHA ARRAY DIGIT ASSIGN ESCAPE ALPHA
   75    | ALPHA ARRAY DIGIT ASSIGN ESCAPE DIGIT
   76    | ALPHA ARRAY DIGIT ASSIGN STRING_VALUE
   77    | ALPHA ARRAY ALPHA ASSIGN ALPHA
   78    | ALPHA ARRAY ALPHA ASSIGN ALPHA ARRAY ALPHA
   79    | ALPHA ARRAY ALPHA ASSIGN ESCAPE ALPHA
   80    | ALPHA ARRAY ALPHA ASSIGN ESCAPE DIGIT

   81 operation: op DIGIT operation
   82          | op ALPHA operation
   83          | %empty

   84 assignment: ALPHA
   85           | DIGIT
   86           | STRING_VALUE
   87           | ESCAPE ALPHA

   88 var_init: ALPHA
   89         | DIGIT

   90 alpha_array: STRING_VALUE COMMA alpha_array
   91            | STRING_VALUE

   92 digit_array: DIGIT COMMA digit_array
   93            | DIGIT

   94 char_array: ESCAPE ALPHA COMMA char_array
   95           | ESCAPE ALPHA
   96           | ESCAPE DIGIT COMMA char_array
   97           | ESCAPE DIGIT

   98 rule: OPEN_P rule operator rule CLOSE_P
   99     | ALPHA ARRAY DIGIT
  100     | assignment

  101 operator: op
  102         | L
  103         | G
  104         | LE
  105         | GE
  106         | EQ
  107         | NE
  108         | OR
  109         | AND

  110 op: PLUS
  111   | MINUS
  112   | DIV
  113   | TIMES
  114   | MOD


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    DIGIT <stringValue> (258) 20 28 34 39 40 41 42 45 46 50 55 57 58 62 65 73 74 75 76 80 81 85 89 92 93 96 97 99
    ALPHA <stringValue> (259) 3 4 5 9 10 16 20 21 28 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 82 84 87 88 94 95 99
    SPACE_ALPHA <stringValue> (260) 29 30
    STRING_VALUE <stringValue> (261) 36 63 76 86 90 91
    INT <stringValue> (262) 3 6 34 35 40 43 44 45 47 52 55 56 69
    STRING <stringValue> (263) 4 7 36 37 41 46 48 54 57 70
    CHAR <stringValue> (264) 5 8 38 39 42 49 50 51 53 58 59 71
    PLUS <stringValue> (265) 110
    MINUS <stringValue> (266) 111
    TIMES <stringValue> (267) 113
    DIV <stringValue> (268) 112
    MOD <stringValue> (269) 114
    END (270) 17 18 19 20 21 23 28
    OPEN_P (271) 3 4 5 16 24 25 26 28 43 44 67 68 98
    CLOSE_P (272) 3 4 5 16 24 25 26 28 43 44 67 68 98
    CONDITIONAL (273) 24 25 26
    EXEC (274) 1 3 4 5 24 25 26
    END_EXEC (275) 1 3 4 5 24 25 26
    IF (276) 25 26
    ELSE (277) 26
    ESCAPE (278) 30 33 38 39 61 62 74 75 79 80 87 94 95 96 97
    WHILE (279) 24
    L (280) 102
    G (281) 103
    LE (282) 104
    GE (283) 105
    EQ (284) 106
    NE (285) 107
    OR (286) 108
    AND (287) 109
    ASSIGN (288) 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80
    RETURN (289) 19 20 21
    MAIN (290) 1
    STDIN (291) 28
    STDOUT (292) 23
    CONVERT (293) 43 67
    LENGTH (294) 44 68
    FUNCTION (295) 3 4 5
    COMMA (296) 10 13 28 90 92 94 96
    ARRAY (297) 20 21 40 41 42 45 46 47 48 50 51 55 56 57 58 59 65 66 73 74 75 76 77 78 79 80 99


Nonterminals, with rules where they appear

    $accept (43)
        on left: 0
    start <stringValue> (44)
        on left: 1 2
        on right: 0 2
    function <stringValue> (45)
        on left: 3 4 5
        on right: 2
    type <stringValue> (46)
        on left: 6 7 8
        on right: 9 10
    params <stringValue> (47)
        on left: 9 10 11
        on right: 3 4 5 10
    args <stringValue> (48)
        on left: 12 13 14 15
        on right: 13 16
    call <stringValue> (49)
        on left: 16
        on right: 14 18 69 70 71 72
    program <stringValue> (50)
        on left: 17 18 19 20 21 22 23 24 25 26 27
        on right: 1 3 4 5 17 18 22 23 24 25 26
    get <stringValue> (51)
        on left: 28
        on right: 22
    out <stringValue> (52)
        on left: 29 30 31 32 33
        on right: 23 29 30 32 33
    var <stringValue> (53)
        on left: 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80
        on right: 17
    operation <stringValue> (54)
        on left: 81 82 83
        on right: 34 35 64 81 82
    assignment <stringValue> (55)
        on left: 84 85 86 87
        on right: 12 13 19 100
    var_init <stringValue> (56)
        on left: 88 89
        on right: 64
    alpha_array <stringValue> (57)
        on left: 90 91
        on right: 41 90
    digit_array <stringValue> (58)
        on left: 92 93
        on right: 40 92
    char_array <stringValue> (59)
        on left: 94 95 96 97
        on right: 42 94 96
    rule <stringValue> (60)
        on left: 98 99 100
        on right: 24 25 26 98
    operator <stringValue> (61)
        on left: 101 102 103 104 105 106 107 108 109
        on right: 24 25 26 98
    op <stringValue> (62)
        on left: 110 111 112 113 114
        on right: 81 82 101


State 0

    0 $accept: . start $end

    INT     shift, and go to state 1
    STRING  shift, and go to state 2
    CHAR    shift, and go to state 3
    MAIN    shift, and go to state 4

    start     go to state 5
    function  go to state 6


State 1

    3 function: INT . FUNCTION ALPHA OPEN_P params CLOSE_P EXEC program END_EXEC

    FUNCTION  shift, and go to state 7


State 2

    4 function: STRING . FUNCTION ALPHA OPEN_P params CLOSE_P EXEC program END_EXEC

    FUNCTION  shift, and go to state 8


State 3

    5 function: CHAR . FUNCTION ALPHA OPEN_P params CLOSE_P EXEC program END_EXEC

    FUNCTION  shift, and go to state 9


State 4

    1 start: MAIN . EXEC program END_EXEC

    EXEC  shift, and go to state 10


State 5

    0 $accept: start . $end

    $end  shift, and go to state 11


State 6

    2 start: function . start

    INT     shift, and go to state 1
    STRING  shift, and go to state 2
    CHAR    shift, and go to state 3
    MAIN    shift, and go to state 4

    start     go to state 12
    function  go to state 6


State 7

    3 function: INT FUNCTION . ALPHA OPEN_P params CLOSE_P EXEC program END_EXEC

    ALPHA  shift, and go to state 13


State 8

    4 function: STRING FUNCTION . ALPHA OPEN_P params CLOSE_P EXEC program END_EXEC

    ALPHA  shift, and go to state 14


State 9

    5 function: CHAR FUNCTION . ALPHA OPEN_P params CLOSE_P EXEC program END_EXEC

    ALPHA  shift, and go to state 15


State 10

    1 start: MAIN EXEC . program END_EXEC

    ALPHA   shift, and go to state 16
    INT     shift, and go to state 17
    STRING  shift, and go to state 18
    CHAR    shift, and go to state 19
    OPEN_P  shift, and go to state 20
    RETURN  shift, and go to state 21
    STDIN   shift, and go to state 22
    STDOUT  shift, and go to state 23

    $default  reduce using rule 27 (program)

    call     go to state 24
    program  go to state 25
    get      go to state 26
    var      go to state 27


State 11

    0 $accept: start $end .

    $default  accept


State 12

    2 start: function start .

    $default  reduce using rule 2 (start)


State 13

    3 function: INT FUNCTION ALPHA . OPEN_P params CLOSE_P EXEC program END_EXEC

    OPEN_P  shift, and go to state 28


State 14

    4 function: STRING FUNCTION ALPHA . OPEN_P params CLOSE_P EXEC program END_EXEC

    OPEN_P  shift, and go to state 29


State 15

    5 function: CHAR FUNCTION ALPHA . OPEN_P params CLOSE_P EXEC program END_EXEC

    OPEN_P  shift, and go to state 30


State 16

   16 call: ALPHA . OPEN_P args CLOSE_P
   60 var: ALPHA . ASSIGN ALPHA
   61    | ALPHA . ASSIGN ESCAPE ALPHA
   62    | ALPHA . ASSIGN ESCAPE DIGIT
   63    | ALPHA . ASSIGN STRING_VALUE
   64    | ALPHA . ASSIGN var_init operation
   65    | ALPHA . ASSIGN ALPHA ARRAY DIGIT
   66    | ALPHA . ASSIGN ALPHA ARRAY ALPHA
   67    | ALPHA . ASSIGN CONVERT OPEN_P ALPHA CLOSE_P
   68    | ALPHA . ASSIGN LENGTH OPEN_P ALPHA CLOSE_P
   72    | ALPHA . ASSIGN call
   73    | ALPHA . ARRAY DIGIT ASSIGN DIGIT
   74    | ALPHA . ARRAY DIGIT ASSIGN ESCAPE ALPHA
   75    | ALPHA . ARRAY DIGIT ASSIGN ESCAPE DIGIT
   76    | ALPHA . ARRAY DIGIT ASSIGN STRING_VALUE
   77    | ALPHA . ARRAY ALPHA ASSIGN ALPHA
   78    | ALPHA . ARRAY ALPHA ASSIGN ALPHA ARRAY ALPHA
   79    | ALPHA . ARRAY ALPHA ASSIGN ESCAPE ALPHA
   80    | ALPHA . ARRAY ALPHA ASSIGN ESCAPE DIGIT

    OPEN_P  shift, and go to state 31
    ASSIGN  shift, and go to state 32
    ARRAY   shift, and go to state 33


State 17

   34 var: INT . ALPHA ASSIGN DIGIT operation
   35    | INT . ALPHA ASSIGN ALPHA operation
   40    | INT . ALPHA ARRAY DIGIT ASSIGN digit_array
   43    | INT . ALPHA ASSIGN CONVERT OPEN_P ALPHA CLOSE_P
   44    | INT . ALPHA ASSIGN LENGTH OPEN_P ALPHA CLOSE_P
   45    | INT . ALPHA ASSIGN ALPHA ARRAY DIGIT
   47    | INT . ALPHA ASSIGN ALPHA ARRAY ALPHA
   52    | INT . ALPHA
   55    | INT . ALPHA ARRAY DIGIT
   56    | INT . ALPHA ARRAY ALPHA
   69    | INT . ALPHA ASSIGN call

    ALPHA  shift, and go to state 34


State 18

   36 var: STRING . ALPHA ASSIGN STRING_VALUE
   37    | STRING . ALPHA ASSIGN ALPHA
   41    | STRING . ALPHA ARRAY DIGIT ASSIGN alpha_array
   46    | STRING . ALPHA ASSIGN ALPHA ARRAY DIGIT
   48    | STRING . ALPHA ASSIGN ALPHA ARRAY ALPHA
   54    | STRING . ALPHA
   57    | STRING . ALPHA ARRAY DIGIT
   70    | STRING . ALPHA ASSIGN call

    ALPHA  shift, and go to state 35


State 19

   38 var: CHAR . ALPHA ASSIGN ESCAPE ALPHA
   39    | CHAR . ALPHA ASSIGN ESCAPE DIGIT
   42    | CHAR . ALPHA ARRAY DIGIT ASSIGN char_array
   49    | CHAR . ALPHA ASSIGN ALPHA
   50    | CHAR . ALPHA ASSIGN ALPHA ARRAY DIGIT
   51    | CHAR . ALPHA ASSIGN ALPHA ARRAY ALPHA
   53    | CHAR . ALPHA
   58    | CHAR . ALPHA ARRAY DIGIT
   59    | CHAR . ALPHA ARRAY ALPHA
   71    | CHAR . ALPHA ASSIGN call

    ALPHA  shift, and go to state 36


State 20

   24 program: OPEN_P . rule operator rule CLOSE_P CONDITIONAL WHILE EXEC program END_EXEC program
   25        | OPEN_P . rule operator rule CLOSE_P CONDITIONAL IF EXEC program END_EXEC program
   26        | OPEN_P . rule operator rule CLOSE_P CONDITIONAL IF EXEC program END_EXEC ELSE EXEC program END_EXEC program

    DIGIT         shift, and go to state 37
    ALPHA         shift, and go to state 38
    STRING_VALUE  shift, and go to state 39
    OPEN_P        shift, and go to state 40
    ESCAPE        shift, and go to state 41

    assignment  go to state 42
    rule        go to state 43


State 21

   19 program: RETURN . assignment END
   20        | RETURN . ALPHA ARRAY DIGIT END
   21        | RETURN . ALPHA ARRAY ALPHA END

    DIGIT         shift, and go to state 37
    ALPHA         shift, and go to state 44
    STRING_VALUE  shift, and go to state 39
    ESCAPE        shift, and go to state 41

    assignment  go to state 45


State 22

   28 get: STDIN . OPEN_P ALPHA COMMA DIGIT CLOSE_P END

    OPEN_P  shift, and go to state 46


State 23

   23 program: STDOUT . out END program

    ALPHA        shift, and go to state 47
    SPACE_ALPHA  shift, and go to state 48
    ESCAPE       shift, and go to state 49

    $default  reduce using rule 31 (out)

    out  go to state 50


State 24

   18 program: call . END program

    END  shift, and go to state 51


State 25

    1 start: MAIN EXEC program . END_EXEC

    END_EXEC  shift, and go to state 52


State 26

   22 program: get . program

    ALPHA   shift, and go to state 16
    INT     shift, and go to state 17
    STRING  shift, and go to state 18
    CHAR    shift, and go to state 19
    OPEN_P  shift, and go to state 20
    RETURN  shift, and go to state 21
    STDIN   shift, and go to state 22
    STDOUT  shift, and go to state 23

    $default  reduce using rule 27 (program)

    call     go to state 24
    program  go to state 53
    get      go to state 26
    var      go to state 27


State 27

   17 program: var . END program

    END  shift, and go to state 54


State 28

    3 function: INT FUNCTION ALPHA OPEN_P . params CLOSE_P EXEC program END_EXEC

    INT     shift, and go to state 55
    STRING  shift, and go to state 56
    CHAR    shift, and go to state 57

    $default  reduce using rule 11 (params)

    type    go to state 58
    params  go to state 59


State 29

    4 function: STRING FUNCTION ALPHA OPEN_P . params CLOSE_P EXEC program END_EXEC

    INT     shift, and go to state 55
    STRING  shift, and go to state 56
    CHAR    shift, and go to state 57

    $default  reduce using rule 11 (params)

    type    go to state 58
    params  go to state 60


State 30

    5 function: CHAR FUNCTION ALPHA OPEN_P . params CLOSE_P EXEC program END_EXEC

    INT     shift, and go to state 55
    STRING  shift, and go to state 56
    CHAR    shift, and go to state 57

    $default  reduce using rule 11 (params)

    type    go to state 58
    params  go to state 61


State 31

   16 call: ALPHA OPEN_P . args CLOSE_P

    DIGIT         shift, and go to state 37
    ALPHA         shift, and go to state 62
    STRING_VALUE  shift, and go to state 39
    ESCAPE        shift, and go to state 41

    $default  reduce using rule 15 (args)

    args        go to state 63
    call        go to state 64
    assignment  go to state 65


State 32

   60 var: ALPHA ASSIGN . ALPHA
   61    | ALPHA ASSIGN . ESCAPE ALPHA
   62    | ALPHA ASSIGN . ESCAPE DIGIT
   63    | ALPHA ASSIGN . STRING_VALUE
   64    | ALPHA ASSIGN . var_init operation
   65    | ALPHA ASSIGN . ALPHA ARRAY DIGIT
   66    | ALPHA ASSIGN . ALPHA ARRAY ALPHA
   67    | ALPHA ASSIGN . CONVERT OPEN_P ALPHA CLOSE_P
   68    | ALPHA ASSIGN . LENGTH OPEN_P ALPHA CLOSE_P
   72    | ALPHA ASSIGN . call

    DIGIT         shift, and go to state 66
    ALPHA         shift, and go to state 67
    STRING_VALUE  shift, and go to state 68
    ESCAPE        shift, and go to state 69
    CONVERT       shift, and go to state 70
    LENGTH        shift, and go to state 71

    call      go to state 72
    var_init  go to state 73


State 33

   73 var: ALPHA ARRAY . DIGIT ASSIGN DIGIT
   74    | ALPHA ARRAY . DIGIT ASSIGN ESCAPE ALPHA
   75    | ALPHA ARRAY . DIGIT ASSIGN ESCAPE DIGIT
   76    | ALPHA ARRAY . DIGIT ASSIGN STRING_VALUE
   77    | ALPHA ARRAY . ALPHA ASSIGN ALPHA
   78    | ALPHA ARRAY . ALPHA ASSIGN ALPHA ARRAY ALPHA
   79    | ALPHA ARRAY . ALPHA ASSIGN ESCAPE ALPHA
   80    | ALPHA ARRAY . ALPHA ASSIGN ESCAPE DIGIT

    DIGIT  shift, and go to state 74
    ALPHA  shift, and go to state 75


State 34

   34 var: INT ALPHA . ASSIGN DIGIT operation
   35    | INT ALPHA . ASSIGN ALPHA operation
   40    | INT ALPHA . ARRAY DIGIT ASSIGN digit_array
   43    | INT ALPHA . ASSIGN CONVERT OPEN_P ALPHA CLOSE_P
   44    | INT ALPHA . ASSIGN LENGTH OPEN_P ALPHA CLOSE_P
   45    | INT ALPHA . ASSIGN ALPHA ARRAY DIGIT
   47    | INT ALPHA . ASSIGN ALPHA ARRAY ALPHA
   52    | INT ALPHA .
   55    | INT ALPHA . ARRAY DIGIT
   56    | INT ALPHA . ARRAY ALPHA
   69    | INT ALPHA . ASSIGN call

    ASSIGN  shift, and go to state 76
    ARRAY   shift, and go to state 77

    $default  reduce using rule 52 (var)


State 35

   36 var: STRING ALPHA . ASSIGN STRING_VALUE
   37    | STRING ALPHA . ASSIGN ALPHA
   41    | STRING ALPHA . ARRAY DIGIT ASSIGN alpha_array
   46    | STRING ALPHA . ASSIGN ALPHA ARRAY DIGIT
   48    | STRING ALPHA . ASSIGN ALPHA ARRAY ALPHA
   54    | STRING ALPHA .
   57    | STRING ALPHA . ARRAY DIGIT
   70    | STRING ALPHA . ASSIGN call

    ASSIGN  shift, and go to state 78
    ARRAY   shift, and go to state 79

    $default  reduce using rule 54 (var)


State 36

   38 var: CHAR ALPHA . ASSIGN ESCAPE ALPHA
   39    | CHAR ALPHA . ASSIGN ESCAPE DIGIT
   42    | CHAR ALPHA . ARRAY DIGIT ASSIGN char_array
   49    | CHAR ALPHA . ASSIGN ALPHA
   50    | CHAR ALPHA . ASSIGN ALPHA ARRAY DIGIT
   51    | CHAR ALPHA . ASSIGN ALPHA ARRAY ALPHA
   53    | CHAR ALPHA .
   58    | CHAR ALPHA . ARRAY DIGIT
   59    | CHAR ALPHA . ARRAY ALPHA
   71    | CHAR ALPHA . ASSIGN call

    ASSIGN  shift, and go to state 80
    ARRAY   shift, and go to state 81

    $default  reduce using rule 53 (var)


State 37

   85 assignment: DIGIT .

    $default  reduce using rule 85 (assignment)


State 38

   84 assignment: ALPHA .
   99 rule: ALPHA . ARRAY DIGIT

    ARRAY  shift, and go to state 82

    $default  reduce using rule 84 (assignment)


State 39

   86 assignment: STRING_VALUE .

    $default  reduce using rule 86 (assignment)


State 40

   98 rule: OPEN_P . rule operator rule CLOSE_P

    DIGIT         shift, and go to state 37
    ALPHA         shift, and go to state 38
    STRING_VALUE  shift, and go to state 39
    OPEN_P        shift, and go to state 40
    ESCAPE        shift, and go to state 41

    assignment  go to state 42
    rule        go to state 83


State 41

   87 assignment: ESCAPE . ALPHA

    ALPHA  shift, and go to state 84


State 42

  100 rule: assignment .

    $default  reduce using rule 100 (rule)


State 43

   24 program: OPEN_P rule . operator rule CLOSE_P CONDITIONAL WHILE EXEC program END_EXEC program
   25        | OPEN_P rule . operator rule CLOSE_P CONDITIONAL IF EXEC program END_EXEC program
   26        | OPEN_P rule . operator rule CLOSE_P CONDITIONAL IF EXEC program END_EXEC ELSE EXEC program END_EXEC program

    PLUS   shift, and go to state 85
    MINUS  shift, and go to state 86
    TIMES  shift, and go to state 87
    DIV    shift, and go to state 88
    MOD    shift, and go to state 89
    L      shift, and go to state 90
    G      shift, and go to state 91
    LE     shift, and go to state 92
    GE     shift, and go to state 93
    EQ     shift, and go to state 94
    NE     shift, and go to state 95
    OR     shift, and go to state 96
    AND    shift, and go to state 97

    operator  go to state 98
    op        go to state 99


State 44

   20 program: RETURN ALPHA . ARRAY DIGIT END
   21        | RETURN ALPHA . ARRAY ALPHA END
   84 assignment: ALPHA .

    ARRAY  shift, and go to state 100

    $default  reduce using rule 84 (assignment)


State 45

   19 program: RETURN assignment . END

    END  shift, and go to state 101


State 46

   28 get: STDIN OPEN_P . ALPHA COMMA DIGIT CLOSE_P END

    ALPHA  shift, and go to state 102


State 47

   32 out: ALPHA . out

    ALPHA        shift, and go to state 47
    SPACE_ALPHA  shift, and go to state 48
    ESCAPE       shift, and go to state 49

    $default  reduce using rule 31 (out)

    out  go to state 103


State 48

   29 out: SPACE_ALPHA . out

    ALPHA        shift, and go to state 47
    SPACE_ALPHA  shift, and go to state 48
    ESCAPE       shift, and go to state 49

    $default  reduce using rule 31 (out)

    out  go to state 104


State 49

   30 out: ESCAPE . SPACE_ALPHA ESCAPE out
   33    | ESCAPE . ALPHA ESCAPE out

    ALPHA        shift, and go to state 105
    SPACE_ALPHA  shift, and go to state 106


State 50

   23 program: STDOUT out . END program

    END  shift, and go to state 107


State 51

   18 program: call END . program

    ALPHA   shift, and go to state 16
    INT     shift, and go to state 17
    STRING  shift, and go to state 18
    CHAR    shift, and go to state 19
    OPEN_P  shift, and go to state 20
    RETURN  shift, and go to state 21
    STDIN   shift, and go to state 22
    STDOUT  shift, and go to state 23

    $default  reduce using rule 27 (program)

    call     go to state 24
    program  go to state 108
    get      go to state 26
    var      go to state 27


State 52

    1 start: MAIN EXEC program END_EXEC .

    $default  reduce using rule 1 (start)


State 53

   22 program: get program .

    $default  reduce using rule 22 (program)


State 54

   17 program: var END . program

    ALPHA   shift, and go to state 16
    INT     shift, and go to state 17
    STRING  shift, and go to state 18
    CHAR    shift, and go to state 19
    OPEN_P  shift, and go to state 20
    RETURN  shift, and go to state 21
    STDIN   shift, and go to state 22
    STDOUT  shift, and go to state 23

    $default  reduce using rule 27 (program)

    call     go to state 24
    program  go to state 109
    get      go to state 26
    var      go to state 27


State 55

    6 type: INT .

    $default  reduce using rule 6 (type)


State 56

    7 type: STRING .

    $default  reduce using rule 7 (type)


State 57

    8 type: CHAR .

    $default  reduce using rule 8 (type)


State 58

    9 params: type . ALPHA
   10       | type . ALPHA COMMA params

    ALPHA  shift, and go to state 110


State 59

    3 function: INT FUNCTION ALPHA OPEN_P params . CLOSE_P EXEC program END_EXEC

    CLOSE_P  shift, and go to state 111


State 60

    4 function: STRING FUNCTION ALPHA OPEN_P params . CLOSE_P EXEC program END_EXEC

    CLOSE_P  shift, and go to state 112


State 61

    5 function: CHAR FUNCTION ALPHA OPEN_P params . CLOSE_P EXEC program END_EXEC

    CLOSE_P  shift, and go to state 113


State 62

   16 call: ALPHA . OPEN_P args CLOSE_P
   84 assignment: ALPHA .

    OPEN_P  shift, and go to state 31

    $default  reduce using rule 84 (assignment)


State 63

   16 call: ALPHA OPEN_P args . CLOSE_P

    CLOSE_P  shift, and go to state 114


State 64

   14 args: call .

    $default  reduce using rule 14 (args)


State 65

   12 args: assignment .
   13     | assignment . COMMA args

    COMMA  shift, and go to state 115

    $default  reduce using rule 12 (args)


State 66

   89 var_init: DIGIT .

    $default  reduce using rule 89 (var_init)


State 67

   16 call: ALPHA . OPEN_P args CLOSE_P
   60 var: ALPHA ASSIGN ALPHA .
   65    | ALPHA ASSIGN ALPHA . ARRAY DIGIT
   66    | ALPHA ASSIGN ALPHA . ARRAY ALPHA
   88 var_init: ALPHA .

    OPEN_P  shift, and go to state 31
    ARRAY   shift, and go to state 116

    END       reduce using rule 60 (var)
    END       [reduce using rule 88 (var_init)]
    $default  reduce using rule 88 (var_init)


State 68

   63 var: ALPHA ASSIGN STRING_VALUE .

    $default  reduce using rule 63 (var)


State 69

   61 var: ALPHA ASSIGN ESCAPE . ALPHA
   62    | ALPHA ASSIGN ESCAPE . DIGIT

    DIGIT  shift, and go to state 117
    ALPHA  shift, and go to state 118


State 70

   67 var: ALPHA ASSIGN CONVERT . OPEN_P ALPHA CLOSE_P

    OPEN_P  shift, and go to state 119


State 71

   68 var: ALPHA ASSIGN LENGTH . OPEN_P ALPHA CLOSE_P

    OPEN_P  shift, and go to state 120


State 72

   72 var: ALPHA ASSIGN call .

    $default  reduce using rule 72 (var)


State 73

   64 var: ALPHA ASSIGN var_init . operation

    PLUS   shift, and go to state 85
    MINUS  shift, and go to state 86
    TIMES  shift, and go to state 87
    DIV    shift, and go to state 88
    MOD    shift, and go to state 89

    $default  reduce using rule 83 (operation)

    operation  go to state 121
    op         go to state 122


State 74

   73 var: ALPHA ARRAY DIGIT . ASSIGN DIGIT
   74    | ALPHA ARRAY DIGIT . ASSIGN ESCAPE ALPHA
   75    | ALPHA ARRAY DIGIT . ASSIGN ESCAPE DIGIT
   76    | ALPHA ARRAY DIGIT . ASSIGN STRING_VALUE

    ASSIGN  shift, and go to state 123


State 75

   77 var: ALPHA ARRAY ALPHA . ASSIGN ALPHA
   78    | ALPHA ARRAY ALPHA . ASSIGN ALPHA ARRAY ALPHA
   79    | ALPHA ARRAY ALPHA . ASSIGN ESCAPE ALPHA
   80    | ALPHA ARRAY ALPHA . ASSIGN ESCAPE DIGIT

    ASSIGN  shift, and go to state 124


State 76

   34 var: INT ALPHA ASSIGN . DIGIT operation
   35    | INT ALPHA ASSIGN . ALPHA operation
   43    | INT ALPHA ASSIGN . CONVERT OPEN_P ALPHA CLOSE_P
   44    | INT ALPHA ASSIGN . LENGTH OPEN_P ALPHA CLOSE_P
   45    | INT ALPHA ASSIGN . ALPHA ARRAY DIGIT
   47    | INT ALPHA ASSIGN . ALPHA ARRAY ALPHA
   69    | INT ALPHA ASSIGN . call

    DIGIT    shift, and go to state 125
    ALPHA    shift, and go to state 126
    CONVERT  shift, and go to state 127
    LENGTH   shift, and go to state 128

    call  go to state 129


State 77

   40 var: INT ALPHA ARRAY . DIGIT ASSIGN digit_array
   55    | INT ALPHA ARRAY . DIGIT
   56    | INT ALPHA ARRAY . ALPHA

    DIGIT  shift, and go to state 130
    ALPHA  shift, and go to state 131


State 78

   36 var: STRING ALPHA ASSIGN . STRING_VALUE
   37    | STRING ALPHA ASSIGN . ALPHA
   46    | STRING ALPHA ASSIGN . ALPHA ARRAY DIGIT
   48    | STRING ALPHA ASSIGN . ALPHA ARRAY ALPHA
   70    | STRING ALPHA ASSIGN . call

    ALPHA         shift, and go to state 132
    STRING_VALUE  shift, and go to state 133

    call  go to state 134


State 79

   41 var: STRING ALPHA ARRAY . DIGIT ASSIGN alpha_array
   57    | STRING ALPHA ARRAY . DIGIT

    DIGIT  shift, and go to state 135


State 80

   38 var: CHAR ALPHA ASSIGN . ESCAPE ALPHA
   39    | CHAR ALPHA ASSIGN . ESCAPE DIGIT
   49    | CHAR ALPHA ASSIGN . ALPHA
   50    | CHAR ALPHA ASSIGN . ALPHA ARRAY DIGIT
   51    | CHAR ALPHA ASSIGN . ALPHA ARRAY ALPHA
   71    | CHAR ALPHA ASSIGN . call

    ALPHA   shift, and go to state 136
    ESCAPE  shift, and go to state 137

    call  go to state 138


State 81

   42 var: CHAR ALPHA ARRAY . DIGIT ASSIGN char_array
   58    | CHAR ALPHA ARRAY . DIGIT
   59    | CHAR ALPHA ARRAY . ALPHA

    DIGIT  shift, and go to state 139
    ALPHA  shift, and go to state 140


State 82

   99 rule: ALPHA ARRAY . DIGIT

    DIGIT  shift, and go to state 141


State 83

   98 rule: OPEN_P rule . operator rule CLOSE_P

    PLUS   shift, and go to state 85
    MINUS  shift, and go to state 86
    TIMES  shift, and go to state 87
    DIV    shift, and go to state 88
    MOD    shift, and go to state 89
    L      shift, and go to state 90
    G      shift, and go to state 91
    LE     shift, and go to state 92
    GE     shift, and go to state 93
    EQ     shift, and go to state 94
    NE     shift, and go to state 95
    OR     shift, and go to state 96
    AND    shift, and go to state 97

    operator  go to state 142
    op        go to state 99


State 84

   87 assignment: ESCAPE ALPHA .

    $default  reduce using rule 87 (assignment)


State 85

  110 op: PLUS .

    $default  reduce using rule 110 (op)


State 86

  111 op: MINUS .

    $default  reduce using rule 111 (op)


State 87

  113 op: TIMES .

    $default  reduce using rule 113 (op)


State 88

  112 op: DIV .

    $default  reduce using rule 112 (op)


State 89

  114 op: MOD .

    $default  reduce using rule 114 (op)


State 90

  102 operator: L .

    $default  reduce using rule 102 (operator)


State 91

  103 operator: G .

    $default  reduce using rule 103 (operator)


State 92

  104 operator: LE .

    $default  reduce using rule 104 (operator)


State 93

  105 operator: GE .

    $default  reduce using rule 105 (operator)


State 94

  106 operator: EQ .

    $default  reduce using rule 106 (operator)


State 95

  107 operator: NE .

    $default  reduce using rule 107 (operator)


State 96

  108 operator: OR .

    $default  reduce using rule 108 (operator)


State 97

  109 operator: AND .

    $default  reduce using rule 109 (operator)


State 98

   24 program: OPEN_P rule operator . rule CLOSE_P CONDITIONAL WHILE EXEC program END_EXEC program
   25        | OPEN_P rule operator . rule CLOSE_P CONDITIONAL IF EXEC program END_EXEC program
   26        | OPEN_P rule operator . rule CLOSE_P CONDITIONAL IF EXEC program END_EXEC ELSE EXEC program END_EXEC program

    DIGIT         shift, and go to state 37
    ALPHA         shift, and go to state 38
    STRING_VALUE  shift, and go to state 39
    OPEN_P        shift, and go to state 40
    ESCAPE        shift, and go to state 41

    assignment  go to state 42
    rule        go to state 143


State 99

  101 operator: op .

    $default  reduce using rule 101 (operator)


State 100

   20 program: RETURN ALPHA ARRAY . DIGIT END
   21        | RETURN ALPHA ARRAY . ALPHA END

    DIGIT  shift, and go to state 144
    ALPHA  shift, and go to state 145


State 101

   19 program: RETURN assignment END .

    $default  reduce using rule 19 (program)


State 102

   28 get: STDIN OPEN_P ALPHA . COMMA DIGIT CLOSE_P END

    COMMA  shift, and go to state 146


State 103

   32 out: ALPHA out .

    $default  reduce using rule 32 (out)


State 104

   29 out: SPACE_ALPHA out .

    $default  reduce using rule 29 (out)


State 105

   33 out: ESCAPE ALPHA . ESCAPE out

    ESCAPE  shift, and go to state 147


State 106

   30 out: ESCAPE SPACE_ALPHA . ESCAPE out

    ESCAPE  shift, and go to state 148


State 107

   23 program: STDOUT out END . program

    ALPHA   shift, and go to state 16
    INT     shift, and go to state 17
    STRING  shift, and go to state 18
    CHAR    shift, and go to state 19
    OPEN_P  shift, and go to state 20
    RETURN  shift, and go to state 21
    STDIN   shift, and go to state 22
    STDOUT  shift, and go to state 23

    $default  reduce using rule 27 (program)

    call     go to state 24
    program  go to state 149
    get      go to state 26
    var      go to state 27


State 108

   18 program: call END program .

    $default  reduce using rule 18 (program)


State 109

   17 program: var END program .

    $default  reduce using rule 17 (program)


State 110

    9 params: type ALPHA .
   10       | type ALPHA . COMMA params

    COMMA  shift, and go to state 150

    $default  reduce using rule 9 (params)


State 111

    3 function: INT FUNCTION ALPHA OPEN_P params CLOSE_P . EXEC program END_EXEC

    EXEC  shift, and go to state 151


State 112

    4 function: STRING FUNCTION ALPHA OPEN_P params CLOSE_P . EXEC program END_EXEC

    EXEC  shift, and go to state 152


State 113

    5 function: CHAR FUNCTION ALPHA OPEN_P params CLOSE_P . EXEC program END_EXEC

    EXEC  shift, and go to state 153


State 114

   16 call: ALPHA OPEN_P args CLOSE_P .

    $default  reduce using rule 16 (call)


State 115

   13 args: assignment COMMA . args

    DIGIT         shift, and go to state 37
    ALPHA         shift, and go to state 62
    STRING_VALUE  shift, and go to state 39
    ESCAPE        shift, and go to state 41

    $default  reduce using rule 15 (args)

    args        go to state 154
    call        go to state 64
    assignment  go to state 65


State 116

   65 var: ALPHA ASSIGN ALPHA ARRAY . DIGIT
   66    | ALPHA ASSIGN ALPHA ARRAY . ALPHA

    DIGIT  shift, and go to state 155
    ALPHA  shift, and go to state 156


State 117

   62 var: ALPHA ASSIGN ESCAPE DIGIT .

    $default  reduce using rule 62 (var)


State 118

   61 var: ALPHA ASSIGN ESCAPE ALPHA .

    $default  reduce using rule 61 (var)


State 119

   67 var: ALPHA ASSIGN CONVERT OPEN_P . ALPHA CLOSE_P

    ALPHA  shift, and go to state 157


State 120

   68 var: ALPHA ASSIGN LENGTH OPEN_P . ALPHA CLOSE_P

    ALPHA  shift, and go to state 158


State 121

   64 var: ALPHA ASSIGN var_init operation .

    $default  reduce using rule 64 (var)


State 122

   81 operation: op . DIGIT operation
   82          | op . ALPHA operation

    DIGIT  shift, and go to state 159
    ALPHA  shift, and go to state 160


State 123

   73 var: ALPHA ARRAY DIGIT ASSIGN . DIGIT
   74    | ALPHA ARRAY DIGIT ASSIGN . ESCAPE ALPHA
   75    | ALPHA ARRAY DIGIT ASSIGN . ESCAPE DIGIT
   76    | ALPHA ARRAY DIGIT ASSIGN . STRING_VALUE

    DIGIT         shift, and go to state 161
    STRING_VALUE  shift, and go to state 162
    ESCAPE        shift, and go to state 163


State 124

   77 var: ALPHA ARRAY ALPHA ASSIGN . ALPHA
   78    | ALPHA ARRAY ALPHA ASSIGN . ALPHA ARRAY ALPHA
   79    | ALPHA ARRAY ALPHA ASSIGN . ESCAPE ALPHA
   80    | ALPHA ARRAY ALPHA ASSIGN . ESCAPE DIGIT

    ALPHA   shift, and go to state 164
    ESCAPE  shift, and go to state 165


State 125

   34 var: INT ALPHA ASSIGN DIGIT . operation

    PLUS   shift, and go to state 85
    MINUS  shift, and go to state 86
    TIMES  shift, and go to state 87
    DIV    shift, and go to state 88
    MOD    shift, and go to state 89

    $default  reduce using rule 83 (operation)

    operation  go to state 166
    op         go to state 122


State 126

   16 call: ALPHA . OPEN_P args CLOSE_P
   35 var: INT ALPHA ASSIGN ALPHA . operation
   45    | INT ALPHA ASSIGN ALPHA . ARRAY DIGIT
   47    | INT ALPHA ASSIGN ALPHA . ARRAY ALPHA

    PLUS    shift, and go to state 85
    MINUS   shift, and go to state 86
    TIMES   shift, and go to state 87
    DIV     shift, and go to state 88
    MOD     shift, and go to state 89
    OPEN_P  shift, and go to state 31
    ARRAY   shift, and go to state 167

    $default  reduce using rule 83 (operation)

    operation  go to state 168
    op         go to state 122


State 127

   43 var: INT ALPHA ASSIGN CONVERT . OPEN_P ALPHA CLOSE_P

    OPEN_P  shift, and go to state 169


State 128

   44 var: INT ALPHA ASSIGN LENGTH . OPEN_P ALPHA CLOSE_P

    OPEN_P  shift, and go to state 170


State 129

   69 var: INT ALPHA ASSIGN call .

    $default  reduce using rule 69 (var)


State 130

   40 var: INT ALPHA ARRAY DIGIT . ASSIGN digit_array
   55    | INT ALPHA ARRAY DIGIT .

    ASSIGN  shift, and go to state 171

    $default  reduce using rule 55 (var)


State 131

   56 var: INT ALPHA ARRAY ALPHA .

    $default  reduce using rule 56 (var)


State 132

   16 call: ALPHA . OPEN_P args CLOSE_P
   37 var: STRING ALPHA ASSIGN ALPHA .
   46    | STRING ALPHA ASSIGN ALPHA . ARRAY DIGIT
   48    | STRING ALPHA ASSIGN ALPHA . ARRAY ALPHA

    OPEN_P  shift, and go to state 31
    ARRAY   shift, and go to state 172

    $default  reduce using rule 37 (var)


State 133

   36 var: STRING ALPHA ASSIGN STRING_VALUE .

    $default  reduce using rule 36 (var)


State 134

   70 var: STRING ALPHA ASSIGN call .

    $default  reduce using rule 70 (var)


State 135

   41 var: STRING ALPHA ARRAY DIGIT . ASSIGN alpha_array
   57    | STRING ALPHA ARRAY DIGIT .

    ASSIGN  shift, and go to state 173

    $default  reduce using rule 57 (var)


State 136

   16 call: ALPHA . OPEN_P args CLOSE_P
   49 var: CHAR ALPHA ASSIGN ALPHA .
   50    | CHAR ALPHA ASSIGN ALPHA . ARRAY DIGIT
   51    | CHAR ALPHA ASSIGN ALPHA . ARRAY ALPHA

    OPEN_P  shift, and go to state 31
    ARRAY   shift, and go to state 174

    $default  reduce using rule 49 (var)


State 137

   38 var: CHAR ALPHA ASSIGN ESCAPE . ALPHA
   39    | CHAR ALPHA ASSIGN ESCAPE . DIGIT

    DIGIT  shift, and go to state 175
    ALPHA  shift, and go to state 176


State 138

   71 var: CHAR ALPHA ASSIGN call .

    $default  reduce using rule 71 (var)


State 139

   42 var: CHAR ALPHA ARRAY DIGIT . ASSIGN char_array
   58    | CHAR ALPHA ARRAY DIGIT .

    ASSIGN  shift, and go to state 177

    $default  reduce using rule 58 (var)


State 140

   59 var: CHAR ALPHA ARRAY ALPHA .

    $default  reduce using rule 59 (var)


State 141

   99 rule: ALPHA ARRAY DIGIT .

    $default  reduce using rule 99 (rule)


State 142

   98 rule: OPEN_P rule operator . rule CLOSE_P

    DIGIT         shift, and go to state 37
    ALPHA         shift, and go to state 38
    STRING_VALUE  shift, and go to state 39
    OPEN_P        shift, and go to state 40
    ESCAPE        shift, and go to state 41

    assignment  go to state 42
    rule        go to state 178


State 143

   24 program: OPEN_P rule operator rule . CLOSE_P CONDITIONAL WHILE EXEC program END_EXEC program
   25        | OPEN_P rule operator rule . CLOSE_P CONDITIONAL IF EXEC program END_EXEC program
   26        | OPEN_P rule operator rule . CLOSE_P CONDITIONAL IF EXEC program END_EXEC ELSE EXEC program END_EXEC program

    CLOSE_P  shift, and go to state 179


State 144

   20 program: RETURN ALPHA ARRAY DIGIT . END

    END  shift, and go to state 180


State 145

   21 program: RETURN ALPHA ARRAY ALPHA . END

    END  shift, and go to state 181


State 146

   28 get: STDIN OPEN_P ALPHA COMMA . DIGIT CLOSE_P END

    DIGIT  shift, and go to state 182


State 147

   33 out: ESCAPE ALPHA ESCAPE . out

    ALPHA        shift, and go to state 47
    SPACE_ALPHA  shift, and go to state 48
    ESCAPE       shift, and go to state 49

    $default  reduce using rule 31 (out)

    out  go to state 183


State 148

   30 out: ESCAPE SPACE_ALPHA ESCAPE . out

    ALPHA        shift, and go to state 47
    SPACE_ALPHA  shift, and go to state 48
    ESCAPE       shift, and go to state 49

    $default  reduce using rule 31 (out)

    out  go to state 184


State 149

   23 program: STDOUT out END program .

    $default  reduce using rule 23 (program)


State 150

   10 params: type ALPHA COMMA . params

    INT     shift, and go to state 55
    STRING  shift, and go to state 56
    CHAR    shift, and go to state 57

    $default  reduce using rule 11 (params)

    type    go to state 58
    params  go to state 185


State 151

    3 function: INT FUNCTION ALPHA OPEN_P params CLOSE_P EXEC . program END_EXEC

    ALPHA   shift, and go to state 16
    INT     shift, and go to state 17
    STRING  shift, and go to state 18
    CHAR    shift, and go to state 19
    OPEN_P  shift, and go to state 20
    RETURN  shift, and go to state 21
    STDIN   shift, and go to state 22
    STDOUT  shift, and go to state 23

    $default  reduce using rule 27 (program)

    call     go to state 24
    program  go to state 186
    get      go to state 26
    var      go to state 27


State 152

    4 function: STRING FUNCTION ALPHA OPEN_P params CLOSE_P EXEC . program END_EXEC

    ALPHA   shift, and go to state 16
    INT     shift, and go to state 17
    STRING  shift, and go to state 18
    CHAR    shift, and go to state 19
    OPEN_P  shift, and go to state 20
    RETURN  shift, and go to state 21
    STDIN   shift, and go to state 22
    STDOUT  shift, and go to state 23

    $default  reduce using rule 27 (program)

    call     go to state 24
    program  go to state 187
    get      go to state 26
    var      go to state 27


State 153

    5 function: CHAR FUNCTION ALPHA OPEN_P params CLOSE_P EXEC . program END_EXEC

    ALPHA   shift, and go to state 16
    INT     shift, and go to state 17
    STRING  shift, and go to state 18
    CHAR    shift, and go to state 19
    OPEN_P  shift, and go to state 20
    RETURN  shift, and go to state 21
    STDIN   shift, and go to state 22
    STDOUT  shift, and go to state 23

    $default  reduce using rule 27 (program)

    call     go to state 24
    program  go to state 188
    get      go to state 26
    var      go to state 27


State 154

   13 args: assignment COMMA args .

    $default  reduce using rule 13 (args)


State 155

   65 var: ALPHA ASSIGN ALPHA ARRAY DIGIT .

    $default  reduce using rule 65 (var)


State 156

   66 var: ALPHA ASSIGN ALPHA ARRAY ALPHA .

    $default  reduce using rule 66 (var)


State 157

   67 var: ALPHA ASSIGN CONVERT OPEN_P ALPHA . CLOSE_P

    CLOSE_P  shift, and go to state 189


State 158

   68 var: ALPHA ASSIGN LENGTH OPEN_P ALPHA . CLOSE_P

    CLOSE_P  shift, and go to state 190


State 159

   81 operation: op DIGIT . operation

    PLUS   shift, and go to state 85
    MINUS  shift, and go to state 86
    TIMES  shift, and go to state 87
    DIV    shift, and go to state 88
    MOD    shift, and go to state 89

    $default  reduce using rule 83 (operation)

    operation  go to state 191
    op         go to state 122


State 160

   82 operation: op ALPHA . operation

    PLUS   shift, and go to state 85
    MINUS  shift, and go to state 86
    TIMES  shift, and go to state 87
    DIV    shift, and go to state 88
    MOD    shift, and go to state 89

    $default  reduce using rule 83 (operation)

    operation  go to state 192
    op         go to state 122


State 161

   73 var: ALPHA ARRAY DIGIT ASSIGN DIGIT .

    $default  reduce using rule 73 (var)


State 162

   76 var: ALPHA ARRAY DIGIT ASSIGN STRING_VALUE .

    $default  reduce using rule 76 (var)


State 163

   74 var: ALPHA ARRAY DIGIT ASSIGN ESCAPE . ALPHA
   75    | ALPHA ARRAY DIGIT ASSIGN ESCAPE . DIGIT

    DIGIT  shift, and go to state 193
    ALPHA  shift, and go to state 194


State 164

   77 var: ALPHA ARRAY ALPHA ASSIGN ALPHA .
   78    | ALPHA ARRAY ALPHA ASSIGN ALPHA . ARRAY ALPHA

    ARRAY  shift, and go to state 195

    $default  reduce using rule 77 (var)


State 165

   79 var: ALPHA ARRAY ALPHA ASSIGN ESCAPE . ALPHA
   80    | ALPHA ARRAY ALPHA ASSIGN ESCAPE . DIGIT

    DIGIT  shift, and go to state 196
    ALPHA  shift, and go to state 197


State 166

   34 var: INT ALPHA ASSIGN DIGIT operation .

    $default  reduce using rule 34 (var)


State 167

   45 var: INT ALPHA ASSIGN ALPHA ARRAY . DIGIT
   47    | INT ALPHA ASSIGN ALPHA ARRAY . ALPHA

    DIGIT  shift, and go to state 198
    ALPHA  shift, and go to state 199


State 168

   35 var: INT ALPHA ASSIGN ALPHA operation .

    $default  reduce using rule 35 (var)


State 169

   43 var: INT ALPHA ASSIGN CONVERT OPEN_P . ALPHA CLOSE_P

    ALPHA  shift, and go to state 200


State 170

   44 var: INT ALPHA ASSIGN LENGTH OPEN_P . ALPHA CLOSE_P

    ALPHA  shift, and go to state 201


State 171

   40 var: INT ALPHA ARRAY DIGIT ASSIGN . digit_array

    DIGIT  shift, and go to state 202

    digit_array  go to state 203


State 172

   46 var: STRING ALPHA ASSIGN ALPHA ARRAY . DIGIT
   48    | STRING ALPHA ASSIGN ALPHA ARRAY . ALPHA

    DIGIT  shift, and go to state 204
    ALPHA  shift, and go to state 205


State 173

   41 var: STRING ALPHA ARRAY DIGIT ASSIGN . alpha_array

    STRING_VALUE  shift, and go to state 206

    alpha_array  go to state 207


State 174

   50 var: CHAR ALPHA ASSIGN ALPHA ARRAY . DIGIT
   51    | CHAR ALPHA ASSIGN ALPHA ARRAY . ALPHA

    DIGIT  shift, and go to state 208
    ALPHA  shift, and go to state 209


State 175

   39 var: CHAR ALPHA ASSIGN ESCAPE DIGIT .

    $default  reduce using rule 39 (var)


State 176

   38 var: CHAR ALPHA ASSIGN ESCAPE ALPHA .

    $default  reduce using rule 38 (var)


State 177

   42 var: CHAR ALPHA ARRAY DIGIT ASSIGN . char_array

    ESCAPE  shift, and go to state 210

    char_array  go to state 211


State 178

   98 rule: OPEN_P rule operator rule . CLOSE_P

    CLOSE_P  shift, and go to state 212


State 179

   24 program: OPEN_P rule operator rule CLOSE_P . CONDITIONAL WHILE EXEC program END_EXEC program
   25        | OPEN_P rule operator rule CLOSE_P . CONDITIONAL IF EXEC program END_EXEC program
   26        | OPEN_P rule operator rule CLOSE_P . CONDITIONAL IF EXEC program END_EXEC ELSE EXEC program END_EXEC program

    CONDITIONAL  shift, and go to state 213


State 180

   20 program: RETURN ALPHA ARRAY DIGIT END .

    $default  reduce using rule 20 (program)


State 181

   21 program: RETURN ALPHA ARRAY ALPHA END .

    $default  reduce using rule 21 (program)


State 182

   28 get: STDIN OPEN_P ALPHA COMMA DIGIT . CLOSE_P END

    CLOSE_P  shift, and go to state 214


State 183

   33 out: ESCAPE ALPHA ESCAPE out .

    $default  reduce using rule 33 (out)


State 184

   30 out: ESCAPE SPACE_ALPHA ESCAPE out .

    $default  reduce using rule 30 (out)


State 185

   10 params: type ALPHA COMMA params .

    $default  reduce using rule 10 (params)


State 186

    3 function: INT FUNCTION ALPHA OPEN_P params CLOSE_P EXEC program . END_EXEC

    END_EXEC  shift, and go to state 215


State 187

    4 function: STRING FUNCTION ALPHA OPEN_P params CLOSE_P EXEC program . END_EXEC

    END_EXEC  shift, and go to state 216


State 188

    5 function: CHAR FUNCTION ALPHA OPEN_P params CLOSE_P EXEC program . END_EXEC

    END_EXEC  shift, and go to state 217


State 189

   67 var: ALPHA ASSIGN CONVERT OPEN_P ALPHA CLOSE_P .

    $default  reduce using rule 67 (var)


State 190

   68 var: ALPHA ASSIGN LENGTH OPEN_P ALPHA CLOSE_P .

    $default  reduce using rule 68 (var)


State 191

   81 operation: op DIGIT operation .

    $default  reduce using rule 81 (operation)


State 192

   82 operation: op ALPHA operation .

    $default  reduce using rule 82 (operation)


State 193

   75 var: ALPHA ARRAY DIGIT ASSIGN ESCAPE DIGIT .

    $default  reduce using rule 75 (var)


State 194

   74 var: ALPHA ARRAY DIGIT ASSIGN ESCAPE ALPHA .

    $default  reduce using rule 74 (var)


State 195

   78 var: ALPHA ARRAY ALPHA ASSIGN ALPHA ARRAY . ALPHA

    ALPHA  shift, and go to state 218


State 196

   80 var: ALPHA ARRAY ALPHA ASSIGN ESCAPE DIGIT .

    $default  reduce using rule 80 (var)


State 197

   79 var: ALPHA ARRAY ALPHA ASSIGN ESCAPE ALPHA .

    $default  reduce using rule 79 (var)


State 198

   45 var: INT ALPHA ASSIGN ALPHA ARRAY DIGIT .

    $default  reduce using rule 45 (var)


State 199

   47 var: INT ALPHA ASSIGN ALPHA ARRAY ALPHA .

    $default  reduce using rule 47 (var)


State 200

   43 var: INT ALPHA ASSIGN CONVERT OPEN_P ALPHA . CLOSE_P

    CLOSE_P  shift, and go to state 219


State 201

   44 var: INT ALPHA ASSIGN LENGTH OPEN_P ALPHA . CLOSE_P

    CLOSE_P  shift, and go to state 220


State 202

   92 digit_array: DIGIT . COMMA digit_array
   93            | DIGIT .

    COMMA  shift, and go to state 221

    $default  reduce using rule 93 (digit_array)


State 203

   40 var: INT ALPHA ARRAY DIGIT ASSIGN digit_array .

    $default  reduce using rule 40 (var)


State 204

   46 var: STRING ALPHA ASSIGN ALPHA ARRAY DIGIT .

    $default  reduce using rule 46 (var)


State 205

   48 var: STRING ALPHA ASSIGN ALPHA ARRAY ALPHA .

    $default  reduce using rule 48 (var)


State 206

   90 alpha_array: STRING_VALUE . COMMA alpha_array
   91            | STRING_VALUE .

    COMMA  shift, and go to state 222

    $default  reduce using rule 91 (alpha_array)


State 207

   41 var: STRING ALPHA ARRAY DIGIT ASSIGN alpha_array .

    $default  reduce using rule 41 (var)


State 208

   50 var: CHAR ALPHA ASSIGN ALPHA ARRAY DIGIT .

    $default  reduce using rule 50 (var)


State 209

   51 var: CHAR ALPHA ASSIGN ALPHA ARRAY ALPHA .

    $default  reduce using rule 51 (var)


State 210

   94 char_array: ESCAPE . ALPHA COMMA char_array
   95           | ESCAPE . ALPHA
   96           | ESCAPE . DIGIT COMMA char_array
   97           | ESCAPE . DIGIT

    DIGIT  shift, and go to state 223
    ALPHA  shift, and go to state 224


State 211

   42 var: CHAR ALPHA ARRAY DIGIT ASSIGN char_array .

    $default  reduce using rule 42 (var)


State 212

   98 rule: OPEN_P rule operator rule CLOSE_P .

    $default  reduce using rule 98 (rule)


State 213

   24 program: OPEN_P rule operator rule CLOSE_P CONDITIONAL . WHILE EXEC program END_EXEC program
   25        | OPEN_P rule operator rule CLOSE_P CONDITIONAL . IF EXEC program END_EXEC program
   26        | OPEN_P rule operator rule CLOSE_P CONDITIONAL . IF EXEC program END_EXEC ELSE EXEC program END_EXEC program

    IF     shift, and go to state 225
    WHILE  shift, and go to state 226


State 214

   28 get: STDIN OPEN_P ALPHA COMMA DIGIT CLOSE_P . END

    END  shift, and go to state 227


State 215

    3 function: INT FUNCTION ALPHA OPEN_P params CLOSE_P EXEC program END_EXEC .

    $default  reduce using rule 3 (function)


State 216

    4 function: STRING FUNCTION ALPHA OPEN_P params CLOSE_P EXEC program END_EXEC .

    $default  reduce using rule 4 (function)


State 217

    5 function: CHAR FUNCTION ALPHA OPEN_P params CLOSE_P EXEC program END_EXEC .

    $default  reduce using rule 5 (function)


State 218

   78 var: ALPHA ARRAY ALPHA ASSIGN ALPHA ARRAY ALPHA .

    $default  reduce using rule 78 (var)


State 219

   43 var: INT ALPHA ASSIGN CONVERT OPEN_P ALPHA CLOSE_P .

    $default  reduce using rule 43 (var)


State 220

   44 var: INT ALPHA ASSIGN LENGTH OPEN_P ALPHA CLOSE_P .

    $default  reduce using rule 44 (var)


State 221

   92 digit_array: DIGIT COMMA . digit_array

    DIGIT  shift, and go to state 202

    digit_array  go to state 228


State 222

   90 alpha_array: STRING_VALUE COMMA . alpha_array

    STRING_VALUE  shift, and go to state 206

    alpha_array  go to state 229


State 223

   96 char_array: ESCAPE DIGIT . COMMA char_array
   97           | ESCAPE DIGIT .

    COMMA  shift, and go to state 230

    $default  reduce using rule 97 (char_array)


State 224

   94 char_array: ESCAPE ALPHA . COMMA char_array
   95           | ESCAPE ALPHA .

    COMMA  shift, and go to state 231

    $default  reduce using rule 95 (char_array)


State 225

   25 program: OPEN_P rule operator rule CLOSE_P CONDITIONAL IF . EXEC program END_EXEC program
   26        | OPEN_P rule operator rule CLOSE_P CONDITIONAL IF . EXEC program END_EXEC ELSE EXEC program END_EXEC program

    EXEC  shift, and go to state 232


State 226

   24 program: OPEN_P rule operator rule CLOSE_P CONDITIONAL WHILE . EXEC program END_EXEC program

    EXEC  shift, and go to state 233


State 227

   28 get: STDIN OPEN_P ALPHA COMMA DIGIT CLOSE_P END .

    $default  reduce using rule 28 (get)


State 228

   92 digit_array: DIGIT COMMA digit_array .

    $default  reduce using rule 92 (digit_array)


State 229

   90 alpha_array: STRING_VALUE COMMA alpha_array .

    $default  reduce using rule 90 (alpha_array)


State 230

   96 char_array: ESCAPE DIGIT COMMA . char_array

    ESCAPE  shift, and go to state 210

    char_array  go to state 234


State 231

   94 char_array: ESCAPE ALPHA COMMA . char_array

    ESCAPE  shift, and go to state 210

    char_array  go to state 235


State 232

   25 program: OPEN_P rule operator rule CLOSE_P CONDITIONAL IF EXEC . program END_EXEC program
   26        | OPEN_P rule operator rule CLOSE_P CONDITIONAL IF EXEC . program END_EXEC ELSE EXEC program END_EXEC program

    ALPHA   shift, and go to state 16
    INT     shift, and go to state 17
    STRING  shift, and go to state 18
    CHAR    shift, and go to state 19
    OPEN_P  shift, and go to state 20
    RETURN  shift, and go to state 21
    STDIN   shift, and go to state 22
    STDOUT  shift, and go to state 23

    $default  reduce using rule 27 (program)

    call     go to state 24
    program  go to state 236
    get      go to state 26
    var      go to state 27


State 233

   24 program: OPEN_P rule operator rule CLOSE_P CONDITIONAL WHILE EXEC . program END_EXEC program

    ALPHA   shift, and go to state 16
    INT     shift, and go to state 17
    STRING  shift, and go to state 18
    CHAR    shift, and go to state 19
    OPEN_P  shift, and go to state 20
    RETURN  shift, and go to state 21
    STDIN   shift, and go to state 22
    STDOUT  shift, and go to state 23

    $default  reduce using rule 27 (program)

    call     go to state 24
    program  go to state 237
    get      go to state 26
    var      go to state 27


State 234

   96 char_array: ESCAPE DIGIT COMMA char_array .

    $default  reduce using rule 96 (char_array)


State 235

   94 char_array: ESCAPE ALPHA COMMA char_array .

    $default  reduce using rule 94 (char_array)


State 236

   25 program: OPEN_P rule operator rule CLOSE_P CONDITIONAL IF EXEC program . END_EXEC program
   26        | OPEN_P rule operator rule CLOSE_P CONDITIONAL IF EXEC program . END_EXEC ELSE EXEC program END_EXEC program

    END_EXEC  shift, and go to state 238


State 237

   24 program: OPEN_P rule operator rule CLOSE_P CONDITIONAL WHILE EXEC program . END_EXEC program

    END_EXEC  shift, and go to state 239


State 238

   25 program: OPEN_P rule operator rule CLOSE_P CONDITIONAL IF EXEC program END_EXEC . program
   26        | OPEN_P rule operator rule CLOSE_P CONDITIONAL IF EXEC program END_EXEC . ELSE EXEC program END_EXEC program

    ALPHA   shift, and go to state 16
    INT     shift, and go to state 17
    STRING  shift, and go to state 18
    CHAR    shift, and go to state 19
    OPEN_P  shift, and go to state 20
    ELSE    shift, and go to state 240
    RETURN  shift, and go to state 21
    STDIN   shift, and go to state 22
    STDOUT  shift, and go to state 23

    $default  reduce using rule 27 (program)

    call     go to state 24
    program  go to state 241
    get      go to state 26
    var      go to state 27


State 239

   24 program: OPEN_P rule operator rule CLOSE_P CONDITIONAL WHILE EXEC program END_EXEC . program

    ALPHA   shift, and go to state 16
    INT     shift, and go to state 17
    STRING  shift, and go to state 18
    CHAR    shift, and go to state 19
    OPEN_P  shift, and go to state 20
    RETURN  shift, and go to state 21
    STDIN   shift, and go to state 22
    STDOUT  shift, and go to state 23

    $default  reduce using rule 27 (program)

    call     go to state 24
    program  go to state 242
    get      go to state 26
    var      go to state 27


State 240

   26 program: OPEN_P rule operator rule CLOSE_P CONDITIONAL IF EXEC program END_EXEC ELSE . EXEC program END_EXEC program

    EXEC  shift, and go to state 243


State 241

   25 program: OPEN_P rule operator rule CLOSE_P CONDITIONAL IF EXEC program END_EXEC program .

    $default  reduce using rule 25 (program)


State 242

   24 program: OPEN_P rule operator rule CLOSE_P CONDITIONAL WHILE EXEC program END_EXEC program .

    $default  reduce using rule 24 (program)


State 243

   26 program: OPEN_P rule operator rule CLOSE_P CONDITIONAL IF EXEC program END_EXEC ELSE EXEC . program END_EXEC program

    ALPHA   shift, and go to state 16
    INT     shift, and go to state 17
    STRING  shift, and go to state 18
    CHAR    shift, and go to state 19
    OPEN_P  shift, and go to state 20
    RETURN  shift, and go to state 21
    STDIN   shift, and go to state 22
    STDOUT  shift, and go to state 23

    $default  reduce using rule 27 (program)

    call     go to state 24
    program  go to state 244
    get      go to state 26
    var      go to state 27


State 244

   26 program: OPEN_P rule operator rule CLOSE_P CONDITIONAL IF EXEC program END_EXEC ELSE EXEC program . END_EXEC program

    END_EXEC  shift, and go to state 245


State 245

   26 program: OPEN_P rule operator rule CLOSE_P CONDITIONAL IF EXEC program END_EXEC ELSE EXEC program END_EXEC . program

    ALPHA   shift, and go to state 16
    INT     shift, and go to state 17
    STRING  shift, and go to state 18
    CHAR    shift, and go to state 19
    OPEN_P  shift, and go to state 20
    RETURN  shift, and go to state 21
    STDIN   shift, and go to state 22
    STDOUT  shift, and go to state 23

    $default  reduce using rule 27 (program)

    call     go to state 24
    program  go to state 246
    get      go to state 26
    var      go to state 27


State 246

   26 program: OPEN_P rule operator rule CLOSE_P CONDITIONAL IF EXEC program END_EXEC ELSE EXEC program END_EXEC program .

    $default  reduce using rule 26 (program)
